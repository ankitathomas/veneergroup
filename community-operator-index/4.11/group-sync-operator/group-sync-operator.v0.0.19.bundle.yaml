image: quay.io/openshift-community-operators/group-sync-operator@sha256:a50b0e7b089088d6fbf753dc64d8a73eaae82ef6e68c0a0e7015e8b841b27a87
name: group-sync-operator.v0.0.19
package: group-sync-operator
properties:
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: GroupSync
      version: v1alpha1
  - type: olm.package
    value:
      packageName: group-sync-operator
      version: 0.0.19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Imdyb3VwLXN5bmMtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3MtbW9uaXRvciJ9LCJzcGVjIjp7ImVuZHBvaW50cyI6W3siYmVhcmVyVG9rZW5GaWxlIjoiL3Zhci9ydW4vc2VjcmV0cy9rdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3Rva2VuIiwiaW50ZXJ2YWwiOiIzMHMiLCJwb3J0IjoiaHR0cHMiLCJzY2hlbWUiOiJodHRwcyIsInRsc0NvbmZpZyI6eyJjYUZpbGUiOiIvZXRjL3Byb21ldGhldXMvY29uZmlnbWFwcy9zZXJ2aW5nLWNlcnRzLWNhLWJ1bmRsZS9zZXJ2aWNlLWNhLmNydCIsInNlcnZlck5hbWUiOiJncm91cC1zeW5jLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UuZ3JvdXAtc3luYy1vcGVyYXRvci5zdmMifX1dLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6Imdyb3VwLXN5bmMtb3BlcmF0b3ItY2VydHMifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJncm91cC1zeW5jLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiZ3JvdXAtc3luYy1vcGVyYXRvci1tZXRyaWNzLXJlYWRlciJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIl0sInZlcmJzIjpbImdldCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJncm91cC1zeW5jLW9wZXJhdG9yLXByb21ldGhldXMtazhzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJlbmRwb2ludHMiLCJwb2RzIiwic2VydmljZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiZ3JvdXAtc3luYy1vcGVyYXRvci1wcm9tZXRoZXVzLWs4cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Imdyb3VwLXN5bmMtb3BlcmF0b3ItcHJvbWV0aGV1cy1rOHMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/openshift-community-operators/group-sync-operator@sha256:a50b0e7b089088d6fbf753dc64d8a73eaae82ef6e68c0a0e7015e8b841b27a87
    name: ""
  - image: quay.io/redhat-cop/group-sync-operator@sha256:0cbb2994314504195230220043af472d88fa5214d3d0aa5126e761a11a4a0e6c
    name: quay.io/redhat-cop/group-sync-operator
  - image: quay.io/redhat-cop/kube-rbac-proxy@sha256:c68135620167c41e3d9f6c1d2ca1eb8fa24312b86186d09b8010656b9d25fb47
    name: quay.io/redhat-cop/kube-rbac-proxy
schema: olm.bundle
