image: quay.io/openshift-community-operators/multicluster-operators-subscription@sha256:3bc76999ece42fcb3acd913b32be3fa0e0da056832922819b81119dcfb5f1582
name: multicluster-operators-subscription.v0.3.0
package: multicluster-operators-subscription
properties:
  - type: olm.gvk
    value:
      group: app.k8s.io
      kind: Application
      version: v1beta1
  - type: olm.gvk
    value:
      group: apps.open-cluster-management.io
      kind: Channel
      version: v1
  - type: olm.gvk
    value:
      group: apps.open-cluster-management.io
      kind: Deployable
      version: v1
  - type: olm.gvk
    value:
      group: apps.open-cluster-management.io
      kind: GitOpsCluster
      version: v1alpha1
  - type: olm.gvk
    value:
      group: apps.open-cluster-management.io
      kind: HelmRelease
      version: v1
  - type: olm.gvk
    value:
      group: apps.open-cluster-management.io
      kind: PlacementRule
      version: v1
  - type: olm.gvk
    value:
      group: apps.open-cluster-management.io
      kind: Subscription
      version: v1
  - type: olm.package
    value:
      packageName: multicluster-operators-subscription
      version: 0.3.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImdpdG9wc2NsdXN0ZXJzLmFwcHMub3Blbi1jbHVzdGVyLW1hbmFnZW1lbnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImFwcHMub3Blbi1jbHVzdGVyLW1hbmFnZW1lbnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiR2l0T3BzQ2x1c3RlciIsImxpc3RLaW5kIjoiR2l0T3BzQ2x1c3Rlckxpc3QiLCJwbHVyYWwiOiJnaXRvcHNjbHVzdGVycyIsInNpbmd1bGFyIjoiZ2l0b3BzY2x1c3RlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkdpdE9wc0NsdXN0ZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGdpdG9wc2NsdXN0ZXJzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiR2l0T3BzQ2x1c3RlclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBHaXRPcHNDbHVzdGVyLiIsInByb3BlcnRpZXMiOnsiYXJnb1NlcnZlciI6eyJkZXNjcmlwdGlvbiI6IkFyZ29TZXJ2ZXJTcGVjIGRlZmluZXMgYSBhcmdvIHNlcnZlciBpbnN0YWxsZWQgaW4gYSBtYW5hZ2VkIGNsdXN0ZXIuIiwicHJvcGVydGllcyI6eyJhcmdvTmFtZXNwYWNlIjp7InR5cGUiOiJzdHJpbmcifSwiY2x1c3RlciI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhcmdvTmFtZXNwYWNlIiwiY2x1c3RlciJdLCJ0eXBlIjoib2JqZWN0In0sInBsYWNlbWVudFJlZiI6eyJkZXNjcmlwdGlvbiI6Ik9iamVjdFJlZmVyZW5jZSBjb250YWlucyBlbm91Z2ggaW5mb3JtYXRpb24gdG8gbGV0IHlvdSBpbnNwZWN0IG9yIG1vZGlmeSB0aGUgcmVmZXJyZWQgb2JqZWN0LiAtLS0gTmV3IHVzZXMgb2YgdGhpcyB0eXBlIGFyZSBkaXNjb3VyYWdlZCBiZWNhdXNlIG9mIGRpZmZpY3VsdHkgZGVzY3JpYmluZyBpdHMgdXNhZ2Ugd2hlbiBlbWJlZGRlZCBpbiBBUElzLiAgMS4gSWdub3JlZCBmaWVsZHMuICBJdCBpbmNsdWRlcyBtYW55IGZpZWxkcyB3aGljaCBhcmUgbm90IGdlbmVyYWxseSBob25vcmVkLiAgRm9yIGluc3RhbmNlLCBSZXNvdXJjZVZlcnNpb24gYW5kIEZpZWxkUGF0aCBhcmUgYm90aCB2ZXJ5IHJhcmVseSB2YWxpZCBpbiBhY3R1YWwgdXNhZ2UuICAyLiBJbnZhbGlkIHVzYWdlIGhlbHAuICBJdCBpcyBpbXBvc3NpYmxlIHRvIGFkZCBzcGVjaWZpYyBoZWxwIGZvciBpbmRpdmlkdWFsIHVzYWdlLiAgSW4gbW9zdCBlbWJlZGRlZCB1c2FnZXMsIHRoZXJlIGFyZSBwYXJ0aWN1bGFyICAgICByZXN0cmljdGlvbnMgbGlrZSwgXCJtdXN0IHJlZmVyIG9ubHkgdG8gdHlwZXMgQSBhbmQgQlwiIG9yIFwiVUlEIG5vdCBob25vcmVkXCIgb3IgXCJuYW1lIG11c3QgYmUgcmVzdHJpY3RlZFwiLiAgICAgVGhvc2UgY2Fubm90IGJlIHdlbGwgZGVzY3JpYmVkIHdoZW4gZW1iZWRkZWQuICAzLiBJbmNvbnNpc3RlbnQgdmFsaWRhdGlvbi4gIEJlY2F1c2UgdGhlIHVzYWdlcyBhcmUgZGlmZmVyZW50LCB0aGUgdmFsaWRhdGlvbiBydWxlcyBhcmUgZGlmZmVyZW50IGJ5IHVzYWdlLCB3aGljaCBtYWtlcyBpdCBoYXJkIGZvciB1c2VycyB0byBwcmVkaWN0IHdoYXQgd2lsbCBoYXBwZW4uICA0LiBUaGUgZmllbGRzIGFyZSBib3RoIGltcHJlY2lzZSBhbmQgb3Zlcmx5IHByZWNpc2UuICBLaW5kIGlzIG5vdCBhIHByZWNpc2UgbWFwcGluZyB0byBhIFVSTC4gVGhpcyBjYW4gcHJvZHVjZSBhbWJpZ3VpdHkgICAgIGR1cmluZyBpbnRlcnByZXRhdGlvbiBhbmQgcmVxdWlyZSBhIFJFU1QgbWFwcGluZy4gIEluIG1vc3QgY2FzZXMsIHRoZSBkZXBlbmRlbmN5IGlzIG9uIHRoZSBncm91cCxyZXNvdXJjZSB0dXBsZSAgICAgYW5kIHRoZSB2ZXJzaW9uIG9mIHRoZSBhY3R1YWwgc3RydWN0IGlzIGlycmVsZXZhbnQuICA1LiBXZSBjYW5ub3QgZWFzaWx5IGNoYW5nZSBpdC4gIEJlY2F1c2UgdGhpcyB0eXBlIGlzIGVtYmVkZGVkIGluIG1hbnkgbG9jYXRpb25zLCB1cGRhdGVzIHRvIHRoaXMgdHlwZSAgICAgd2lsbCBhZmZlY3QgbnVtZXJvdXMgc2NoZW1hcy4gIERvbid0IG1ha2UgbmV3IEFQSXMgZW1iZWQgYW4gdW5kZXJzcGVjaWZpZWQgQVBJIHR5cGUgdGhleSBkbyBub3QgY29udHJvbC4gSW5zdGVhZCBvZiB1c2luZyB0aGlzIHR5cGUsIGNyZWF0ZSBhIGxvY2FsbHkgcHJvdmlkZWQgYW5kIHVzZWQgdHlwZSB0aGF0IGlzIHdlbGwtZm9jdXNlZCBvbiB5b3VyIHJlZmVyZW5jZS4gRm9yIGV4YW1wbGUsIFNlcnZpY2VSZWZlcmVuY2VzIGZvciBhZG1pc3Npb24gcmVnaXN0cmF0aW9uOiBodHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy9hcGkvYmxvYi9yZWxlYXNlLTEuMTcvYWRtaXNzaW9ucmVnaXN0cmF0aW9uL3YxL3R5cGVzLmdvI0w1MzMgLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSSB2ZXJzaW9uIG9mIHRoZSByZWZlcmVudC4iLCJ0eXBlIjoic3RyaW5nIn0sImZpZWxkUGF0aCI6eyJkZXNjcmlwdGlvbiI6IklmIHJlZmVycmluZyB0byBhIHBpZWNlIG9mIGFuIG9iamVjdCBpbnN0ZWFkIG9mIGFuIGVudGlyZSBvYmplY3QsIHRoaXMgc3RyaW5nIHNob3VsZCBjb250YWluIGEgdmFsaWQgSlNPTi9HbyBmaWVsZCBhY2Nlc3Mgc3RhdGVtZW50LCBzdWNoIGFzIGRlc2lyZWRTdGF0ZS5tYW5pZmVzdC5jb250YWluZXJzWzJdLiBGb3IgZXhhbXBsZSwgaWYgdGhlIG9iamVjdCByZWZlcmVuY2UgaXMgdG8gYSBjb250YWluZXIgd2l0aGluIGEgcG9kLCB0aGlzIHdvdWxkIHRha2Ugb24gYSB2YWx1ZSBsaWtlOiBcInNwZWMuY29udGFpbmVyc3tuYW1lfVwiICh3aGVyZSBcIm5hbWVcIiByZWZlcnMgdG8gdGhlIG5hbWUgb2YgdGhlIGNvbnRhaW5lciB0aGF0IHRyaWdnZXJlZCB0aGUgZXZlbnQpIG9yIGlmIG5vIGNvbnRhaW5lciBuYW1lIGlzIHNwZWNpZmllZCBcInNwZWMuY29udGFpbmVyc1syXVwiIChjb250YWluZXIgd2l0aCBpbmRleCAyIGluIHRoaXMgcG9kKS4gVGhpcyBzeW50YXggaXMgY2hvc2VuIG9ubHkgdG8gaGF2ZSBzb21lIHdlbGwtZGVmaW5lZCB3YXkgb2YgcmVmZXJlbmNpbmcgYSBwYXJ0IG9mIGFuIG9iamVjdC4gVE9ETzogdGhpcyBkZXNpZ24gaXMgbm90IGZpbmFsIGFuZCB0aGlzIGZpZWxkIGlzIHN1YmplY3QgdG8gY2hhbmdlIGluIHRoZSBmdXR1cmUuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXNwYWNlcy8iLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZmljIHJlc291cmNlVmVyc2lvbiB0byB3aGljaCB0aGlzIHJlZmVyZW5jZSBpcyBtYWRlLCBpZiBhbnkuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjY29uY3VycmVuY3ktY29udHJvbC1hbmQtY29uc2lzdGVuY3kiLCJ0eXBlIjoic3RyaW5nIn0sInVpZCI6eyJkZXNjcmlwdGlvbiI6IlVJRCBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI3VpZHMiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJhcmdvU2VydmVyIiwicGxhY2VtZW50UmVmIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiR2l0T3BzQ2x1c3RlclN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBHaXRPcHNDbHVzdGVyIiwicHJvcGVydGllcyI6eyJsYXN0VXBkYXRlVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsidHlwZSI6InN0cmluZyJ9LCJwaGFzZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/open-cluster-management/multicluster-operators-application:2.3.0
    name: ""
  - image: quay.io/open-cluster-management/multicluster-operators-channel:2.3.0
    name: ""
  - image: quay.io/open-cluster-management/multicluster-operators-deployable:2.3.0
    name: ""
  - image: quay.io/open-cluster-management/multicluster-operators-placementrule:2.3.0
    name: ""
  - image: quay.io/open-cluster-management/multicluster-operators-subscription:2.3.0
    name: ""
  - image: quay.io/openshift-community-operators/multicluster-operators-subscription@sha256:3bc76999ece42fcb3acd913b32be3fa0e0da056832922819b81119dcfb5f1582
    name: ""
schema: olm.bundle
