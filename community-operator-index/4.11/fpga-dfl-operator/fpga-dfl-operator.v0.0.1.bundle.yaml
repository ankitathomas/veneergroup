image: quay.io/openshift-community-operators/fpga-dfl-operator@sha256:a6840fda0589b7dcf8cdba5b5585995a12d086f214af3a83dd0eb8ba7a38aacc
name: fpga-dfl-operator.v0.0.1
package: fpga-dfl-operator
properties:
  - type: olm.gvk
    value:
      group: fpga.silicom.dk
      kind: FpgaDflCluster
      version: v1alpha1
  - type: olm.gvk
    value:
      group: fpga.silicom.dk
      kind: FpgaDflNode
      version: v1alpha1
  - type: olm.gvk
    value:
      group: fpga.silicom.dk
      kind: FpgaDflOperator
      version: v1alpha1
  - type: olm.package
    value:
      packageName: fpga-dfl-operator
      version: 0.0.1
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiZnBnYS1kZmwtY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJmcGdhLWRmbC1mcGdhZGZsY29uZmlnLWVkaXRvci1yb2xlIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiZnBnYS5zaWxpY29tLmRrIl0sInJlc291cmNlcyI6WyJmcGdhZGZsY29uZmlncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJmcGdhLnNpbGljb20uZGsiXSwicmVzb3VyY2VzIjpbImZwZ2FkZmxjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJmcGdhLWRmbC1mcGdhZGZsY29uZmlnLXZpZXdlci1yb2xlIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiZnBnYS5zaWxpY29tLmRrIl0sInJlc291cmNlcyI6WyJmcGdhZGZsY29uZmlncyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiZnBnYS5zaWxpY29tLmRrIl0sInJlc291cmNlcyI6WyJmcGdhZGZsY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJmcGdhLWRmbC1mcGdhZGZsb3BlcmF0b3ItZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJmcGdhLnNpbGljb20uZGsiXSwicmVzb3VyY2VzIjpbImZwZ2FkZmxvcGVyYXRvcnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiZnBnYS5zaWxpY29tLmRrIl0sInJlc291cmNlcyI6WyJmcGdhZGZsb3BlcmF0b3JzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJmcGdhLWRmbC1mcGdhZGZsb3BlcmF0b3Itdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJmcGdhLnNpbGljb20uZGsiXSwicmVzb3VyY2VzIjpbImZwZ2FkZmxvcGVyYXRvcnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImZwZ2Euc2lsaWNvbS5kayJdLCJyZXNvdXJjZXMiOlsiZnBnYWRmbG9wZXJhdG9ycy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJmcGdhLWRmbC1tYW5hZ2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlTmFtZXMiOlsicHJpdmlsZWdlZCJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbInVzZSJdfSx7ImFwaUdyb3VwcyI6WyJmcGdhLnNpbGljb20uZGsiXSwicmVzb3VyY2VzIjpbIioiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiZnBnYS5zaWxpY29tLmRrIl0sInJlc291cmNlcyI6WyJmcGdhZGZsbm9kZXMiLCJmcGdhZGZsbm9kZXMvc3RhdHVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImZwZ2Euc2lsaWNvbS5kayJdLCJyZXNvdXJjZXMiOlsiZnBnYWRmbG9wZXJhdG9ycy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJmcGdhLnNpbGljb20uZGsiXSwicmVzb3VyY2VzIjpbImZwZ2FkZmxvcGVyYXRvcnMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5Lm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZU5hbWVzIjpbInByaXZpbGVnZWQiXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5Y29udGV4dGNvbnN0cmFpbnRzIl0sInZlcmJzIjpbInVzZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiZnBnYS1kZmwtbWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImZwZ2FkZmxjbHVzdGVycy5mcGdhLnNpbGljb20uZGsifSwic3BlYyI6eyJncm91cCI6ImZwZ2Euc2lsaWNvbS5kayIsIm5hbWVzIjp7ImtpbmQiOiJGcGdhRGZsQ2x1c3RlciIsImxpc3RLaW5kIjoiRnBnYURmbENsdXN0ZXJMaXN0IiwicGx1cmFsIjoiZnBnYWRmbGNsdXN0ZXJzIiwic2luZ3VsYXIiOiJmcGdhZGZsY2x1c3RlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkZwZ2FEZmxDbHVzdGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBGcGdhRGZsY2x1c3RlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJGcGdhRGZsQ2x1c3RlclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBGcGdhRGZsQ2x1c3RlciIsInByb3BlcnRpZXMiOnsiZHJhaW5Ta2lwIjp7InR5cGUiOiJib29sZWFuIn0sImRyeXJ1biI6eyJ0eXBlIjoiYm9vbGVhbiJ9LCJub2RlcyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgdGhlIG5vZGVzIHdpdGggdGhlaXIgZGV2aWNlcyB0byBiZSB1cGRhdGVkIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJmcGdhIjp7Iml0ZW1zIjp7InByb3BlcnRpZXMiOnsiUENJQWRkciI6eyJwYXR0ZXJuIjoiXlthLWZBLUYwLTldezR9OlthLWZBLUYwLTldezJ9OlswMV1bYS1mQS1GMC05XVxcLlswLTddJCIsInR5cGUiOiJzdHJpbmcifSwiY2hlY2tzdW0iOnsiZGVzY3JpcHRpb24iOiJNRDUgY2hlY2tzdW0gdmVyaWZpZWQgYWdhaW5zdCBjYWxjdWxhdGVkIG9uZSBmcm9tIGRvd25sb2FkZWQgdXNlciBpbWFnZS4gT3B0aW9uYWwuIiwicGF0dGVybiI6Il5bYS1mQS1GMC05XXszMn0kIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VySW1hZ2VVUkwiOnsicGF0dGVybiI6IlthLXpBLVowLTlcXC5cXC1cXC9dKyIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIlBDSUFkZHIiLCJ1c2VySW1hZ2VVUkwiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaHNzaSI6eyJwcm9wZXJ0aWVzIjp7Ik1BQ3MiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJNQUMiOnsicGF0dGVybiI6Il5bYS1mMC05XXsyfTpbYS1mMC05XXsyfTpbYS1mMC05XXsyfTpbYS1mMC05XXsyfTpbYS1mMC05XXsyfTpbYS1mMC05XXsyfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJNQUMiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiY2hlY2tzdW0iOnsiZGVzY3JpcHRpb24iOiJNRDUgY2hlY2tzdW0gdmVyaWZpZWQgYWdhaW5zdCBjYWxjdWxhdGVkIG9uZSBmcm9tIGRvd25sb2FkZWQgbnZtdXBkYXRlIHBhY2thZ2UuIE9wdGlvbmFsLiIsInBhdHRlcm4iOiJeW2EtZkEtRjAtOV17MzJ9JCIsInR5cGUiOiJzdHJpbmcifSwiZmlybXdhcmVVUkwiOnsicGF0dGVybiI6IlthLXpBLVowLTlcXC5cXC1cXC9dKyIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIk1BQ3MiLCJmaXJtd2FyZVVSTCJdLCJ0eXBlIjoib2JqZWN0In0sIm5vZGVOYW1lIjp7InBhdHRlcm4iOiJbYS16MC05XFwuXFwtXSsiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJub2RlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsibm9kZXMiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJGcGdhRGZsQ2x1c3RlclN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBGcGdhRGZsQ2x1c3RlciIsInByb3BlcnRpZXMiOnsibGFzdFN5bmNFcnJvciI6eyJ0eXBlIjoic3RyaW5nIn0sInN5bmNTdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0ZXMgdGhlIHN5bmNocm9uaXphdGlvbiBzdGF0dXMgb2YgdGhlIENSIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImZwZ2FkZmxvcGVyYXRvcnMuZnBnYS5zaWxpY29tLmRrIn0sInNwZWMiOnsiZ3JvdXAiOiJmcGdhLnNpbGljb20uZGsiLCJuYW1lcyI6eyJraW5kIjoiRnBnYURmbE9wZXJhdG9yIiwibGlzdEtpbmQiOiJGcGdhRGZsT3BlcmF0b3JMaXN0IiwicGx1cmFsIjoiZnBnYWRmbG9wZXJhdG9ycyIsInNpbmd1bGFyIjoiZnBnYWRmbG9wZXJhdG9yIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiRnBnYURmbE9wZXJhdG9yIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBmcGdhZGZsb3BlcmF0b3JzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiRnBnYURmbE9wZXJhdG9yU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEZwZ2FEZmxPcGVyYXRvciIsInByb3BlcnRpZXMiOnsiZnBnYVBsdWdpbiI6eyJkZWZhdWx0IjoicXVheS5pby9zaWxpY29tL2ZwZ2EtZGZsLXBsdWdpbjowLjAuMSIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiJmcGdhLWRmbCIsInR5cGUiOiJzdHJpbmcifSwibmZkTmFtZXNwYWNlIjp7ImRlZmF1bHQiOiJvcGVuc2hpZnQtb3BlcmF0b3JzIiwidHlwZSI6InN0cmluZyJ9LCJzcm8iOnsicHJvcGVydGllcyI6eyJidWlsZCI6eyJkZWZhdWx0Ijp0cnVlLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjaGFydCI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJyZXBvc2l0b3J5Ijp7InByb3BlcnRpZXMiOnsiY2FGaWxlIjp7InR5cGUiOiJzdHJpbmcifSwiY2VydEZpbGUiOnsidHlwZSI6InN0cmluZyJ9LCJpbnNlY3VyZV9za2lwX3Rsc192ZXJpZnkiOnsiZGVmYXVsdCI6ZmFsc2UsInR5cGUiOiJib29sZWFuIn0sImtleUZpbGUiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwicGFzc3dvcmQiOnsidHlwZSI6InN0cmluZyJ9LCJ1cmwiOnsidHlwZSI6InN0cmluZyJ9LCJ1c2VybmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIiwidXJsIl0sInR5cGUiOiJvYmplY3QifSwidGFncyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ2ZXJzaW9uIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJyZXBvc2l0b3J5IiwidmVyc2lvbiJdLCJ0eXBlIjoib2JqZWN0In0sImRyaXZlclJlZ2lzdHJ5Ijp7ImRlZmF1bHQiOiJpbWFnZS1yZWdpc3RyeS5vcGVuc2hpZnQtaW1hZ2UtcmVnaXN0cnkuc3ZjOjUwMDAiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0Ijoib3BlbnNoaWZ0LW9wZXJhdG9ycyIsInR5cGUiOiJzdHJpbmcifSwic3JjSW1hZ2UiOnsiZGVmYXVsdCI6InF1YXkuaW8vc2lsaWNvbS9mcGdhLWRmbC1zcmM6bGF0ZXN0IiwidHlwZSI6InN0cmluZyJ9LCJzcmNTdmNQb3J0Ijp7ImRlZmF1bHQiOjMwMDEsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkZwZ2FEZmxPcGVyYXRvclN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBGcGdhRGZsT3BlcmF0b3IiLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
relatedImages:
  - image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
    name: ""
  - image: quay.io/openshift-community-operators/fpga-dfl-operator@sha256:a6840fda0589b7dcf8cdba5b5585995a12d086f214af3a83dd0eb8ba7a38aacc
    name: ""
  - image: quay.io/silicom/fpga-dfl-operator:0.0.1
    name: ""
schema: olm.bundle
