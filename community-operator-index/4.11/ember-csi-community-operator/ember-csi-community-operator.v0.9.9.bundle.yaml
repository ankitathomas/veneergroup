image: quay.io/openshift-community-operators/ember-csi-community-operator@sha256:5dce9b3018cfb300cd651c7980353cedc6617383d5c525e6a4a39ffb8e105774
name: ember-csi-community-operator.v0.9.9
package: ember-csi-community-operator
properties:
  - type: olm.gvk
    value:
      group: ember-csi.io
      kind: EmberStorageBackend
      version: v1alpha1
  - type: olm.package
    value:
      packageName: ember-csi-community-operator
      version: 0.9.9
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6ImVtYmVyY3Npcy5lbWJlci1jc2kuaW8ifSwic3BlYyI6eyJncm91cCI6ImVtYmVyLWNzaS5pbyIsIm5hbWVzIjp7ImtpbmQiOiJFbWJlclN0b3JhZ2VCYWNrZW5kIiwibGlzdEtpbmQiOiJFbWJlclN0b3JhZ2VCYWNrZW5kTGlzdCIsInBsdXJhbCI6ImVtYmVyY3NpcyIsInNpbmd1bGFyIjoiZW1iZXJjc2kifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJFbWJlclN0b3JhZ2VCYWNrZW5kIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBlbWJlcmNzaXMgQVBJIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
  - type: olm.bundle.object
    value:
      data: {"apiVersion":"operators.coreos.com/v1","kind":"ClusterServiceVersion","metadata":{"annotations":{"alm-examples":"[\n  {\n    \"apiVersion\": \"ember-csi.io/v1alpha1\",\n    \"kind\": \"EmberStorageBackend\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": {\n      \"config\": {\n        \"envVars\": {\n          \"X_CSI_PERSISTENCE_CONFIG\": {\n            \"storage\": \"crd\"\n          },\n          \"X_CSI_DEBUG_MODE\": \"\",\n          \"X_CSI_DEFAULT_MOUNT_FS\": \"ext4\",\n          \"X_CSI_EMBER_CONFIG\": {\n            \"grpc_workers\": 30,\n            \"disable_logs\": false,\n            \"plugin_name\": \"\",\n            \"slow_operations\": true,\n            \"disabled\": [],\n            \"enable_probe\": false,\n            \"debug\": false,\n            \"user_id\": \"ember_csi.io\",\n            \"project_id\": \"ember_csi.io\"\n          },\n          \"X_CSI_BACKEND_CONFIG\": {\n            \"enable_unsupported_driver\": false,\n            \"driver\": \"ACCESSIscsi\",\n            \"name\": \"\",\n            \"driver__ACCESSIscsi__vrts_lun_sparse\": true,\n            \"driver__ACCESSIscsi__vrts_target_config\": \"/etc/cinder/vrts_target.xml\",\n            \"driver__AS13000__as13000_ipsan_pools__transform_csv\": \"Pool0\",\n            \"driver__AS13000__as13000_meta_pool\": \"\",\n            \"driver__AS13000__as13000_token_available_time\": 3300,\n            \"driver__Acs5000ISCSI__acs5000_copy_interval\": 5,\n            \"driver__Acs5000ISCSI__acs5000_target\": 0,\n            \"driver__Acs5000ISCSI__acs5000_volpool_name__transform_csv\": \"pool01\",\n            \"driver__DPLFC__dpl_pool\": \"\",\n            \"driver__DPLFC__dpl_port\": 8357,\n            \"driver__DPLISCSI__dpl_pool\": \"\",\n            \"driver__DPLISCSI__dpl_port\": 8357,\n            \"driver__DSWARE__dsware_rest_url\": \"\",\n            \"driver__DSWARE__dsware_storage_pools\": \"\",\n            \"driver__DSWARE__manager_ips__transform_csv_kvs\": \"\",\n            \"driver__Datera__backend_availability_zone\": \"\",\n            \"driver__Datera__chap_password\": \"\",\n            \"driver__Datera__chap_username\": \"\",\n            \"driver__Datera__chiscsi_conf\": \"/etc/chelsio-iscsi/chiscsi.conf\",\n            \"driver__Datera__driver_client_cert\": \"\",\n            \"driver__Datera__driver_client_cert_key\": \"\",\n            \"driver__Datera__driver_data_namespace\": \"\",\n            \"driver__Datera__driver_ssl_cert_path\": \"\",\n            \"driver__Datera__driver_ssl_cert_verify\": false,\n            \"driver__Datera__driver_use_ssl\": false,\n            \"driver__Datera__filter_function\": \"\",\n            \"driver__Datera__goodness_function\": \"\",\n            \"driver__Datera__iscsi_iotype\": \"fileio\",\n            \"driver__Datera__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__Datera__iscsi_target_flags\": \"\",\n            \"driver__Datera__iscsi_write_cache\": \"on\",\n            \"driver__Datera__num_shell_tries\": 3,\n            \"driver__Datera__num_volume_device_scan_tries\": 3,\n            \"driver__Datera__report_discard_supported\": false,\n            \"driver__Datera__storage_protocol\": \"iscsi\",\n            \"driver__Datera__target_helper\": \"tgtadm\",\n            \"driver__Datera__target_ip_address\": \"$my_ip\",\n            \"driver__Datera__target_port\": 3260,\n            \"driver__Datera__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__Datera__target_protocol\": \"iscsi\",\n            \"driver__Datera__trace_flags__transform_csv\": \"\",\n            \"driver__Datera__use_chap_auth\": false,\n            \"driver__Datera__volume_backend_name\": \"\",\n            \"driver__Datera__volume_clear\": \"zero\",\n            \"driver__Datera__volume_clear_ionice\": \"\",\n            \"driver__Datera__volume_clear_size\": 0,\n            \"driver__Datera__volume_copy_blkio_cgroup_name\": \"cinder-volume-copy\",\n            \"driver__Datera__volume_copy_bps_limit\": 0,\n            \"driver__Datera__volume_dd_blocksize\": \"1M\",\n            \"driver__Datera__volumes_dir\": \"$state_path/volumes\",\n            \"driver__FJDXFC__cinder_eternus_config_file\": \"/etc/cinder/cinder_fujitsu_eternus_dx.xml\",\n            \"driver__FJDXISCSI__cinder_eternus_config_file\": \"/etc/cinder/cinder_fujitsu_eternus_dx.xml\",\n            \"driver__FlashSystemFC__flashsystem_connection_protocol\": \"FC\",\n            \"driver__FlashSystemFC__flashsystem_multihostmap_enabled\": true,\n            \"driver__FlashSystemISCSI__flashsystem_connection_protocol\": \"FC\",\n            \"driver__FlashSystemISCSI__flashsystem_multihostmap_enabled\": true,\n            \"driver__GPFS__gpfs_images_dir\": \"\",\n            \"driver__GPFS__gpfs_images_share_mode__transform_empty_none\": \"\",\n            \"driver__GPFS__gpfs_max_clone_depth\": 0,\n            \"driver__GPFS__gpfs_mount_point_base\": \"\",\n            \"driver__GPFS__gpfs_sparse_volumes\": true,\n            \"driver__GPFS__gpfs_storage_pool\": \"system\",\n            \"driver__GPFSRemote__gpfs_hosts__transform_csv\": \"\",\n            \"driver__GPFSRemote__gpfs_hosts_key_file\": \"$state_path/ssh_known_hosts\",\n            \"driver__GPFSRemote__gpfs_images_dir\": \"\",\n            \"driver__GPFSRemote__gpfs_images_share_mode__transform_empty_none\": \"\",\n            \"driver__GPFSRemote__gpfs_max_clone_depth\": 0,\n            \"driver__GPFSRemote__gpfs_mount_point_base\": \"\",\n            \"driver__GPFSRemote__gpfs_private_key\": \"\",\n            \"driver__GPFSRemote__gpfs_sparse_volumes\": true,\n            \"driver__GPFSRemote__gpfs_ssh_port\": 22,\n            \"driver__GPFSRemote__gpfs_storage_pool\": \"system\",\n            \"driver__GPFSRemote__gpfs_strict_host_key_policy\": false,\n            \"driver__GPFSRemote__gpfs_user_login\": \"root\",\n            \"driver__GPFSRemote__gpfs_user_password\": \"\",\n            \"driver__HBSDFC__backend_availability_zone\": \"\",\n            \"driver__HBSDFC__chap_password\": \"\",\n            \"driver__HBSDFC__chap_username\": \"\",\n            \"driver__HBSDFC__chiscsi_conf\": \"/etc/chelsio-iscsi/chiscsi.conf\",\n            \"driver__HBSDFC__driver_client_cert\": \"\",\n            \"driver__HBSDFC__driver_client_cert_key\": \"\",\n            \"driver__HBSDFC__driver_data_namespace\": \"\",\n            \"driver__HBSDFC__driver_ssl_cert_path\": \"\",\n            \"driver__HBSDFC__driver_ssl_cert_verify\": false,\n            \"driver__HBSDFC__driver_use_ssl\": false,\n            \"driver__HBSDFC__filter_function\": \"\",\n            \"driver__HBSDFC__goodness_function\": \"\",\n            \"driver__HBSDFC__iscsi_iotype\": \"fileio\",\n            \"driver__HBSDFC__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__HBSDFC__iscsi_target_flags\": \"\",\n            \"driver__HBSDFC__iscsi_write_cache\": \"on\",\n            \"driver__HBSDFC__num_shell_tries\": 3,\n            \"driver__HBSDFC__num_volume_device_scan_tries\": 3,\n            \"driver__HBSDFC__report_discard_supported\": false,\n            \"driver__HBSDFC__storage_protocol\": \"iscsi\",\n            \"driver__HBSDFC__target_helper\": \"tgtadm\",\n            \"driver__HBSDFC__target_ip_address\": \"$my_ip\",\n            \"driver__HBSDFC__target_port\": 3260,\n            \"driver__HBSDFC__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__HBSDFC__target_protocol\": \"iscsi\",\n            \"driver__HBSDFC__trace_flags__transform_csv\": \"\",\n            \"driver__HBSDFC__use_chap_auth\": false,\n            \"driver__HBSDFC__volume_backend_name\": \"\",\n            \"driver__HBSDFC__volume_clear\": \"zero\",\n            \"driver__HBSDFC__volume_clear_ionice\": \"\",\n            \"driver__HBSDFC__volume_clear_size\": 0,\n            \"driver__HBSDFC__volume_copy_blkio_cgroup_name\": \"cinder-volume-copy\",\n            \"driver__HBSDFC__volume_copy_bps_limit\": 0,\n            \"driver__HBSDFC__volume_dd_blocksize\": \"1M\",\n            \"driver__HBSDFC__volumes_dir\": \"$state_path/volumes\",\n            \"driver__HBSDISCSI__backend_availability_zone\": \"\",\n            \"driver__HBSDISCSI__chap_password\": \"\",\n            \"driver__HBSDISCSI__chap_username\": \"\",\n            \"driver__HBSDISCSI__chiscsi_conf\": \"/etc/chelsio-iscsi/chiscsi.conf\",\n            \"driver__HBSDISCSI__driver_client_cert\": \"\",\n            \"driver__HBSDISCSI__driver_client_cert_key\": \"\",\n            \"driver__HBSDISCSI__driver_data_namespace\": \"\",\n            \"driver__HBSDISCSI__driver_ssl_cert_path\": \"\",\n            \"driver__HBSDISCSI__driver_ssl_cert_verify\": false,\n            \"driver__HBSDISCSI__driver_use_ssl\": false,\n            \"driver__HBSDISCSI__filter_function\": \"\",\n            \"driver__HBSDISCSI__goodness_function\": \"\",\n            \"driver__HBSDISCSI__iscsi_iotype\": \"fileio\",\n            \"driver__HBSDISCSI__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__HBSDISCSI__iscsi_target_flags\": \"\",\n            \"driver__HBSDISCSI__iscsi_write_cache\": \"on\",\n            \"driver__HBSDISCSI__num_shell_tries\": 3,\n            \"driver__HBSDISCSI__num_volume_device_scan_tries\": 3,\n            \"driver__HBSDISCSI__report_discard_supported\": false,\n            \"driver__HBSDISCSI__storage_protocol\": \"iscsi\",\n            \"driver__HBSDISCSI__target_helper\": \"tgtadm\",\n            \"driver__HBSDISCSI__target_ip_address\": \"$my_ip\",\n            \"driver__HBSDISCSI__target_port\": 3260,\n            \"driver__HBSDISCSI__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__HBSDISCSI__target_protocol\": \"iscsi\",\n            \"driver__HBSDISCSI__trace_flags__transform_csv\": \"\",\n            \"driver__HBSDISCSI__use_chap_auth\": false,\n            \"driver__HBSDISCSI__volume_backend_name\": \"\",\n            \"driver__HBSDISCSI__volume_clear\": \"zero\",\n            \"driver__HBSDISCSI__volume_clear_ionice\": \"\",\n            \"driver__HBSDISCSI__volume_clear_size\": 0,\n            \"driver__HBSDISCSI__volume_copy_blkio_cgroup_name\": \"cinder-volume-copy\",\n            \"driver__HBSDISCSI__volume_copy_bps_limit\": 0,\n            \"driver__HBSDISCSI__volume_dd_blocksize\": \"1M\",\n            \"driver__HBSDISCSI__volumes_dir\": \"$state_path/volumes\",\n            \"driver__HPE3PARFC__hpe3par_api_url\": \"\",\n            \"driver__HPE3PARFC__hpe3par_cpg__transform_csv\": \"OpenStack\",\n            \"driver__HPE3PARFC__hpe3par_cpg_snap\": \"\",\n            \"driver__HPE3PARFC__hpe3par_debug\": false,\n            \"driver__HPE3PARFC__hpe3par_iscsi_chap_enabled\": false,\n            \"driver__HPE3PARFC__hpe3par_iscsi_ips__transform_csv\": \"\",\n            \"driver__HPE3PARFC__hpe3par_password\": \"\",\n            \"driver__HPE3PARFC__hpe3par_snapshot_expiration\": \"\",\n            \"driver__HPE3PARFC__hpe3par_snapshot_retention\": \"\",\n            \"driver__HPE3PARFC__hpe3par_target_nsp\": \"\",\n            \"driver__HPE3PARFC__hpe3par_username\": \"\",\n            \"driver__HPE3PARFC__san_ip\": \"\",\n            \"driver__HPE3PARFC__san_login\": \"admin\",\n            \"driver__HPE3PARFC__san_password\": \"\",\n            \"driver__HPE3PARFC__san_private_key\": \"\",\n            \"driver__HPE3PARFC__san_ssh_port\": 22,\n            \"driver__HPE3PARFC__ssh_conn_timeout\": 30,\n            \"driver__HPE3PARFC__target_ip_address\": \"$my_ip\",\n            \"driver__HPE3PARFC__target_port\": 3260,\n            \"driver__HPE3PARFC__unique_fqdn_network\": true,\n            \"driver__HPE3PARISCSI__hpe3par_api_url\": \"\",\n            \"driver__HPE3PARISCSI__hpe3par_cpg__transform_csv\": \"OpenStack\",\n            \"driver__HPE3PARISCSI__hpe3par_cpg_snap\": \"\",\n            \"driver__HPE3PARISCSI__hpe3par_debug\": false,\n            \"driver__HPE3PARISCSI__hpe3par_iscsi_chap_enabled\": false,\n            \"driver__HPE3PARISCSI__hpe3par_iscsi_ips__transform_csv\": \"\",\n            \"driver__HPE3PARISCSI__hpe3par_password\": \"\",\n            \"driver__HPE3PARISCSI__hpe3par_snapshot_expiration\": \"\",\n            \"driver__HPE3PARISCSI__hpe3par_snapshot_retention\": \"\",\n            \"driver__HPE3PARISCSI__hpe3par_target_nsp\": \"\",\n            \"driver__HPE3PARISCSI__hpe3par_username\": \"\",\n            \"driver__HPE3PARISCSI__san_ip\": \"\",\n            \"driver__HPE3PARISCSI__san_login\": \"admin\",\n            \"driver__HPE3PARISCSI__san_password\": \"\",\n            \"driver__HPE3PARISCSI__san_private_key\": \"\",\n            \"driver__HPE3PARISCSI__san_ssh_port\": 22,\n            \"driver__HPE3PARISCSI__ssh_conn_timeout\": 30,\n            \"driver__HPE3PARISCSI__target_ip_address\": \"$my_ip\",\n            \"driver__HPE3PARISCSI__target_port\": 3260,\n            \"driver__HPE3PARISCSI__unique_fqdn_network\": true,\n            \"driver__HPMSAFC__driver_ssl_cert_path\": \"\",\n            \"driver__HPMSAFC__driver_ssl_cert_verify\": false,\n            \"driver__HPMSAFC__driver_use_ssl\": false,\n            \"driver__HPMSAFC__hpmsa_pool_name\": \"A\",\n            \"driver__HPMSAFC__hpmsa_pool_type\": \"virtual\",\n            \"driver__HPMSAFC__san_ip\": \"\",\n            \"driver__HPMSAFC__san_login\": \"admin\",\n            \"driver__HPMSAFC__san_password\": \"\",\n            \"driver__HPMSAISCSI__driver_ssl_cert_path\": \"\",\n            \"driver__HPMSAISCSI__driver_ssl_cert_verify\": false,\n            \"driver__HPMSAISCSI__driver_use_ssl\": false,\n            \"driver__HPMSAISCSI__hpmsa_iscsi_ips__transform_csv\": \"\",\n            \"driver__HPMSAISCSI__hpmsa_pool_name\": \"A\",\n            \"driver__HPMSAISCSI__hpmsa_pool_type\": \"virtual\",\n            \"driver__HPMSAISCSI__san_ip\": \"\",\n            \"driver__HPMSAISCSI__san_login\": \"admin\",\n            \"driver__HPMSAISCSI__san_password\": \"\",\n            \"driver__HuaweiFC__cinder_huawei_conf_file\": \"/etc/cinder/cinder_huawei_conf.xml\",\n            \"driver__HuaweiFC__hypermetro_devices\": \"\",\n            \"driver__HuaweiFC__metro_domain_name\": \"\",\n            \"driver__HuaweiFC__metro_san_address\": \"\",\n            \"driver__HuaweiFC__metro_san_password\": \"\",\n            \"driver__HuaweiFC__metro_san_user\": \"\",\n            \"driver__HuaweiFC__metro_storage_pools\": \"\",\n            \"driver__HuaweiISCSI__cinder_huawei_conf_file\": \"/etc/cinder/cinder_huawei_conf.xml\",\n            \"driver__HuaweiISCSI__hypermetro_devices\": \"\",\n            \"driver__HuaweiISCSI__metro_domain_name\": \"\",\n            \"driver__HuaweiISCSI__metro_san_address\": \"\",\n            \"driver__HuaweiISCSI__metro_san_password\": \"\",\n            \"driver__HuaweiISCSI__metro_san_user\": \"\",\n            \"driver__HuaweiISCSI__metro_storage_pools\": \"\",\n            \"driver__IBMStorage__chap\": \"disabled\",\n            \"driver__IBMStorage__connection_type\": \"iscsi\",\n            \"driver__IBMStorage__management_ips\": \"\",\n            \"driver__IBMStorage__proxy\": \"cinder.volume.drivers.ibm.ibm_storage.proxy.IBMStorageProxy\",\n            \"driver__InStorageMCSFC__instorage_mcs_allow_tenant_qos\": false,\n            \"driver__InStorageMCSFC__instorage_mcs_localcopy_rate\": 50,\n            \"driver__InStorageMCSFC__instorage_mcs_localcopy_timeout\": 120,\n            \"driver__InStorageMCSFC__instorage_mcs_vol_autoexpand\": true,\n            \"driver__InStorageMCSFC__instorage_mcs_vol_compression\": false,\n            \"driver__InStorageMCSFC__instorage_mcs_vol_grainsize\": 256,\n            \"driver__InStorageMCSFC__instorage_mcs_vol_intier\": true,\n            \"driver__InStorageMCSFC__instorage_mcs_vol_iogrp\": \"0\",\n            \"driver__InStorageMCSFC__instorage_mcs_vol_rsize\": 2,\n            \"driver__InStorageMCSFC__instorage_mcs_vol_warning\": 0,\n            \"driver__InStorageMCSFC__instorage_mcs_volpool_name__transform_csv\": \"volpool\",\n            \"driver__InStorageMCSFC__instorage_san_secondary_ip\": \"\",\n            \"driver__InStorageMCSISCSI__instorage_mcs_allow_tenant_qos\": false,\n            \"driver__InStorageMCSISCSI__instorage_mcs_localcopy_rate\": 50,\n            \"driver__InStorageMCSISCSI__instorage_mcs_localcopy_timeout\": 120,\n            \"driver__InStorageMCSISCSI__instorage_mcs_vol_autoexpand\": true,\n            \"driver__InStorageMCSISCSI__instorage_mcs_vol_compression\": false,\n            \"driver__InStorageMCSISCSI__instorage_mcs_vol_grainsize\": 256,\n            \"driver__InStorageMCSISCSI__instorage_mcs_vol_intier\": true,\n            \"driver__InStorageMCSISCSI__instorage_mcs_vol_iogrp\": \"0\",\n            \"driver__InStorageMCSISCSI__instorage_mcs_vol_rsize\": 2,\n            \"driver__InStorageMCSISCSI__instorage_mcs_vol_warning\": 0,\n            \"driver__InStorageMCSISCSI__instorage_mcs_volpool_name__transform_csv\": \"volpool\",\n            \"driver__InStorageMCSISCSI__instorage_san_secondary_ip\": \"\",\n            \"driver__InfiniboxVolume__chap_password\": \"\",\n            \"driver__InfiniboxVolume__chap_username\": \"\",\n            \"driver__InfiniboxVolume__infinidat_iscsi_netspaces__transform_csv\": \"\",\n            \"driver__InfiniboxVolume__infinidat_pool_name\": \"\",\n            \"driver__InfiniboxVolume__infinidat_storage_protocol\": \"fc\",\n            \"driver__InfiniboxVolume__infinidat_use_compression\": false,\n            \"driver__InfiniboxVolume__num_volume_device_scan_tries\": 3,\n            \"driver__InfiniboxVolume__san_ip\": \"\",\n            \"driver__InfiniboxVolume__san_login\": \"admin\",\n            \"driver__InfiniboxVolume__san_password\": \"\",\n            \"driver__InfiniboxVolume__san_thin_provision\": true,\n            \"driver__InfiniboxVolume__use_chap_auth\": false,\n            \"driver__InfiniboxVolume__volume_dd_blocksize\": \"1M\",\n            \"driver__InfortrendCLIFC__infortrend_cli_cache\": false,\n            \"driver__InfortrendCLIFC__infortrend_cli_max_retries\": 5,\n            \"driver__InfortrendCLIFC__infortrend_cli_path\": \"/opt/bin/Infortrend/raidcmd_ESDS10.jar\",\n            \"driver__InfortrendCLIFC__infortrend_cli_timeout\": 60,\n            \"driver__InfortrendCLIFC__infortrend_iqn_prefix\": \"iqn.2002-10.com.infortrend\",\n            \"driver__InfortrendCLIFC__infortrend_pools_name__transform_csv\": \"\",\n            \"driver__InfortrendCLIFC__infortrend_slots_a_channels_id__transform_csv\": \"\",\n            \"driver__InfortrendCLIFC__infortrend_slots_b_channels_id__transform_csv\": \"\",\n            \"driver__InfortrendCLIFC__java_path\": \"/usr/bin/java\",\n            \"driver__InfortrendCLIISCSI__infortrend_cli_cache\": false,\n            \"driver__InfortrendCLIISCSI__infortrend_cli_max_retries\": 5,\n            \"driver__InfortrendCLIISCSI__infortrend_cli_path\": \"/opt/bin/Infortrend/raidcmd_ESDS10.jar\",\n            \"driver__InfortrendCLIISCSI__infortrend_cli_timeout\": 60,\n            \"driver__InfortrendCLIISCSI__infortrend_iqn_prefix\": \"iqn.2002-10.com.infortrend\",\n            \"driver__InfortrendCLIISCSI__infortrend_pools_name__transform_csv\": \"\",\n            \"driver__InfortrendCLIISCSI__infortrend_slots_a_channels_id__transform_csv\": \"\",\n            \"driver__InfortrendCLIISCSI__infortrend_slots_b_channels_id__transform_csv\": \"\",\n            \"driver__InfortrendCLIISCSI__java_path\": \"/usr/bin/java\",\n            \"driver__JovianISCSI__backend_availability_zone\": \"\",\n            \"driver__JovianISCSI__chap_password\": \"\",\n            \"driver__JovianISCSI__chap_username\": \"\",\n            \"driver__JovianISCSI__chiscsi_conf\": \"/etc/chelsio-iscsi/chiscsi.conf\",\n            \"driver__JovianISCSI__driver_client_cert\": \"\",\n            \"driver__JovianISCSI__driver_client_cert_key\": \"\",\n            \"driver__JovianISCSI__driver_data_namespace\": \"\",\n            \"driver__JovianISCSI__driver_ssl_cert_path\": \"\",\n            \"driver__JovianISCSI__driver_ssl_cert_verify\": false,\n            \"driver__JovianISCSI__driver_use_ssl\": false,\n            \"driver__JovianISCSI__filter_function\": \"\",\n            \"driver__JovianISCSI__goodness_function\": \"\",\n            \"driver__JovianISCSI__iscsi_iotype\": \"fileio\",\n            \"driver__JovianISCSI__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__JovianISCSI__iscsi_target_flags\": \"\",\n            \"driver__JovianISCSI__iscsi_write_cache\": \"on\",\n            \"driver__JovianISCSI__num_shell_tries\": 3,\n            \"driver__JovianISCSI__num_volume_device_scan_tries\": 3,\n            \"driver__JovianISCSI__report_discard_supported\": false,\n            \"driver__JovianISCSI__storage_protocol\": \"iscsi\",\n            \"driver__JovianISCSI__target_helper\": \"tgtadm\",\n            \"driver__JovianISCSI__target_ip_address\": \"$my_ip\",\n            \"driver__JovianISCSI__target_port\": 3260,\n            \"driver__JovianISCSI__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__JovianISCSI__target_protocol\": \"iscsi\",\n            \"driver__JovianISCSI__trace_flags__transform_csv\": \"\",\n            \"driver__JovianISCSI__use_chap_auth\": false,\n            \"driver__JovianISCSI__volume_backend_name\": \"\",\n            \"driver__JovianISCSI__volume_clear\": \"zero\",\n            \"driver__JovianISCSI__volume_clear_ionice\": \"\",\n            \"driver__JovianISCSI__volume_clear_size\": 0,\n            \"driver__JovianISCSI__volume_copy_blkio_cgroup_name\": \"cinder-volume-copy\",\n            \"driver__JovianISCSI__volume_copy_bps_limit\": 0,\n            \"driver__JovianISCSI__volume_dd_blocksize\": \"1M\",\n            \"driver__JovianISCSI__volumes_dir\": \"$state_path/volumes\",\n            \"driver__KaminarioISCSI__disable_discovery\": false,\n            \"driver__KaminarioISCSI__san_ip\": \"\",\n            \"driver__KaminarioISCSI__san_login\": \"admin\",\n            \"driver__KaminarioISCSI__san_password\": \"\",\n            \"driver__KaminarioISCSI__unique_fqdn_network\": true,\n            \"driver__KaminarioISCSI__volume_dd_blocksize\": \"1M\",\n            \"driver__LVMVolume__iscsi_iotype\": \"fileio\",\n            \"driver__LVMVolume__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__LVMVolume__iscsi_target_flags\": \"\",\n            \"driver__LVMVolume__iscsi_write_cache\": \"on\",\n            \"driver__LVMVolume__lvm_conf_file\": \"/etc/cinder/lvm.conf\",\n            \"driver__LVMVolume__lvm_mirrors\": 0,\n            \"driver__LVMVolume__lvm_suppress_fd_warnings\": false,\n            \"driver__LVMVolume__lvm_type\": \"auto\",\n            \"driver__LVMVolume__nvmet_port_id\": 1,\n            \"driver__LVMVolume__scst_target_driver\": \"iscsi\",\n            \"driver__LVMVolume__scst_target_iqn_name\": \"\",\n            \"driver__LVMVolume__spdk_max_queue_depth\": 64,\n            \"driver__LVMVolume__spdk_rpc_ip\": \"\",\n            \"driver__LVMVolume__spdk_rpc_password\": \"\",\n            \"driver__LVMVolume__spdk_rpc_port\": 8000,\n            \"driver__LVMVolume__spdk_rpc_username\": \"\",\n            \"driver__LVMVolume__target_helper\": \"tgtadm\",\n            \"driver__LVMVolume__target_ip_address\": \"$my_ip\",\n            \"driver__LVMVolume__target_port\": 3260,\n            \"driver__LVMVolume__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__LVMVolume__target_protocol\": \"iscsi\",\n            \"driver__LVMVolume__volume_clear\": \"zero\",\n            \"driver__LVMVolume__volume_clear_size\": 0,\n            \"driver__LVMVolume__volume_dd_blocksize\": \"1M\",\n            \"driver__LVMVolume__volume_group\": \"cinder-volumes\",\n            \"driver__LVMVolume__volumes_dir\": \"$state_path/volumes\",\n            \"driver__LenovoFC__lenovo_pool_name\": \"A\",\n            \"driver__LenovoFC__lenovo_pool_type\": \"virtual\",\n            \"driver__LenovoISCSI__lenovo_iscsi_ips__transform_csv\": \"\",\n            \"driver__LenovoISCSI__lenovo_pool_name\": \"A\",\n            \"driver__LenovoISCSI__lenovo_pool_type\": \"virtual\",\n            \"driver__LinstorDrbd__linstor_autoplace_count\": 0,\n            \"driver__LinstorDrbd__linstor_controller_diskless\": true,\n            \"driver__LinstorDrbd__linstor_default_blocksize\": 4096,\n            \"driver__LinstorDrbd__linstor_default_storage_pool_name\": \"DfltStorPool\",\n            \"driver__LinstorDrbd__linstor_default_uri\": \"linstor://localhost\",\n            \"driver__LinstorDrbd__linstor_default_volume_group_name\": \"drbd-vg\",\n            \"driver__LinstorDrbd__linstor_volume_downsize_factor__transform_string_float\": \"4096\",\n            \"driver__LinstorIscsi__linstor_autoplace_count\": 0,\n            \"driver__LinstorIscsi__linstor_controller_diskless\": true,\n            \"driver__LinstorIscsi__linstor_default_blocksize\": 4096,\n            \"driver__LinstorIscsi__linstor_default_storage_pool_name\": \"DfltStorPool\",\n            \"driver__LinstorIscsi__linstor_default_uri\": \"linstor://localhost\",\n            \"driver__LinstorIscsi__linstor_default_volume_group_name\": \"drbd-vg\",\n            \"driver__LinstorIscsi__linstor_volume_downsize_factor__transform_string_float\": \"4096\",\n            \"driver__MStorageFC__nec_actual_free_capacity\": false,\n            \"driver__MStorageFC__nec_auto_accesscontrol\": true,\n            \"driver__MStorageFC__nec_backend_max_ld_count\": 1024,\n            \"driver__MStorageFC__nec_backup_ldname_format\": \"LX:%s\",\n            \"driver__MStorageFC__nec_backup_pools__transform_csv\": \"\",\n            \"driver__MStorageFC__nec_cv_ldname_format\": \"LX:__ControlVolume_%xh\",\n            \"driver__MStorageFC__nec_diskarray_name\": \"\",\n            \"driver__MStorageFC__nec_ismcli_fip\": \"\",\n            \"driver__MStorageFC__nec_ismcli_password\": \"\",\n            \"driver__MStorageFC__nec_ismcli_privkey\": \"\",\n            \"driver__MStorageFC__nec_ismcli_user\": \"\",\n            \"driver__MStorageFC__nec_ismview_alloptimize\": false,\n            \"driver__MStorageFC__nec_ismview_dir\": \"/tmp/nec/cinder\",\n            \"driver__MStorageFC__nec_ldname_format\": \"LX:%s\",\n            \"driver__MStorageFC__nec_ldset\": \"\",\n            \"driver__MStorageFC__nec_pools__transform_csv\": \"\",\n            \"driver__MStorageFC__nec_queryconfig_view\": false,\n            \"driver__MStorageFC__nec_ssh_pool_port_number\": 22,\n            \"driver__MStorageFC__nec_unpairthread_timeout\": 3600,\n            \"driver__MStorageISCSI__nec_actual_free_capacity\": false,\n            \"driver__MStorageISCSI__nec_auto_accesscontrol\": true,\n            \"driver__MStorageISCSI__nec_backend_max_ld_count\": 1024,\n            \"driver__MStorageISCSI__nec_backup_ldname_format\": \"LX:%s\",\n            \"driver__MStorageISCSI__nec_backup_pools__transform_csv\": \"\",\n            \"driver__MStorageISCSI__nec_cv_ldname_format\": \"LX:__ControlVolume_%xh\",\n            \"driver__MStorageISCSI__nec_diskarray_name\": \"\",\n            \"driver__MStorageISCSI__nec_ismcli_fip\": \"\",\n            \"driver__MStorageISCSI__nec_ismcli_password\": \"\",\n            \"driver__MStorageISCSI__nec_ismcli_privkey\": \"\",\n            \"driver__MStorageISCSI__nec_ismcli_user\": \"\",\n            \"driver__MStorageISCSI__nec_ismview_alloptimize\": false,\n            \"driver__MStorageISCSI__nec_ismview_dir\": \"/tmp/nec/cinder\",\n            \"driver__MStorageISCSI__nec_ldname_format\": \"LX:%s\",\n            \"driver__MStorageISCSI__nec_ldset\": \"\",\n            \"driver__MStorageISCSI__nec_pools__transform_csv\": \"\",\n            \"driver__MStorageISCSI__nec_queryconfig_view\": false,\n            \"driver__MStorageISCSI__nec_ssh_pool_port_number\": 22,\n            \"driver__MStorageISCSI__nec_unpairthread_timeout\": 3600,\n            \"driver__MacroSANFC__backend_availability_zone\": \"\",\n            \"driver__MacroSANFC__chap_password\": \"\",\n            \"driver__MacroSANFC__chap_username\": \"\",\n            \"driver__MacroSANFC__chiscsi_conf\": \"/etc/chelsio-iscsi/chiscsi.conf\",\n            \"driver__MacroSANFC__driver_client_cert\": \"\",\n            \"driver__MacroSANFC__driver_client_cert_key\": \"\",\n            \"driver__MacroSANFC__driver_data_namespace\": \"\",\n            \"driver__MacroSANFC__driver_ssl_cert_path\": \"\",\n            \"driver__MacroSANFC__driver_ssl_cert_verify\": false,\n            \"driver__MacroSANFC__driver_use_ssl\": false,\n            \"driver__MacroSANFC__filter_function\": \"\",\n            \"driver__MacroSANFC__goodness_function\": \"\",\n            \"driver__MacroSANFC__iscsi_iotype\": \"fileio\",\n            \"driver__MacroSANFC__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__MacroSANFC__iscsi_target_flags\": \"\",\n            \"driver__MacroSANFC__iscsi_write_cache\": \"on\",\n            \"driver__MacroSANFC__num_shell_tries\": 3,\n            \"driver__MacroSANFC__num_volume_device_scan_tries\": 3,\n            \"driver__MacroSANFC__report_discard_supported\": false,\n            \"driver__MacroSANFC__storage_protocol\": \"iscsi\",\n            \"driver__MacroSANFC__target_helper\": \"tgtadm\",\n            \"driver__MacroSANFC__target_ip_address\": \"$my_ip\",\n            \"driver__MacroSANFC__target_port\": 3260,\n            \"driver__MacroSANFC__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__MacroSANFC__target_protocol\": \"iscsi\",\n            \"driver__MacroSANFC__trace_flags__transform_csv\": \"\",\n            \"driver__MacroSANFC__use_chap_auth\": false,\n            \"driver__MacroSANFC__volume_backend_name\": \"\",\n            \"driver__MacroSANFC__volume_clear\": \"zero\",\n            \"driver__MacroSANFC__volume_clear_ionice\": \"\",\n            \"driver__MacroSANFC__volume_clear_size\": 0,\n            \"driver__MacroSANFC__volume_copy_blkio_cgroup_name\": \"cinder-volume-copy\",\n            \"driver__MacroSANFC__volume_copy_bps_limit\": 0,\n            \"driver__MacroSANFC__volume_dd_blocksize\": \"1M\",\n            \"driver__MacroSANFC__volumes_dir\": \"$state_path/volumes\",\n            \"driver__MacroSANISCSI__backend_availability_zone\": \"\",\n            \"driver__MacroSANISCSI__chap_password\": \"\",\n            \"driver__MacroSANISCSI__chap_username\": \"\",\n            \"driver__MacroSANISCSI__chiscsi_conf\": \"/etc/chelsio-iscsi/chiscsi.conf\",\n            \"driver__MacroSANISCSI__driver_client_cert\": \"\",\n            \"driver__MacroSANISCSI__driver_client_cert_key\": \"\",\n            \"driver__MacroSANISCSI__driver_data_namespace\": \"\",\n            \"driver__MacroSANISCSI__driver_ssl_cert_path\": \"\",\n            \"driver__MacroSANISCSI__driver_ssl_cert_verify\": false,\n            \"driver__MacroSANISCSI__driver_use_ssl\": false,\n            \"driver__MacroSANISCSI__filter_function\": \"\",\n            \"driver__MacroSANISCSI__goodness_function\": \"\",\n            \"driver__MacroSANISCSI__iscsi_iotype\": \"fileio\",\n            \"driver__MacroSANISCSI__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__MacroSANISCSI__iscsi_target_flags\": \"\",\n            \"driver__MacroSANISCSI__iscsi_write_cache\": \"on\",\n            \"driver__MacroSANISCSI__num_shell_tries\": 3,\n            \"driver__MacroSANISCSI__num_volume_device_scan_tries\": 3,\n            \"driver__MacroSANISCSI__report_discard_supported\": false,\n            \"driver__MacroSANISCSI__storage_protocol\": \"iscsi\",\n            \"driver__MacroSANISCSI__target_helper\": \"tgtadm\",\n            \"driver__MacroSANISCSI__target_ip_address\": \"$my_ip\",\n            \"driver__MacroSANISCSI__target_port\": 3260,\n            \"driver__MacroSANISCSI__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__MacroSANISCSI__target_protocol\": \"iscsi\",\n            \"driver__MacroSANISCSI__trace_flags__transform_csv\": \"\",\n            \"driver__MacroSANISCSI__use_chap_auth\": false,\n            \"driver__MacroSANISCSI__volume_backend_name\": \"\",\n            \"driver__MacroSANISCSI__volume_clear\": \"zero\",\n            \"driver__MacroSANISCSI__volume_clear_ionice\": \"\",\n            \"driver__MacroSANISCSI__volume_clear_size\": 0,\n            \"driver__MacroSANISCSI__volume_copy_blkio_cgroup_name\": \"cinder-volume-copy\",\n            \"driver__MacroSANISCSI__volume_copy_bps_limit\": 0,\n            \"driver__MacroSANISCSI__volume_dd_blocksize\": \"1M\",\n            \"driver__MacroSANISCSI__volumes_dir\": \"$state_path/volumes\",\n            \"driver__NetAppCmodeFibreChannel__netapp_vserver\": \"\",\n            \"driver__NetAppCmodeISCSI__netapp_vserver\": \"\",\n            \"driver__NexentaISCSI__nexenta_blocksize\": 4096,\n            \"driver__NexentaISCSI__nexenta_dataset_compression\": \"on\",\n            \"driver__NexentaISCSI__nexenta_dataset_dedup\": \"off\",\n            \"driver__NexentaISCSI__nexenta_dataset_description\": \"\",\n            \"driver__NexentaISCSI__nexenta_folder\": \"\",\n            \"driver__NexentaISCSI__nexenta_group_snapshot_template\": \"group-snapshot-%s\",\n            \"driver__NexentaISCSI__nexenta_host\": \"\",\n            \"driver__NexentaISCSI__nexenta_host_group_prefix\": \"cinder\",\n            \"driver__NexentaISCSI__nexenta_iscsi_target_host_group\": \"all\",\n            \"driver__NexentaISCSI__nexenta_iscsi_target_portal_groups\": \"\",\n            \"driver__NexentaISCSI__nexenta_iscsi_target_portal_port\": 3260,\n            \"driver__NexentaISCSI__nexenta_iscsi_target_portals\": \"\",\n            \"driver__NexentaISCSI__nexenta_lu_writebackcache_disabled\": false,\n            \"driver__NexentaISCSI__nexenta_luns_per_target\": 100,\n            \"driver__NexentaISCSI__nexenta_ns5_blocksize\": 32,\n            \"driver__NexentaISCSI__nexenta_origin_snapshot_template\": \"origin-snapshot-%s\",\n            \"driver__NexentaISCSI__nexenta_rest_backoff_factor__transform_string_float\": \"0.5\",\n            \"driver__NexentaISCSI__nexenta_rest_connect_timeout__transform_string_float\": \"30\",\n            \"driver__NexentaISCSI__nexenta_rest_protocol\": \"auto\",\n            \"driver__NexentaISCSI__nexenta_rest_read_timeout__transform_string_float\": \"300\",\n            \"driver__NexentaISCSI__nexenta_rest_retry_count\": 3,\n            \"driver__NexentaISCSI__nexenta_sparse\": false,\n            \"driver__NexentaISCSI__nexenta_target_group_prefix\": \"cinder\",\n            \"driver__NexentaISCSI__nexenta_target_prefix\": \"iqn.1986-03.com.sun:02:cinder\",\n            \"driver__NexentaISCSI__nexenta_use_https\": true,\n            \"driver__NexentaISCSI__nexenta_volume\": \"cinder\",\n            \"driver__NexentaISCSI__nexenta_volume_group\": \"iscsi\",\n            \"driver__NimbleFC__nimble_pool_name\": \"default\",\n            \"driver__NimbleFC__nimble_subnet_label\": \"*\",\n            \"driver__NimbleFC__nimble_verify_cert_path\": \"\",\n            \"driver__NimbleFC__nimble_verify_certificate\": false,\n            \"driver__NimbleISCSI__nimble_pool_name\": \"default\",\n            \"driver__NimbleISCSI__nimble_subnet_label\": \"*\",\n            \"driver__NimbleISCSI__nimble_verify_cert_path\": \"\",\n            \"driver__NimbleISCSI__nimble_verify_certificate\": false,\n            \"driver__PVMEFC__driver_ssl_cert_path\": \"\",\n            \"driver__PVMEFC__driver_ssl_cert_verify\": false,\n            \"driver__PVMEFC__driver_use_ssl\": false,\n            \"driver__PVMEFC__pvme_pool_name\": \"A\",\n            \"driver__PVMEFC__san_ip\": \"\",\n            \"driver__PVMEFC__san_login\": \"admin\",\n            \"driver__PVMEFC__san_password\": \"\",\n            \"driver__PVMEISCSI__driver_ssl_cert_path\": \"\",\n            \"driver__PVMEISCSI__driver_ssl_cert_verify\": false,\n            \"driver__PVMEISCSI__driver_use_ssl\": false,\n            \"driver__PVMEISCSI__pvme_iscsi_ips__transform_csv\": \"\",\n            \"driver__PVMEISCSI__pvme_pool_name\": \"A\",\n            \"driver__PVMEISCSI__san_ip\": \"\",\n            \"driver__PVMEISCSI__san_login\": \"admin\",\n            \"driver__PVMEISCSI__san_password\": \"\",\n            \"driver__PowerFlex__powerflex_allow_migration_during_rebuild\": false,\n            \"driver__PowerFlex__powerflex_allow_non_padded_volumes\": false,\n            \"driver__PowerFlex__powerflex_max_over_subscription_ratio__transform_string_float\": \"10.0\",\n            \"driver__PowerFlex__powerflex_rest_server_port\": 443,\n            \"driver__PowerFlex__powerflex_round_volume_capacity\": true,\n            \"driver__PowerFlex__powerflex_server_api_version\": \"\",\n            \"driver__PowerFlex__powerflex_storage_pools\": \"\",\n            \"driver__PowerFlex__powerflex_unmap_volume_before_deletion\": false,\n            \"driver__PowerMaxFC__driver_ssl_cert_verify\": false,\n            \"driver__PowerMaxFC__initiator_check\": false,\n            \"driver__PowerMaxFC__interval\": 3,\n            \"driver__PowerMaxFC__load_balance\": false,\n            \"driver__PowerMaxFC__load_balance_real_time\": false,\n            \"driver__PowerMaxFC__load_data_format\": \"Avg\",\n            \"driver__PowerMaxFC__load_look_back\": 60,\n            \"driver__PowerMaxFC__load_look_back_real_time\": 1,\n            \"driver__PowerMaxFC__port_group_load_metric\": \"PercentBusy\",\n            \"driver__PowerMaxFC__port_load_metric\": \"PercentBusy\",\n            \"driver__PowerMaxFC__powermax_array\": \"\",\n            \"driver__PowerMaxFC__powermax_array_tag_list__transform_csv\": \"\",\n            \"driver__PowerMaxFC__powermax_port_group_name_template\": \"portGroupName\",\n            \"driver__PowerMaxFC__powermax_port_groups__transform_csv\": \"\",\n            \"driver__PowerMaxFC__powermax_service_level\": \"\",\n            \"driver__PowerMaxFC__powermax_short_host_name_template\": \"shortHostName\",\n            \"driver__PowerMaxFC__powermax_snapvx_unlink_limit\": 3,\n            \"driver__PowerMaxFC__powermax_srp\": \"\",\n            \"driver__PowerMaxFC__retries\": 200,\n            \"driver__PowerMaxFC__san_ip\": \"\",\n            \"driver__PowerMaxFC__san_login\": \"admin\",\n            \"driver__PowerMaxFC__san_password\": \"\",\n            \"driver__PowerMaxFC__u4p_failover_autofailback\": true,\n            \"driver__PowerMaxFC__u4p_failover_backoff_factor\": 1,\n            \"driver__PowerMaxFC__u4p_failover_retries\": 3,\n            \"driver__PowerMaxFC__u4p_failover_target__transform_csv_kvs\": \"\",\n            \"driver__PowerMaxFC__u4p_failover_timeout\": 20,\n            \"driver__PowerMaxFC__vmax_workload\": \"\",\n            \"driver__PowerMaxISCSI__chap_password\": \"\",\n            \"driver__PowerMaxISCSI__chap_username\": \"\",\n            \"driver__PowerMaxISCSI__driver_ssl_cert_verify\": false,\n            \"driver__PowerMaxISCSI__initiator_check\": false,\n            \"driver__PowerMaxISCSI__interval\": 3,\n            \"driver__PowerMaxISCSI__load_balance\": false,\n            \"driver__PowerMaxISCSI__load_balance_real_time\": false,\n            \"driver__PowerMaxISCSI__load_data_format\": \"Avg\",\n            \"driver__PowerMaxISCSI__load_look_back\": 60,\n            \"driver__PowerMaxISCSI__load_look_back_real_time\": 1,\n            \"driver__PowerMaxISCSI__port_group_load_metric\": \"PercentBusy\",\n            \"driver__PowerMaxISCSI__port_load_metric\": \"PercentBusy\",\n            \"driver__PowerMaxISCSI__powermax_array\": \"\",\n            \"driver__PowerMaxISCSI__powermax_array_tag_list__transform_csv\": \"\",\n            \"driver__PowerMaxISCSI__powermax_port_group_name_template\": \"portGroupName\",\n            \"driver__PowerMaxISCSI__powermax_port_groups__transform_csv\": \"\",\n            \"driver__PowerMaxISCSI__powermax_service_level\": \"\",\n            \"driver__PowerMaxISCSI__powermax_short_host_name_template\": \"shortHostName\",\n            \"driver__PowerMaxISCSI__powermax_snapvx_unlink_limit\": 3,\n            \"driver__PowerMaxISCSI__powermax_srp\": \"\",\n            \"driver__PowerMaxISCSI__retries\": 200,\n            \"driver__PowerMaxISCSI__san_ip\": \"\",\n            \"driver__PowerMaxISCSI__san_login\": \"admin\",\n            \"driver__PowerMaxISCSI__san_password\": \"\",\n            \"driver__PowerMaxISCSI__u4p_failover_autofailback\": true,\n            \"driver__PowerMaxISCSI__u4p_failover_backoff_factor\": 1,\n            \"driver__PowerMaxISCSI__u4p_failover_retries\": 3,\n            \"driver__PowerMaxISCSI__u4p_failover_target__transform_csv_kvs\": \"\",\n            \"driver__PowerMaxISCSI__u4p_failover_timeout\": 20,\n            \"driver__PowerMaxISCSI__use_chap_auth\": false,\n            \"driver__PowerMaxISCSI__vmax_workload\": \"\",\n            \"driver__PowerStore__powerstore_appliances__transform_csv\": \"\",\n            \"driver__PowerStore__powerstore_ports__transform_csv\": \"\",\n            \"driver__PureFC__driver_ssl_cert_path\": \"\",\n            \"driver__PureFC__driver_ssl_cert_verify\": false,\n            \"driver__PureFC__pure_api_token\": \"\",\n            \"driver__PureFC__pure_automatic_max_oversubscription_ratio\": true,\n            \"driver__PureFC__pure_eradicate_on_delete\": false,\n            \"driver__PureFC__pure_host_personality__transform_empty_none\": \"\",\n            \"driver__PureFC__pure_iscsi_cidr\": \"0.0.0.0/0\",\n            \"driver__PureFC__pure_replica_interval_default\": 3600,\n            \"driver__PureFC__pure_replica_retention_long_term_default\": 7,\n            \"driver__PureFC__pure_replica_retention_long_term_per_day_default\": 3,\n            \"driver__PureFC__pure_replica_retention_short_term_default\": 14400,\n            \"driver__PureFC__pure_replication_pg_name\": \"cinder-group\",\n            \"driver__PureFC__pure_replication_pod_name\": \"cinder-pod\",\n            \"driver__PureFC__san_ip\": \"\",\n            \"driver__PureFC__use_chap_auth\": false,\n            \"driver__PureISCSI__driver_ssl_cert_path\": \"\",\n            \"driver__PureISCSI__driver_ssl_cert_verify\": false,\n            \"driver__PureISCSI__pure_api_token\": \"\",\n            \"driver__PureISCSI__pure_automatic_max_oversubscription_ratio\": true,\n            \"driver__PureISCSI__pure_eradicate_on_delete\": false,\n            \"driver__PureISCSI__pure_host_personality__transform_empty_none\": \"\",\n            \"driver__PureISCSI__pure_iscsi_cidr\": \"0.0.0.0/0\",\n            \"driver__PureISCSI__pure_replica_interval_default\": 3600,\n            \"driver__PureISCSI__pure_replica_retention_long_term_default\": 7,\n            \"driver__PureISCSI__pure_replica_retention_long_term_per_day_default\": 3,\n            \"driver__PureISCSI__pure_replica_retention_short_term_default\": 14400,\n            \"driver__PureISCSI__pure_replication_pg_name\": \"cinder-group\",\n            \"driver__PureISCSI__pure_replication_pod_name\": \"cinder-pod\",\n            \"driver__PureISCSI__san_ip\": \"\",\n            \"driver__PureISCSI__use_chap_auth\": false,\n            \"driver__QnapISCSI__chap_password\": \"\",\n            \"driver__QnapISCSI__chap_username\": \"\",\n            \"driver__QnapISCSI__driver_ssl_cert_verify\": false,\n            \"driver__QnapISCSI__qnap_management_url\": \"\",\n            \"driver__QnapISCSI__qnap_poolname\": \"\",\n            \"driver__QnapISCSI__qnap_storage_protocol\": \"iscsi\",\n            \"driver__QnapISCSI__san_login\": \"admin\",\n            \"driver__QnapISCSI__san_password\": \"\",\n            \"driver__QnapISCSI__target_ip_address\": \"$my_ip\",\n            \"driver__QnapISCSI__use_chap_auth\": false,\n            \"driver__Quobyte__quobyte_client_cfg\": \"\",\n            \"driver__Quobyte__quobyte_mount_point_base\": \"$state_path/mnt\",\n            \"driver__Quobyte__quobyte_overlay_volumes\": false,\n            \"driver__Quobyte__quobyte_qcow2_volumes\": true,\n            \"driver__Quobyte__quobyte_sparsed_volumes\": true,\n            \"driver__Quobyte__quobyte_volume_from_snapshot_cache\": false,\n            \"driver__Quobyte__quobyte_volume_url\": \"\",\n            \"driver__RBD__deferred_deletion_delay\": 0,\n            \"driver__RBD__deferred_deletion_purge_interval\": 60,\n            \"driver__RBD__enable_deferred_deletion\": false,\n            \"driver__RBD__rados_connect_timeout\": -1,\n            \"driver__RBD__rados_connection_interval\": 5,\n            \"driver__RBD__rados_connection_retries\": 3,\n            \"driver__RBD__rbd_ceph_conf\": \"\",\n            \"driver__RBD__rbd_cluster_name\": \"ceph\",\n            \"driver__RBD__rbd_exclusive_cinder_pool\": false,\n            \"driver__RBD__rbd_flatten_volume_from_snapshot\": false,\n            \"driver__RBD__rbd_keyring_conf\": \"\",\n            \"driver__RBD__rbd_max_clone_depth\": 5,\n            \"driver__RBD__rbd_pool\": \"rbd\",\n            \"driver__RBD__rbd_secret_uuid\": \"\",\n            \"driver__RBD__rbd_store_chunk_size\": 4,\n            \"driver__RBD__rbd_user\": \"\",\n            \"driver__RBD__report_dynamic_total_capacity\": true,\n            \"driver__RBD__volume_dd_blocksize\": \"1M\",\n            \"driver__RBDISCSI__deferred_deletion_delay\": 0,\n            \"driver__RBDISCSI__deferred_deletion_purge_interval\": 60,\n            \"driver__RBDISCSI__driver_ssl_cert_verify\": false,\n            \"driver__RBDISCSI__enable_deferred_deletion\": false,\n            \"driver__RBDISCSI__rados_connect_timeout\": -1,\n            \"driver__RBDISCSI__rados_connection_interval\": 5,\n            \"driver__RBDISCSI__rados_connection_retries\": 3,\n            \"driver__RBDISCSI__rbd_ceph_conf\": \"\",\n            \"driver__RBDISCSI__rbd_cluster_name\": \"ceph\",\n            \"driver__RBDISCSI__rbd_exclusive_cinder_pool\": false,\n            \"driver__RBDISCSI__rbd_flatten_volume_from_snapshot\": false,\n            \"driver__RBDISCSI__rbd_iscsi_api_debug\": false,\n            \"driver__RBDISCSI__rbd_iscsi_api_password\": \"\",\n            \"driver__RBDISCSI__rbd_iscsi_api_url\": \"\",\n            \"driver__RBDISCSI__rbd_iscsi_api_user\": \"\",\n            \"driver__RBDISCSI__rbd_iscsi_target_iqn\": \"\",\n            \"driver__RBDISCSI__rbd_max_clone_depth\": 5,\n            \"driver__RBDISCSI__rbd_pool\": \"rbd\",\n            \"driver__RBDISCSI__rbd_secret_uuid\": \"\",\n            \"driver__RBDISCSI__rbd_store_chunk_size\": 4,\n            \"driver__RBDISCSI__rbd_user\": \"\",\n            \"driver__RBDISCSI__report_dynamic_total_capacity\": true,\n            \"driver__RBDISCSI__suppress_requests_ssl_warnings\": false,\n            \"driver__RBDISCSI__volume_dd_blocksize\": \"1M\",\n            \"driver__RSD__podm_password\": \"\",\n            \"driver__RSD__podm_url\": \"\",\n            \"driver__RSD__podm_username\": \"\",\n            \"driver__SCFC__dell_api_async_rest_timeout\": 15,\n            \"driver__SCFC__dell_api_sync_rest_timeout\": 30,\n            \"driver__SCFC__dell_sc_api_port\": 3033,\n            \"driver__SCFC__dell_sc_server_folder\": \"openstack\",\n            \"driver__SCFC__dell_sc_ssn\": 64702,\n            \"driver__SCFC__dell_sc_verify_cert\": false,\n            \"driver__SCFC__dell_sc_volume_folder\": \"openstack\",\n            \"driver__SCFC__dell_server_os\": \"Red Hat Linux 6.x\",\n            \"driver__SCFC__excluded_domain_ips__transform_csv\": \"\",\n            \"driver__SCFC__included_domain_ips__transform_csv\": \"\",\n            \"driver__SCFC__secondary_san_ip\": \"\",\n            \"driver__SCFC__secondary_san_login\": \"Admin\",\n            \"driver__SCFC__secondary_san_password\": \"\",\n            \"driver__SCFC__secondary_sc_api_port\": 3033,\n            \"driver__SCISCSI__dell_api_async_rest_timeout\": 15,\n            \"driver__SCISCSI__dell_api_sync_rest_timeout\": 30,\n            \"driver__SCISCSI__dell_sc_api_port\": 3033,\n            \"driver__SCISCSI__dell_sc_server_folder\": \"openstack\",\n            \"driver__SCISCSI__dell_sc_ssn\": 64702,\n            \"driver__SCISCSI__dell_sc_verify_cert\": false,\n            \"driver__SCISCSI__dell_sc_volume_folder\": \"openstack\",\n            \"driver__SCISCSI__dell_server_os\": \"Red Hat Linux 6.x\",\n            \"driver__SCISCSI__excluded_domain_ips__transform_csv\": \"\",\n            \"driver__SCISCSI__included_domain_ips__transform_csv\": \"\",\n            \"driver__SCISCSI__secondary_san_ip\": \"\",\n            \"driver__SCISCSI__secondary_san_login\": \"Admin\",\n            \"driver__SCISCSI__secondary_san_password\": \"\",\n            \"driver__SCISCSI__secondary_sc_api_port\": 3033,\n            \"driver__SdsISCSI__backend_availability_zone\": \"\",\n            \"driver__SdsISCSI__chap_password\": \"\",\n            \"driver__SdsISCSI__chap_username\": \"\",\n            \"driver__SdsISCSI__chiscsi_conf\": \"/etc/chelsio-iscsi/chiscsi.conf\",\n            \"driver__SdsISCSI__driver_client_cert\": \"\",\n            \"driver__SdsISCSI__driver_client_cert_key\": \"\",\n            \"driver__SdsISCSI__driver_data_namespace\": \"\",\n            \"driver__SdsISCSI__driver_ssl_cert_path\": \"\",\n            \"driver__SdsISCSI__driver_ssl_cert_verify\": false,\n            \"driver__SdsISCSI__driver_use_ssl\": false,\n            \"driver__SdsISCSI__filter_function\": \"\",\n            \"driver__SdsISCSI__goodness_function\": \"\",\n            \"driver__SdsISCSI__iscsi_iotype\": \"fileio\",\n            \"driver__SdsISCSI__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__SdsISCSI__iscsi_target_flags\": \"\",\n            \"driver__SdsISCSI__iscsi_write_cache\": \"on\",\n            \"driver__SdsISCSI__num_shell_tries\": 3,\n            \"driver__SdsISCSI__num_volume_device_scan_tries\": 3,\n            \"driver__SdsISCSI__report_discard_supported\": false,\n            \"driver__SdsISCSI__storage_protocol\": \"iscsi\",\n            \"driver__SdsISCSI__target_helper\": \"tgtadm\",\n            \"driver__SdsISCSI__target_ip_address\": \"$my_ip\",\n            \"driver__SdsISCSI__target_port\": 3260,\n            \"driver__SdsISCSI__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__SdsISCSI__target_protocol\": \"iscsi\",\n            \"driver__SdsISCSI__trace_flags__transform_csv\": \"\",\n            \"driver__SdsISCSI__use_chap_auth\": false,\n            \"driver__SdsISCSI__volume_backend_name\": \"\",\n            \"driver__SdsISCSI__volume_clear\": \"zero\",\n            \"driver__SdsISCSI__volume_clear_ionice\": \"\",\n            \"driver__SdsISCSI__volume_clear_size\": 0,\n            \"driver__SdsISCSI__volume_copy_blkio_cgroup_name\": \"cinder-volume-copy\",\n            \"driver__SdsISCSI__volume_copy_bps_limit\": 0,\n            \"driver__SdsISCSI__volume_dd_blocksize\": \"1M\",\n            \"driver__SdsISCSI__volumes_dir\": \"$state_path/volumes\",\n            \"driver__SolidFire__driver_ssl_cert_verify\": false,\n            \"driver__SolidFire__san_ip\": \"\",\n            \"driver__SolidFire__san_login\": \"admin\",\n            \"driver__SolidFire__san_password\": \"\",\n            \"driver__SolidFire__sf_account_prefix\": \"\",\n            \"driver__SolidFire__sf_allow_tenant_qos\": false,\n            \"driver__SolidFire__sf_api_port\": 443,\n            \"driver__SolidFire__sf_api_request_timeout\": 30,\n            \"driver__SolidFire__sf_cluster_pairing_timeout\": 60,\n            \"driver__SolidFire__sf_emulate_512\": true,\n            \"driver__SolidFire__sf_enable_vag\": false,\n            \"driver__SolidFire__sf_provisioning_calc\": \"maxProvisionedSpace\",\n            \"driver__SolidFire__sf_svip\": \"\",\n            \"driver__SolidFire__sf_volume_clone_timeout\": 600,\n            \"driver__SolidFire__sf_volume_create_timeout\": 60,\n            \"driver__SolidFire__sf_volume_pairing_timeout\": 3600,\n            \"driver__SolidFire__sf_volume_prefix\": \"UUID-\",\n            \"driver__StorPool__storpool_replication\": 3,\n            \"driver__StorPool__storpool_template\": \"\",\n            \"driver__StorwizeSVCFC__cycle_period_seconds\": 300,\n            \"driver__StorwizeSVCFC__storwize_peer_pool\": \"\",\n            \"driver__StorwizeSVCFC__storwize_preferred_host_site__transform_csv_kvs\": \"\",\n            \"driver__StorwizeSVCFC__storwize_san_secondary_ip\": \"\",\n            \"driver__StorwizeSVCFC__storwize_svc_allow_tenant_qos\": false,\n            \"driver__StorwizeSVCFC__storwize_svc_flashcopy_rate\": 50,\n            \"driver__StorwizeSVCFC__storwize_svc_flashcopy_timeout\": 120,\n            \"driver__StorwizeSVCFC__storwize_svc_mirror_pool\": \"\",\n            \"driver__StorwizeSVCFC__storwize_svc_multipath_enabled\": false,\n            \"driver__StorwizeSVCFC__storwize_svc_retain_aux_volume\": false,\n            \"driver__StorwizeSVCFC__storwize_svc_stretched_cluster_partner\": \"\",\n            \"driver__StorwizeSVCFC__storwize_svc_vol_autoexpand\": true,\n            \"driver__StorwizeSVCFC__storwize_svc_vol_compression\": false,\n            \"driver__StorwizeSVCFC__storwize_svc_vol_easytier\": true,\n            \"driver__StorwizeSVCFC__storwize_svc_vol_grainsize\": 256,\n            \"driver__StorwizeSVCFC__storwize_svc_vol_iogrp\": \"0\",\n            \"driver__StorwizeSVCFC__storwize_svc_vol_nofmtdisk\": false,\n            \"driver__StorwizeSVCFC__storwize_svc_vol_rsize\": 2,\n            \"driver__StorwizeSVCFC__storwize_svc_vol_warning\": 0,\n            \"driver__StorwizeSVCFC__storwize_svc_volpool_name__transform_csv\": \"volpool\",\n            \"driver__StorwizeSVCISCSI__cycle_period_seconds\": 300,\n            \"driver__StorwizeSVCISCSI__storwize_peer_pool\": \"\",\n            \"driver__StorwizeSVCISCSI__storwize_preferred_host_site__transform_csv_kvs\": \"\",\n            \"driver__StorwizeSVCISCSI__storwize_san_secondary_ip\": \"\",\n            \"driver__StorwizeSVCISCSI__storwize_svc_allow_tenant_qos\": false,\n            \"driver__StorwizeSVCISCSI__storwize_svc_flashcopy_rate\": 50,\n            \"driver__StorwizeSVCISCSI__storwize_svc_flashcopy_timeout\": 120,\n            \"driver__StorwizeSVCISCSI__storwize_svc_iscsi_chap_enabled\": true,\n            \"driver__StorwizeSVCISCSI__storwize_svc_mirror_pool\": \"\",\n            \"driver__StorwizeSVCISCSI__storwize_svc_retain_aux_volume\": false,\n            \"driver__StorwizeSVCISCSI__storwize_svc_stretched_cluster_partner\": \"\",\n            \"driver__StorwizeSVCISCSI__storwize_svc_vol_autoexpand\": true,\n            \"driver__StorwizeSVCISCSI__storwize_svc_vol_compression\": false,\n            \"driver__StorwizeSVCISCSI__storwize_svc_vol_easytier\": true,\n            \"driver__StorwizeSVCISCSI__storwize_svc_vol_grainsize\": 256,\n            \"driver__StorwizeSVCISCSI__storwize_svc_vol_iogrp\": \"0\",\n            \"driver__StorwizeSVCISCSI__storwize_svc_vol_nofmtdisk\": false,\n            \"driver__StorwizeSVCISCSI__storwize_svc_vol_rsize\": 2,\n            \"driver__StorwizeSVCISCSI__storwize_svc_vol_warning\": 0,\n            \"driver__StorwizeSVCISCSI__storwize_svc_volpool_name__transform_csv\": \"volpool\",\n            \"driver__SynoISCSI__chap_password\": \"\",\n            \"driver__SynoISCSI__chap_username\": \"\",\n            \"driver__SynoISCSI__driver_use_ssl\": false,\n            \"driver__SynoISCSI__iscsi_secondary_ip_addresses__transform_csv\": \"\",\n            \"driver__SynoISCSI__synology_admin_port\": 5000,\n            \"driver__SynoISCSI__synology_device_id\": \"\",\n            \"driver__SynoISCSI__synology_one_time_pass\": \"\",\n            \"driver__SynoISCSI__synology_password\": \"\",\n            \"driver__SynoISCSI__synology_pool_name\": \"\",\n            \"driver__SynoISCSI__synology_ssl_verify\": true,\n            \"driver__SynoISCSI__synology_username\": \"admin\",\n            \"driver__SynoISCSI__target_ip_address\": \"$my_ip\",\n            \"driver__SynoISCSI__target_port\": 3260,\n            \"driver__SynoISCSI__target_prefix\": \"iqn.2010-10.org.openstack:\",\n            \"driver__SynoISCSI__target_protocol\": \"iscsi\",\n            \"driver__SynoISCSI__use_chap_auth\": false,\n            \"driver__Unity__remove_empty_host\": false,\n            \"driver__Unity__unity_io_ports__transform_csv\": \"\",\n            \"driver__Unity__unity_storage_pool_names__transform_csv\": \"\",\n            \"driver__VNX__default_timeout\": 31536000,\n            \"driver__VNX__destroy_empty_storage_group\": false,\n            \"driver__VNX__force_delete_lun_in_storagegroup\": true,\n            \"driver__VNX__ignore_pool_full_threshold\": false,\n            \"driver__VNX__initiator_auto_deregistration\": false,\n            \"driver__VNX__initiator_auto_registration\": false,\n            \"driver__VNX__io_port_list__transform_csv\": \"\",\n            \"driver__VNX__iscsi_initiators\": \"\",\n            \"driver__VNX__max_luns_per_storage_group\": 255,\n            \"driver__VNX__naviseccli_path\": \"\",\n            \"driver__VNX__storage_vnx_authentication_type\": \"global\",\n            \"driver__VNX__storage_vnx_pool_names__transform_csv\": \"\",\n            \"driver__VNX__storage_vnx_security_file_dir\": \"\",\n            \"driver__VNX__vnx_async_migrate\": true,\n            \"driver__VZStorage__vzstorage_default_volume_format\": \"raw\",\n            \"driver__VZStorage__vzstorage_mount_options__transform_csv\": \"\",\n            \"driver__VZStorage__vzstorage_mount_point_base\": \"$state_path/mnt\",\n            \"driver__VZStorage__vzstorage_shares_config\": \"/etc/cinder/vzstorage_shares\",\n            \"driver__VZStorage__vzstorage_sparsed_volumes\": true,\n            \"driver__VZStorage__vzstorage_used_ratio__transform_string_float\": \"0.95\",\n            \"driver__WindowsISCSI__windows_iscsi_lun_path\": \"C:\\\\iSCSIVirtualDisks\",\n            \"driver__WindowsSmbfs__smbfs_default_volume_format\": \"vhd\",\n            \"driver__WindowsSmbfs__smbfs_mount_point_base\": \"C:\\\\OpenStack\\\\_mnt\",\n            \"driver__WindowsSmbfs__smbfs_pool_mappings__transform_csv_kvs\": \"\",\n            \"driver__WindowsSmbfs__smbfs_shares_config\": \"C:\\\\OpenStack\\\\smbfs_shares.txt\",\n            \"driver__XtremIOFC__driver_ssl_cert_path\": \"\",\n            \"driver__XtremIOFC__driver_ssl_cert_verify\": false,\n            \"driver__XtremIOFC__san_ip\": \"\",\n            \"driver__XtremIOFC__san_login\": \"admin\",\n            \"driver__XtremIOFC__san_password\": \"\",\n            \"driver__XtremIOFC__xtremio_array_busy_retry_count\": 5,\n            \"driver__XtremIOFC__xtremio_array_busy_retry_interval\": 5,\n            \"driver__XtremIOFC__xtremio_clean_unused_ig\": false,\n            \"driver__XtremIOFC__xtremio_cluster_name\": \"\",\n            \"driver__XtremIOISCSI__driver_ssl_cert_path\": \"\",\n            \"driver__XtremIOISCSI__driver_ssl_cert_verify\": false,\n            \"driver__XtremIOISCSI__san_ip\": \"\",\n            \"driver__XtremIOISCSI__san_login\": \"admin\",\n            \"driver__XtremIOISCSI__san_password\": \"\",\n            \"driver__XtremIOISCSI__xtremio_array_busy_retry_count\": 5,\n            \"driver__XtremIOISCSI__xtremio_array_busy_retry_interval\": 5,\n            \"driver__XtremIOISCSI__xtremio_clean_unused_ig\": false,\n            \"driver__XtremIOISCSI__xtremio_cluster_name\": \"\",\n            \"driver__ZadaraVPSAISCSI__zadara_access_key\": \"\",\n            \"driver__ZadaraVPSAISCSI__zadara_default_snap_policy\": false,\n            \"driver__ZadaraVPSAISCSI__zadara_ssl_cert_verify\": true,\n            \"driver__ZadaraVPSAISCSI__zadara_use_iser\": true,\n            \"driver__ZadaraVPSAISCSI__zadara_vol_encrypt\": false,\n            \"driver__ZadaraVPSAISCSI__zadara_vol_name_template\": \"OS_%s\",\n            \"driver__ZadaraVPSAISCSI__zadara_vpsa_host\": \"\",\n            \"driver__ZadaraVPSAISCSI__zadara_vpsa_poolname\": \"\",\n            \"driver__ZadaraVPSAISCSI__zadara_vpsa_port\": \"\",\n            \"driver__ZadaraVPSAISCSI__zadara_vpsa_use_ssl\": false\n          }\n        },\n        \"sysFiles\": {\n          \"name\": \"\"\n        }\n      }\n    }\n  }\n]","capabilities":"Basic Install","categories":"Storage","certified":"false","containerImage":"quay.io/embercsi/ember-csi-operator:latest","createdAt":"2021-02-22:17:47:00","description":"Multi-vendor CSI plugin supporting 80+ storage drivers","repository":"https://github.com/embercsi/ember-csi-operator","support":"http://readthedocs.org/projects/ember-csi/"},"name":"ember-csi-community-operator.v0.9.9","namespace":"ember-csi"},"spec":{"apiservicedefinitions":{},"customresourcedefinitions":{"owned":[{"description":"Represents an Ember CSI storage backend","displayName":"Storage Backends","kind":"EmberStorageBackend","name":"embercsis.ember-csi.io","resources":[{"kind":"StorageClass","name":"","version":"v1"},{"kind":"StatefulSet","name":"","version":"v1"},{"kind":"EmberStorageBackend","name":"","version":"v1alpha"},{"kind":"Daemonset","name":"","version":"v1"}],"specDescriptors":[{"description":"Config for Ember","displayName":"config","path":"config"},{"description":"Ember CSI driver container image to use. Defaults to embercsi/ember-csi:master or driver-specific image.","displayName":"Ember CSI driver container image","path":"config.driverImage","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"The type of storage backend","displayName":"Driver","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:ZadaraVPSAISCSI","urn:alm:descriptor:com.tectonic.ui:select:XtremIOISCSI","urn:alm:descriptor:com.tectonic.ui:select:XtremIOFC","urn:alm:descriptor:com.tectonic.ui:select:WindowsSmbfs","urn:alm:descriptor:com.tectonic.ui:select:WindowsISCSI","urn:alm:descriptor:com.tectonic.ui:select:VZStorage","urn:alm:descriptor:com.tectonic.ui:select:VNX","urn:alm:descriptor:com.tectonic.ui:select:Unity","urn:alm:descriptor:com.tectonic.ui:select:SynoISCSI","urn:alm:descriptor:com.tectonic.ui:select:StorwizeSVCISCSI","urn:alm:descriptor:com.tectonic.ui:select:StorwizeSVCFC","urn:alm:descriptor:com.tectonic.ui:select:StorPool","urn:alm:descriptor:com.tectonic.ui:select:SolidFire","urn:alm:descriptor:com.tectonic.ui:select:SdsISCSI","urn:alm:descriptor:com.tectonic.ui:select:SPDK","urn:alm:descriptor:com.tectonic.ui:select:SCISCSI","urn:alm:descriptor:com.tectonic.ui:select:SCFC","urn:alm:descriptor:com.tectonic.ui:select:RSD","urn:alm:descriptor:com.tectonic.ui:select:RBDISCSI","urn:alm:descriptor:com.tectonic.ui:select:RBD","urn:alm:descriptor:com.tectonic.ui:select:Quobyte","urn:alm:descriptor:com.tectonic.ui:select:QnapISCSI","urn:alm:descriptor:com.tectonic.ui:select:PureISCSI","urn:alm:descriptor:com.tectonic.ui:select:PureFC","urn:alm:descriptor:com.tectonic.ui:select:PowerStore","urn:alm:descriptor:com.tectonic.ui:select:PowerMaxISCSI","urn:alm:descriptor:com.tectonic.ui:select:PowerMaxFC","urn:alm:descriptor:com.tectonic.ui:select:PowerFlex","urn:alm:descriptor:com.tectonic.ui:select:PVMEISCSI","urn:alm:descriptor:com.tectonic.ui:select:PVMEFC","urn:alm:descriptor:com.tectonic.ui:select:NimbleISCSI","urn:alm:descriptor:com.tectonic.ui:select:NimbleFC","urn:alm:descriptor:com.tectonic.ui:select:NexentaISCSI","urn:alm:descriptor:com.tectonic.ui:select:NetAppCmodeISCSI","urn:alm:descriptor:com.tectonic.ui:select:NetAppCmodeFibreChannel","urn:alm:descriptor:com.tectonic.ui:select:MacroSANISCSI","urn:alm:descriptor:com.tectonic.ui:select:MacroSANFC","urn:alm:descriptor:com.tectonic.ui:select:MStorageISCSI","urn:alm:descriptor:com.tectonic.ui:select:MStorageFC","urn:alm:descriptor:com.tectonic.ui:select:LinstorIscsi","urn:alm:descriptor:com.tectonic.ui:select:LinstorDrbd","urn:alm:descriptor:com.tectonic.ui:select:LenovoISCSI","urn:alm:descriptor:com.tectonic.ui:select:LenovoFC","urn:alm:descriptor:com.tectonic.ui:select:LVMVolume","urn:alm:descriptor:com.tectonic.ui:select:KaminarioISCSI","urn:alm:descriptor:com.tectonic.ui:select:JovianISCSI","urn:alm:descriptor:com.tectonic.ui:select:InfortrendCLIISCSI","urn:alm:descriptor:com.tectonic.ui:select:InfortrendCLIFC","urn:alm:descriptor:com.tectonic.ui:select:InfiniboxVolume","urn:alm:descriptor:com.tectonic.ui:select:InStorageMCSISCSI","urn:alm:descriptor:com.tectonic.ui:select:InStorageMCSFC","urn:alm:descriptor:com.tectonic.ui:select:IBMStorage","urn:alm:descriptor:com.tectonic.ui:select:HuaweiISCSI","urn:alm:descriptor:com.tectonic.ui:select:HuaweiFC","urn:alm:descriptor:com.tectonic.ui:select:HedvigISCSI","urn:alm:descriptor:com.tectonic.ui:select:HPMSAISCSI","urn:alm:descriptor:com.tectonic.ui:select:HPMSAFC","urn:alm:descriptor:com.tectonic.ui:select:HPE3PARISCSI","urn:alm:descriptor:com.tectonic.ui:select:HPE3PARFC","urn:alm:descriptor:com.tectonic.ui:select:HBSDISCSI","urn:alm:descriptor:com.tectonic.ui:select:HBSDFC","urn:alm:descriptor:com.tectonic.ui:select:GPFSRemote","urn:alm:descriptor:com.tectonic.ui:select:GPFS","urn:alm:descriptor:com.tectonic.ui:select:FlashSystemISCSI","urn:alm:descriptor:com.tectonic.ui:select:FlashSystemFC","urn:alm:descriptor:com.tectonic.ui:select:FJDXISCSI","urn:alm:descriptor:com.tectonic.ui:select:FJDXFC","urn:alm:descriptor:com.tectonic.ui:select:Datera","urn:alm:descriptor:com.tectonic.ui:select:DSWARE","urn:alm:descriptor:com.tectonic.ui:select:DPLISCSI","urn:alm:descriptor:com.tectonic.ui:select:DPLFC","urn:alm:descriptor:com.tectonic.ui:select:Acs5000ISCSI","urn:alm:descriptor:com.tectonic.ui:select:AS13000","urn:alm:descriptor:com.tectonic.ui:select:ACCESSIscsi"]},{"description":"Va Config File.","displayName":"Vrts Target Config","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ACCESSIscsi__vrts_target_config","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ACCESSIscsi"]},{"description":"Create Sparse Lun.","displayName":"Vrts Lun Sparse","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ACCESSIscsi__vrts_lun_sparse","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ACCESSIscsi"]},{"description":"The Pool Which Is Used As A Meta Pool When Creating A Volume, And It Should Be A Replication Pool At Present. If Not Set, The Driver Will Choose A Replication Pool From The Value Of As13000_Ipsan_Pools.","displayName":"As13000 Meta Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__AS13000__as13000_meta_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:AS13000"]},{"description":"The Storage Pools Cinder Should Use, A Comma Separated List. [ie: v1,v2]","displayName":"As13000 Ipsan Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__AS13000__as13000_ipsan_pools__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:AS13000"]},{"description":"The Effective Time Of Token Validity In Seconds. (min=600, max=3600)","displayName":"As13000 Token Available Time","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__AS13000__as13000_token_available_time","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:AS13000"]},{"description":"Comma Separated List Of Storage System Storage Pools For Volumes. [ie: v1,v2]","displayName":"Acs5000 Volpool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Acs5000ISCSI__acs5000_volpool_name__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Acs5000ISCSI"]},{"description":"A Storage System Iscsi Support 0 - 127 Targets. Devices Connected To The Scsi Bus Are Usually Described By The Target Id(Also Known As The Scsi Id). Multiple Lun Numbers Can Be Supported Under A Target. A Single Device Is Usually Identified By The Target And The Lun. (min=0, max=127)","displayName":"Acs5000 Target","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Acs5000ISCSI__acs5000_target","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Acs5000ISCSI"]},{"description":"When Volume Copy Task Is Going On,Refresh Volume Status Interval (min=3, max=100)","displayName":"Acs5000 Copy Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Acs5000ISCSI__acs5000_copy_interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Acs5000ISCSI"]},{"description":"Dpl Pool Uuid In Which Dpl Volumes Are Stored.","displayName":"Dpl Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__DPLFC__dpl_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:DPLFC"]},{"description":"Dpl Port Number. (min=0, max=65535)","displayName":"Dpl Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__DPLFC__dpl_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:DPLFC"]},{"description":"Dpl Pool Uuid In Which Dpl Volumes Are Stored.","displayName":"Dpl Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__DPLISCSI__dpl_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:DPLISCSI"]},{"description":"Dpl Port Number. (min=0, max=65535)","displayName":"Dpl Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__DPLISCSI__dpl_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:DPLISCSI"]},{"description":"This Option Is To Support The Fsa To Mount Across The Different Nodes. The Parameters Takes The Standard Dict Config Form, Manager_Ips = Host1:Ip1, Host2:Ip2... [ie: k1:v1,k2:v2]","displayName":"Manager Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__DSWARE__manager_ips__transform_csv_kvs","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:DSWARE"]},{"description":"The Address Of Fusionstorage Array. For Example, 'Dsware_Rest_Url=Xxx'","displayName":"Dsware Rest Url","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__DSWARE__dsware_rest_url","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:DSWARE"]},{"description":"The List Of Pools On The Fusionstorage Array, The Semicolon(;) Was Used To Split The Storage Pools, 'Dsware_Storage_Pools = Xxx1; Xxx2; Xxx3'","displayName":"Dsware Storage Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__DSWARE__dsware_storage_pools","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:DSWARE"]},{"description":"Volume Configuration File Storage Directory","displayName":"Volumes Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__volumes_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Path To The Client Certificate For Verification, If The Driver Supports It.","displayName":"Driver Client Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__driver_client_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Maximum Number Of Times To Rescan Targets To Find Volume","displayName":"Num Volume Device Scan Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__num_volume_device_scan_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Backend Name For A Given Driver Implementation","displayName":"Volume Backend Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__volume_backend_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Method Used To Wipe Old Volumes","displayName":"Volume Clear","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__volume_clear","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:none","urn:alm:descriptor:com.tectonic.ui:select:zero","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Chiscsi (Cxt) Global Defaults Configuration File","displayName":"Chiscsi Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__chiscsi_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"String Representation For An Equation That Will Be Used To Filter Hosts. Only Used When The Driver Filter Is Set To Be Used By The Cinder Scheduler.","displayName":"Filter Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__filter_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Namespace For Driver Private Data Values To Be Saved In.","displayName":"Driver Data Namespace","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__driver_data_namespace","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Write-Back(On) Or Write-Through(Off). This Parameter Is Valid If Target_Helper Is Set To Tgtadm.","displayName":"Iscsi Write Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__iscsi_write_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Flag To Pass To Ionice To Alter The I/O Priority Of The Process Used To Zero A Volume After Deletion, For Example '-C3' For Idle Only Priority.","displayName":"Volume Clear Ionice","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__volume_clear_ionice","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Blockio Or Fileio Optionally, Auto Can Be Set And Cinder Will Autodetect Type Of Backing Device","displayName":"Iscsi Iotype","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__iscsi_iotype","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:blockio","urn:alm:descriptor:com.tectonic.ui:select:fileio","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"List Of Options That Control Which Trace Info Is Written To The Debug Log Level To Assist Developers. Valid Values Are Method And Api. [ie: v1,v2]","displayName":"Trace Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__trace_flags__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Protocol For Transferring Data Between Host And Storage Back-End.","displayName":"Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:fc","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"String Representation For An Equation That Will Be Used To Determine The Goodness Of A Host. Only Used When Using The Goodness Weigher Is Set To Be Used By The Cinder Scheduler.","displayName":"Goodness Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__goodness_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Number Of Times To Attempt To Run Flakey Shell Commands","displayName":"Num Shell Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__num_shell_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Target User-Land Tool To Use. Tgtadm Is Default, Use Lioadm For Lio Iscsi Support, Scstadmin For Scst Target Support, Ietadm For Iscsi Enterprise Target, Iscsictl For Chelsio Iscsi Target, Nvmet For Nvmeof Support, Spdk-Nvmeof For Spdk Nvme-Of, Or Fake For Testing. Note: The Iet Driver Is Deprecated And Will Be Removed In The V Release.","displayName":"Target Helper","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__target_helper","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:tgtadm","urn:alm:descriptor:com.tectonic.ui:select:lioadm","urn:alm:descriptor:com.tectonic.ui:select:scstadmin","urn:alm:descriptor:com.tectonic.ui:select:iscsictl","urn:alm:descriptor:com.tectonic.ui:select:ietadm","urn:alm:descriptor:com.tectonic.ui:select:nvmet","urn:alm:descriptor:com.tectonic.ui:select:spdk-nvmeof","urn:alm:descriptor:com.tectonic.ui:select:fake","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Report To Clients Of Cinder That The Backend Supports Discard (Aka. Trim/Unmap). This Will Not Actually Change The Behavior Of The Backend Or The Client Directly, It Will Only Notify That It Can Be Used.","displayName":"Report Discard Supported","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__report_discard_supported","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Upper Limit Of Bandwidth Of Volume Copy. 0 =\u003e Unlimited","displayName":"Volume Copy Bps Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__volume_copy_bps_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Path To The Client Certificate Key For Verification, If The Driver Supports It.","displayName":"Driver Client Cert Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__driver_client_cert_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Availability Zone For This Volume Backend. If Not Set, The Storage_Availability_Zone Option Value Is Used As The Default For All Backends.","displayName":"Backend Availability Zone","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__backend_availability_zone","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Size In Mib To Wipe At Start Of Old Volumes. 1024 Mib At Max. 0 =\u003e All (max=1024)","displayName":"Volume Clear Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__volume_clear_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Sets The Target-Specific Flags For The Iscsi Target. Only Used For Tgtadm To Specify Backing Device Flags Using Bsoflags Option. The Specified String Is Passed As Is To The Underlying Tool.","displayName":"Iscsi Target Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__iscsi_target_flags","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"The Blkio Cgroup Name To Be Used To Limit Bandwidth Of Volume Copy","displayName":"Volume Copy Blkio Cgroup Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__volume_copy_blkio_cgroup_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Datera__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Datera"]},{"description":"Config File For Cinder Eternus_Dx Volume Driver.","displayName":"Cinder Eternus Config File","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__FJDXFC__cinder_eternus_config_file","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:FJDXFC"]},{"description":"Config File For Cinder Eternus_Dx Volume Driver.","displayName":"Cinder Eternus Config File","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__FJDXISCSI__cinder_eternus_config_file","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:FJDXISCSI"]},{"description":"Connection Protocol Should Be Fc. (Default Is Fc.)","displayName":"Flashsystem Connection Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__FlashSystemFC__flashsystem_connection_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:FlashSystemFC"]},{"description":"Allows Vdisk To Multi Host Mapping. (Default Is True)","displayName":"Flashsystem Multihostmap Enabled","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__FlashSystemFC__flashsystem_multihostmap_enabled","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:FlashSystemFC"]},{"description":"Connection Protocol Should Be Fc. (Default Is Fc.)","displayName":"Flashsystem Connection Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__FlashSystemISCSI__flashsystem_connection_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:FlashSystemISCSI"]},{"description":"Allows Vdisk To Multi Host Mapping. (Default Is True)","displayName":"Flashsystem Multihostmap Enabled","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__FlashSystemISCSI__flashsystem_multihostmap_enabled","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:FlashSystemISCSI"]},{"description":"Specifies That Volumes Are Created As Sparse Files Which Initially Consume No Space. If Set To False, The Volume Is Created As A Fully Allocated File, In Which Case, Creation May Take A Significantly Longer Time.","displayName":"Gpfs Sparse Volumes","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFS__gpfs_sparse_volumes","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFS"]},{"description":"Specifies The Storage Pool That Volumes Are Assigned To. By Default, The System Storage Pool Is Used.","displayName":"Gpfs Storage Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFS__gpfs_storage_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFS"]},{"description":"Specifies An Upper Limit On The Number Of Indirections Required To Reach A Specific Block Due To Snapshots Or Clones.  A Lengthy Chain Of Copy-On-Write Snapshots Or Clones Can Have A Negative Impact On Performance, But Improves Space Utilization.  0 Indicates Unlimited Clone Depth.","displayName":"Gpfs Max Clone Depth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFS__gpfs_max_clone_depth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFS"]},{"description":"Specifies The Path Of The Gpfs Directory Where Block Storage Volume And Snapshot Files Are Stored.","displayName":"Gpfs Mount Point Base","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFS__gpfs_mount_point_base","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFS"]},{"description":"Specifies The Path Of The Image Service Repository In Gpfs.  Leave Undefined If Not Storing Images In Gpfs.","displayName":"Gpfs Images Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFS__gpfs_images_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFS"]},{"description":"Specifies The Type Of Image Copy To Be Used.  Set This When The Image Service Repository Also Uses Gpfs So That Image Files Can Be Transferred Efficiently From The Image Service To The Block Storage Service. There Are Two Valid Values: 'Copy' Specifies That A Full Copy Of The Image Is Made; 'Copy_On_Write' Specifies That Copy-On-Write Optimization Strategy Is Used And Unmodified Blocks Of The Image File Are Shared Efficiently.","displayName":"Gpfs Images Share Mode","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFS__gpfs_images_share_mode__transform_empty_none","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:copy","urn:alm:descriptor:com.tectonic.ui:select:copy_on_write","urn:alm:descriptor:com.tectonic.ui:select:","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFS"]},{"description":"Specifies That Volumes Are Created As Sparse Files Which Initially Consume No Space. If Set To False, The Volume Is Created As A Fully Allocated File, In Which Case, Creation May Take A Significantly Longer Time.","displayName":"Gpfs Sparse Volumes","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_sparse_volumes","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Filename Of Private Key To Use For Ssh Authentication.","displayName":"Gpfs Private Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_private_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Specifies The Storage Pool That Volumes Are Assigned To. By Default, The System Storage Pool Is Used.","displayName":"Gpfs Storage Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_storage_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Specifies An Upper Limit On The Number Of Indirections Required To Reach A Specific Block Due To Snapshots Or Clones.  A Lengthy Chain Of Copy-On-Write Snapshots Or Clones Can Have A Negative Impact On Performance, But Improves Space Utilization.  0 Indicates Unlimited Clone Depth.","displayName":"Gpfs Max Clone Depth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_max_clone_depth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Username For Gpfs Nodes.","displayName":"Gpfs User Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_user_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"File Containing Ssh Host Keys For The Gpfs Nodes With Which Driver Needs To Communicate. Default=$State_Path/Ssh_Known_Hosts","displayName":"Gpfs Hosts Key File","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_hosts_key_file","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Comma-Separated List Of Ip Address Or Hostnames Of Gpfs Nodes. [ie: v1,v2]","displayName":"Gpfs Hosts","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_hosts__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Password For Gpfs Node User.","displayName":"Gpfs User Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_user_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Option To Enable Strict Gpfs Host Key Checking While Connecting To Gpfs Nodes. Default=False","displayName":"Gpfs Strict Host Key Policy","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_strict_host_key_policy","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Specifies The Path Of The Gpfs Directory Where Block Storage Volume And Snapshot Files Are Stored.","displayName":"Gpfs Mount Point Base","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_mount_point_base","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Ssh Port To Use. (min=0, max=65535)","displayName":"Gpfs Ssh Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_ssh_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Specifies The Path Of The Image Service Repository In Gpfs.  Leave Undefined If Not Storing Images In Gpfs.","displayName":"Gpfs Images Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_images_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Specifies The Type Of Image Copy To Be Used.  Set This When The Image Service Repository Also Uses Gpfs So That Image Files Can Be Transferred Efficiently From The Image Service To The Block Storage Service. There Are Two Valid Values: 'Copy' Specifies That A Full Copy Of The Image Is Made; 'Copy_On_Write' Specifies That Copy-On-Write Optimization Strategy Is Used And Unmodified Blocks Of The Image File Are Shared Efficiently.","displayName":"Gpfs Images Share Mode","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__GPFSRemote__gpfs_images_share_mode__transform_empty_none","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:copy","urn:alm:descriptor:com.tectonic.ui:select:copy_on_write","urn:alm:descriptor:com.tectonic.ui:select:","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:GPFSRemote"]},{"description":"Volume Configuration File Storage Directory","displayName":"Volumes Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__volumes_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Path To The Client Certificate For Verification, If The Driver Supports It.","displayName":"Driver Client Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__driver_client_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Maximum Number Of Times To Rescan Targets To Find Volume","displayName":"Num Volume Device Scan Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__num_volume_device_scan_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Backend Name For A Given Driver Implementation","displayName":"Volume Backend Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__volume_backend_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Method Used To Wipe Old Volumes","displayName":"Volume Clear","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__volume_clear","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:none","urn:alm:descriptor:com.tectonic.ui:select:zero","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Chiscsi (Cxt) Global Defaults Configuration File","displayName":"Chiscsi Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__chiscsi_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"String Representation For An Equation That Will Be Used To Filter Hosts. Only Used When The Driver Filter Is Set To Be Used By The Cinder Scheduler.","displayName":"Filter Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__filter_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Namespace For Driver Private Data Values To Be Saved In.","displayName":"Driver Data Namespace","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__driver_data_namespace","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Write-Back(On) Or Write-Through(Off). This Parameter Is Valid If Target_Helper Is Set To Tgtadm.","displayName":"Iscsi Write Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__iscsi_write_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Flag To Pass To Ionice To Alter The I/O Priority Of The Process Used To Zero A Volume After Deletion, For Example '-C3' For Idle Only Priority.","displayName":"Volume Clear Ionice","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__volume_clear_ionice","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Blockio Or Fileio Optionally, Auto Can Be Set And Cinder Will Autodetect Type Of Backing Device","displayName":"Iscsi Iotype","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__iscsi_iotype","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:blockio","urn:alm:descriptor:com.tectonic.ui:select:fileio","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"List Of Options That Control Which Trace Info Is Written To The Debug Log Level To Assist Developers. Valid Values Are Method And Api. [ie: v1,v2]","displayName":"Trace Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__trace_flags__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Protocol For Transferring Data Between Host And Storage Back-End.","displayName":"Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:fc","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"String Representation For An Equation That Will Be Used To Determine The Goodness Of A Host. Only Used When Using The Goodness Weigher Is Set To Be Used By The Cinder Scheduler.","displayName":"Goodness Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__goodness_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Number Of Times To Attempt To Run Flakey Shell Commands","displayName":"Num Shell Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__num_shell_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Target User-Land Tool To Use. Tgtadm Is Default, Use Lioadm For Lio Iscsi Support, Scstadmin For Scst Target Support, Ietadm For Iscsi Enterprise Target, Iscsictl For Chelsio Iscsi Target, Nvmet For Nvmeof Support, Spdk-Nvmeof For Spdk Nvme-Of, Or Fake For Testing. Note: The Iet Driver Is Deprecated And Will Be Removed In The V Release.","displayName":"Target Helper","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__target_helper","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:tgtadm","urn:alm:descriptor:com.tectonic.ui:select:lioadm","urn:alm:descriptor:com.tectonic.ui:select:scstadmin","urn:alm:descriptor:com.tectonic.ui:select:iscsictl","urn:alm:descriptor:com.tectonic.ui:select:ietadm","urn:alm:descriptor:com.tectonic.ui:select:nvmet","urn:alm:descriptor:com.tectonic.ui:select:spdk-nvmeof","urn:alm:descriptor:com.tectonic.ui:select:fake","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Report To Clients Of Cinder That The Backend Supports Discard (Aka. Trim/Unmap). This Will Not Actually Change The Behavior Of The Backend Or The Client Directly, It Will Only Notify That It Can Be Used.","displayName":"Report Discard Supported","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__report_discard_supported","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Upper Limit Of Bandwidth Of Volume Copy. 0 =\u003e Unlimited","displayName":"Volume Copy Bps Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__volume_copy_bps_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Path To The Client Certificate Key For Verification, If The Driver Supports It.","displayName":"Driver Client Cert Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__driver_client_cert_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Availability Zone For This Volume Backend. If Not Set, The Storage_Availability_Zone Option Value Is Used As The Default For All Backends.","displayName":"Backend Availability Zone","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__backend_availability_zone","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Size In Mib To Wipe At Start Of Old Volumes. 1024 Mib At Max. 0 =\u003e All (max=1024)","displayName":"Volume Clear Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__volume_clear_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Sets The Target-Specific Flags For The Iscsi Target. Only Used For Tgtadm To Specify Backing Device Flags Using Bsoflags Option. The Specified String Is Passed As Is To The Underlying Tool.","displayName":"Iscsi Target Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__iscsi_target_flags","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"The Blkio Cgroup Name To Be Used To Limit Bandwidth Of Volume Copy","displayName":"Volume Copy Blkio Cgroup Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__volume_copy_blkio_cgroup_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDFC__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDFC"]},{"description":"Volume Configuration File Storage Directory","displayName":"Volumes Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__volumes_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Path To The Client Certificate For Verification, If The Driver Supports It.","displayName":"Driver Client Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__driver_client_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Maximum Number Of Times To Rescan Targets To Find Volume","displayName":"Num Volume Device Scan Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__num_volume_device_scan_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Backend Name For A Given Driver Implementation","displayName":"Volume Backend Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__volume_backend_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Method Used To Wipe Old Volumes","displayName":"Volume Clear","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__volume_clear","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:none","urn:alm:descriptor:com.tectonic.ui:select:zero","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Chiscsi (Cxt) Global Defaults Configuration File","displayName":"Chiscsi Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__chiscsi_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"String Representation For An Equation That Will Be Used To Filter Hosts. Only Used When The Driver Filter Is Set To Be Used By The Cinder Scheduler.","displayName":"Filter Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__filter_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Namespace For Driver Private Data Values To Be Saved In.","displayName":"Driver Data Namespace","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__driver_data_namespace","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Write-Back(On) Or Write-Through(Off). This Parameter Is Valid If Target_Helper Is Set To Tgtadm.","displayName":"Iscsi Write Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__iscsi_write_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Flag To Pass To Ionice To Alter The I/O Priority Of The Process Used To Zero A Volume After Deletion, For Example '-C3' For Idle Only Priority.","displayName":"Volume Clear Ionice","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__volume_clear_ionice","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Blockio Or Fileio Optionally, Auto Can Be Set And Cinder Will Autodetect Type Of Backing Device","displayName":"Iscsi Iotype","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__iscsi_iotype","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:blockio","urn:alm:descriptor:com.tectonic.ui:select:fileio","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"List Of Options That Control Which Trace Info Is Written To The Debug Log Level To Assist Developers. Valid Values Are Method And Api. [ie: v1,v2]","displayName":"Trace Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__trace_flags__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Protocol For Transferring Data Between Host And Storage Back-End.","displayName":"Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:fc","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"String Representation For An Equation That Will Be Used To Determine The Goodness Of A Host. Only Used When Using The Goodness Weigher Is Set To Be Used By The Cinder Scheduler.","displayName":"Goodness Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__goodness_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Number Of Times To Attempt To Run Flakey Shell Commands","displayName":"Num Shell Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__num_shell_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Target User-Land Tool To Use. Tgtadm Is Default, Use Lioadm For Lio Iscsi Support, Scstadmin For Scst Target Support, Ietadm For Iscsi Enterprise Target, Iscsictl For Chelsio Iscsi Target, Nvmet For Nvmeof Support, Spdk-Nvmeof For Spdk Nvme-Of, Or Fake For Testing. Note: The Iet Driver Is Deprecated And Will Be Removed In The V Release.","displayName":"Target Helper","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__target_helper","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:tgtadm","urn:alm:descriptor:com.tectonic.ui:select:lioadm","urn:alm:descriptor:com.tectonic.ui:select:scstadmin","urn:alm:descriptor:com.tectonic.ui:select:iscsictl","urn:alm:descriptor:com.tectonic.ui:select:ietadm","urn:alm:descriptor:com.tectonic.ui:select:nvmet","urn:alm:descriptor:com.tectonic.ui:select:spdk-nvmeof","urn:alm:descriptor:com.tectonic.ui:select:fake","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Report To Clients Of Cinder That The Backend Supports Discard (Aka. Trim/Unmap). This Will Not Actually Change The Behavior Of The Backend Or The Client Directly, It Will Only Notify That It Can Be Used.","displayName":"Report Discard Supported","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__report_discard_supported","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Upper Limit Of Bandwidth Of Volume Copy. 0 =\u003e Unlimited","displayName":"Volume Copy Bps Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__volume_copy_bps_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Path To The Client Certificate Key For Verification, If The Driver Supports It.","displayName":"Driver Client Cert Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__driver_client_cert_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Availability Zone For This Volume Backend. If Not Set, The Storage_Availability_Zone Option Value Is Used As The Default For All Backends.","displayName":"Backend Availability Zone","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__backend_availability_zone","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Size In Mib To Wipe At Start Of Old Volumes. 1024 Mib At Max. 0 =\u003e All (max=1024)","displayName":"Volume Clear Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__volume_clear_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Sets The Target-Specific Flags For The Iscsi Target. Only Used For Tgtadm To Specify Backing Device Flags Using Bsoflags Option. The Specified String Is Passed As Is To The Underlying Tool.","displayName":"Iscsi Target Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__iscsi_target_flags","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"The Blkio Cgroup Name To Be Used To Limit Bandwidth Of Volume Copy","displayName":"Volume Copy Blkio Cgroup Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__volume_copy_blkio_cgroup_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HBSDISCSI__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HBSDISCSI"]},{"description":"Ssh Port To Use With San (min=0, max=65535)","displayName":"San Ssh Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__san_ssh_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"3Par / Primera Username With The 'Edit' Role","displayName":"Hpe3Par Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"The Time In Hours To Retain A Snapshot.  You Can'T Delete It Before This Expires.","displayName":"Hpe3Par Snapshot Retention","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_snapshot_retention","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"List Of The 3Par / Primera Cpg(S) To Use For Volume Creation [ie: v1,v2]","displayName":"Hpe3Par Cpg","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_cpg__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"The 3Par / Primera Cpg To Use For Snapshots Of Volumes. If Empty The Usercpg Will Be Used.","displayName":"Hpe3Par Cpg Snap","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_cpg_snap","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Filename Of Private Key To Use For Ssh Authentication","displayName":"San Private Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__san_private_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Enable Http Debugging To 3Par / Primera","displayName":"Hpe3Par Debug","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_debug","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Enable Chap Authentication For Iscsi Connections.","displayName":"Hpe3Par Iscsi Chap Enabled","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_iscsi_chap_enabled","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"The Nsp Of 3Par Backend To Be Used When: (1) Multipath Is Not Enabled In Cinder.Conf. (2) Fiber Channel Zone Manager Is Not Used. (3) The 3Par Backend Is Prezoned With This Specific Nsp Only. For Example If Nsp Is 2 1 2, The Format Of The Option'S Value Is 2:1:2","displayName":"Hpe3Par Target Nsp","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_target_nsp","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"3Par / Primera Password For The User Specified In Hpe3Par_Username","displayName":"Hpe3Par Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"The Time In Hours When A Snapshot Expires  And Is Deleted.  This Must Be Larger Than Expiration","displayName":"Hpe3Par Snapshot Expiration","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_snapshot_expiration","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Whether Or Not Our Private Network Has Unique Fqdn On Each Initiator Or Not. For Example Networks With Qa Systems Usually Have Multiple Servers/Vms With The Same Fqdn. When True This Will Create Host Entries On 3Par Using The Fqdn, When False It Will Use The Reversed Iqn/Wwnn.","displayName":"Unique Fqdn Network","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__unique_fqdn_network","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Ssh Connection Timeout In Seconds","displayName":"Ssh Conn Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__ssh_conn_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"List Of Target Iscsi Addresses To Use. [ie: v1,v2]","displayName":"Hpe3Par Iscsi Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_iscsi_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Wsapi Server Url. This Setting Applies To Both 3Par And Primera. .       Example 1: For 3Par, Url Is: .       Https://\u003c3Par Ip\u003e:8080/Api/V1 .       Example 2: For Primera, Url Is: .       Https://\u003cPrimera Ip\u003e:443/Api/V1","displayName":"Hpe3Par Api Url","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARFC__hpe3par_api_url","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARFC"]},{"description":"Ssh Port To Use With San (min=0, max=65535)","displayName":"San Ssh Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__san_ssh_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"3Par / Primera Username With The 'Edit' Role","displayName":"Hpe3Par Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"The Time In Hours To Retain A Snapshot.  You Can'T Delete It Before This Expires.","displayName":"Hpe3Par Snapshot Retention","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_snapshot_retention","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"List Of The 3Par / Primera Cpg(S) To Use For Volume Creation [ie: v1,v2]","displayName":"Hpe3Par Cpg","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_cpg__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"The 3Par / Primera Cpg To Use For Snapshots Of Volumes. If Empty The Usercpg Will Be Used.","displayName":"Hpe3Par Cpg Snap","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_cpg_snap","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Filename Of Private Key To Use For Ssh Authentication","displayName":"San Private Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__san_private_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Enable Http Debugging To 3Par / Primera","displayName":"Hpe3Par Debug","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_debug","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Enable Chap Authentication For Iscsi Connections.","displayName":"Hpe3Par Iscsi Chap Enabled","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_iscsi_chap_enabled","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"The Nsp Of 3Par Backend To Be Used When: (1) Multipath Is Not Enabled In Cinder.Conf. (2) Fiber Channel Zone Manager Is Not Used. (3) The 3Par Backend Is Prezoned With This Specific Nsp Only. For Example If Nsp Is 2 1 2, The Format Of The Option'S Value Is 2:1:2","displayName":"Hpe3Par Target Nsp","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_target_nsp","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"3Par / Primera Password For The User Specified In Hpe3Par_Username","displayName":"Hpe3Par Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"The Time In Hours When A Snapshot Expires  And Is Deleted.  This Must Be Larger Than Expiration","displayName":"Hpe3Par Snapshot Expiration","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_snapshot_expiration","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Whether Or Not Our Private Network Has Unique Fqdn On Each Initiator Or Not. For Example Networks With Qa Systems Usually Have Multiple Servers/Vms With The Same Fqdn. When True This Will Create Host Entries On 3Par Using The Fqdn, When False It Will Use The Reversed Iqn/Wwnn.","displayName":"Unique Fqdn Network","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__unique_fqdn_network","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Ssh Connection Timeout In Seconds","displayName":"Ssh Conn Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__ssh_conn_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"List Of Target Iscsi Addresses To Use. [ie: v1,v2]","displayName":"Hpe3Par Iscsi Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_iscsi_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Wsapi Server Url. This Setting Applies To Both 3Par And Primera. .       Example 1: For 3Par, Url Is: .       Https://\u003c3Par Ip\u003e:8080/Api/V1 .       Example 2: For Primera, Url Is: .       Https://\u003cPrimera Ip\u003e:443/Api/V1","displayName":"Hpe3Par Api Url","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPE3PARISCSI__hpe3par_api_url","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPE3PARISCSI"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAFC__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAFC"]},{"description":"Linear (For Vdisk) Or Virtual (For Pool).","displayName":"Hpmsa Pool Type","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAFC__hpmsa_pool_type","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:linear","urn:alm:descriptor:com.tectonic.ui:select:virtual","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAFC"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAFC__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAFC"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAFC__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAFC"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAFC__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAFC"]},{"description":"Pool Or Vdisk Name To Use For Volume Creation.","displayName":"Hpmsa Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAFC__hpmsa_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAFC"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAFC__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAFC"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAFC__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAFC"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"Linear (For Vdisk) Or Virtual (For Pool).","displayName":"Hpmsa Pool Type","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__hpmsa_pool_type","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:linear","urn:alm:descriptor:com.tectonic.ui:select:virtual","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"List Of Comma-Separated Target Iscsi Ip Addresses. [ie: v1,v2]","displayName":"Hpmsa Iscsi Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__hpmsa_iscsi_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"Pool Or Vdisk Name To Use For Volume Creation.","displayName":"Hpmsa Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__hpmsa_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HPMSAISCSI__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HPMSAISCSI"]},{"description":"The Remote Metro Device Request Url.","displayName":"Metro San Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiFC__metro_san_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiFC"]},{"description":"The Remote Metro Device Domain Name.","displayName":"Metro Domain Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiFC__metro_domain_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiFC"]},{"description":"The Remote Device Hypermetro Will Use.","displayName":"Hypermetro Devices","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiFC__hypermetro_devices","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiFC"]},{"description":"The Remote Metro Device Pool Names.","displayName":"Metro Storage Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiFC__metro_storage_pools","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiFC"]},{"description":"The Configuration File For The Cinder Huawei Driver.","displayName":"Cinder Huawei Conf File","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiFC__cinder_huawei_conf_file","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiFC"]},{"description":"The Remote Metro Device San Password.","displayName":"Metro San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiFC__metro_san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiFC"]},{"description":"The Remote Metro Device San User.","displayName":"Metro San User","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiFC__metro_san_user","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiFC"]},{"description":"The Remote Metro Device Request Url.","displayName":"Metro San Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiISCSI__metro_san_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiISCSI"]},{"description":"The Remote Metro Device Domain Name.","displayName":"Metro Domain Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiISCSI__metro_domain_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiISCSI"]},{"description":"The Remote Device Hypermetro Will Use.","displayName":"Hypermetro Devices","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiISCSI__hypermetro_devices","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiISCSI"]},{"description":"The Remote Metro Device Pool Names.","displayName":"Metro Storage Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiISCSI__metro_storage_pools","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiISCSI"]},{"description":"The Configuration File For The Cinder Huawei Driver.","displayName":"Cinder Huawei Conf File","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiISCSI__cinder_huawei_conf_file","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiISCSI"]},{"description":"The Remote Metro Device San Password.","displayName":"Metro San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiISCSI__metro_san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiISCSI"]},{"description":"The Remote Metro Device San User.","displayName":"Metro San User","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__HuaweiISCSI__metro_san_user","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:HuaweiISCSI"]},{"description":"Connection Type To The Ibm Storage Array","displayName":"Connection Type","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__IBMStorage__connection_type","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:fibre_channel","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:IBMStorage"]},{"description":"List Of Management Ip Addresses (Separated By Commas)","displayName":"Management Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__IBMStorage__management_ips","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:IBMStorage"]},{"description":"Chap Authentication Mode, Effective Only For Iscsi (Disabled|Enabled)","displayName":"Chap","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__IBMStorage__chap","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:disabled","urn:alm:descriptor:com.tectonic.ui:select:enabled","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:IBMStorage"]},{"description":"Proxy Driver That Connects To The Ibm Storage Array","displayName":"Proxy","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__IBMStorage__proxy","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:IBMStorage"]},{"description":"Storage System Space-Efficiency Parameter For Volumes (Percentage) (min=-1, max=100)","displayName":"Instorage Mcs Vol Rsize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_vol_rsize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Maximum Number Of Seconds To Wait For Localcopy To Be Prepared. (min=1, max=600)","displayName":"Instorage Mcs Localcopy Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_localcopy_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Specifies The Instorage Localcopy Copy Rate To Be Used When Creating A Full Volume Copy. The Default Rate Is 50, And The Valid Rates Are 1-100. (min=1, max=100)","displayName":"Instorage Mcs Localcopy Rate","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_localcopy_rate","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Storage System Autoexpand Parameter For Volumes (True/False)","displayName":"Instorage Mcs Vol Autoexpand","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_vol_autoexpand","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Storage System Threshold For Volume Capacity Warnings (Percentage) (min=-1, max=100)","displayName":"Instorage Mcs Vol Warning","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_vol_warning","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Storage System Grain Size Parameter For Volumes (32/64/128/256) (min=32, max=256)","displayName":"Instorage Mcs Vol Grainsize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_vol_grainsize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Specifies Secondary Management Ip Or Hostname To Be Used If San_Ip Is Invalid Or Becomes Inaccessible.","displayName":"Instorage San Secondary Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_san_secondary_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Allow Tenants To Specify Qos On Create","displayName":"Instorage Mcs Allow Tenant Qos","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_allow_tenant_qos","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Enable Intier For Volumes","displayName":"Instorage Mcs Vol Intier","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_vol_intier","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"The I/O Group In Which To Allocate Volumes. It Can Be A Comma-Separated List In Which Case The Driver Will Select An Io_Group Based On Least Number Of Volumes Associated With The Io_Group.","displayName":"Instorage Mcs Vol Iogrp","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_vol_iogrp","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Storage System Compression Option For Volumes","displayName":"Instorage Mcs Vol Compression","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_vol_compression","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Comma Separated List Of Storage System Storage Pools For Volumes. [ie: v1,v2]","displayName":"Instorage Mcs Volpool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSFC__instorage_mcs_volpool_name__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSFC"]},{"description":"Storage System Space-Efficiency Parameter For Volumes (Percentage) (min=-1, max=100)","displayName":"Instorage Mcs Vol Rsize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_vol_rsize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Maximum Number Of Seconds To Wait For Localcopy To Be Prepared. (min=1, max=600)","displayName":"Instorage Mcs Localcopy Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_localcopy_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Specifies The Instorage Localcopy Copy Rate To Be Used When Creating A Full Volume Copy. The Default Rate Is 50, And The Valid Rates Are 1-100. (min=1, max=100)","displayName":"Instorage Mcs Localcopy Rate","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_localcopy_rate","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Storage System Autoexpand Parameter For Volumes (True/False)","displayName":"Instorage Mcs Vol Autoexpand","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_vol_autoexpand","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Storage System Threshold For Volume Capacity Warnings (Percentage) (min=-1, max=100)","displayName":"Instorage Mcs Vol Warning","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_vol_warning","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Storage System Grain Size Parameter For Volumes (32/64/128/256) (min=32, max=256)","displayName":"Instorage Mcs Vol Grainsize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_vol_grainsize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Specifies Secondary Management Ip Or Hostname To Be Used If San_Ip Is Invalid Or Becomes Inaccessible.","displayName":"Instorage San Secondary Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_san_secondary_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Allow Tenants To Specify Qos On Create","displayName":"Instorage Mcs Allow Tenant Qos","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_allow_tenant_qos","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Enable Intier For Volumes","displayName":"Instorage Mcs Vol Intier","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_vol_intier","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"The I/O Group In Which To Allocate Volumes. It Can Be A Comma-Separated List In Which Case The Driver Will Select An Io_Group Based On Least Number Of Volumes Associated With The Io_Group.","displayName":"Instorage Mcs Vol Iogrp","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_vol_iogrp","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Storage System Compression Option For Volumes","displayName":"Instorage Mcs Vol Compression","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_vol_compression","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Comma Separated List Of Storage System Storage Pools For Volumes. [ie: v1,v2]","displayName":"Instorage Mcs Volpool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InStorageMCSISCSI__instorage_mcs_volpool_name__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InStorageMCSISCSI"]},{"description":"Specifies Whether To Turn On Compression For Newly Created Volumes.","displayName":"Infinidat Use Compression","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__infinidat_use_compression","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Name Of The Pool From Which Volumes Are Allocated","displayName":"Infinidat Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__infinidat_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"List Of Names Of Network Spaces To Use For Iscsi Connectivity [ie: v1,v2]","displayName":"Infinidat Iscsi Netspaces","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__infinidat_iscsi_netspaces__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"The Maximum Number Of Times To Rescan Targets To Find Volume","displayName":"Num Volume Device Scan Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__num_volume_device_scan_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Protocol For Transferring Data Between Host And Storage Back-End.","displayName":"Infinidat Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__infinidat_storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:fc","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Use Thin Provisioning For San Volumes?","displayName":"San Thin Provision","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__san_thin_provision","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfiniboxVolume__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfiniboxVolume"]},{"description":"Infortrend Raid Channel Id List On Slot B For Openstack Usage. It Is Separated With Comma. [ie: v1,v2]","displayName":"Infortrend Slots B Channels Id","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__infortrend_slots_b_channels_id__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"The Timeout For Cli In Seconds.","displayName":"Infortrend Cli Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__infortrend_cli_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"The Infortrend Cli Absolute Path.","displayName":"Infortrend Cli Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__infortrend_cli_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"The Infortrend Cli Cache. While Set True, The Raid Status Report Will Use Cache Stored In The Cli. Never Enable This Unless The Raid Is Managed Only By Openstack And Only By One Infortrend Cinder-Volume Backend. Otherwise, Cli Might Report Out-Dated Status To Cinder And Thus There Might Be Some Race Condition Among All Backend/Clis.","displayName":"Infortrend Cli Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__infortrend_cli_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"Infortrend Raid Channel Id List On Slot A For Openstack Usage. It Is Separated With Comma. [ie: v1,v2]","displayName":"Infortrend Slots A Channels Id","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__infortrend_slots_a_channels_id__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"The Infortrend Logical Volumes Name List. It Is Separated With Comma. [ie: v1,v2]","displayName":"Infortrend Pools Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__infortrend_pools_name__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"The Java Absolute Path.","displayName":"Java Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__java_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"The Maximum Retry Times If A Command Fails.","displayName":"Infortrend Cli Max Retries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__infortrend_cli_max_retries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"Infortrend Iqn Prefix For Iscsi.","displayName":"Infortrend Iqn Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIFC__infortrend_iqn_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIFC"]},{"description":"Infortrend Raid Channel Id List On Slot B For Openstack Usage. It Is Separated With Comma. [ie: v1,v2]","displayName":"Infortrend Slots B Channels Id","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__infortrend_slots_b_channels_id__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"The Timeout For Cli In Seconds.","displayName":"Infortrend Cli Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__infortrend_cli_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"The Infortrend Cli Absolute Path.","displayName":"Infortrend Cli Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__infortrend_cli_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"The Infortrend Cli Cache. While Set True, The Raid Status Report Will Use Cache Stored In The Cli. Never Enable This Unless The Raid Is Managed Only By Openstack And Only By One Infortrend Cinder-Volume Backend. Otherwise, Cli Might Report Out-Dated Status To Cinder And Thus There Might Be Some Race Condition Among All Backend/Clis.","displayName":"Infortrend Cli Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__infortrend_cli_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"Infortrend Raid Channel Id List On Slot A For Openstack Usage. It Is Separated With Comma. [ie: v1,v2]","displayName":"Infortrend Slots A Channels Id","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__infortrend_slots_a_channels_id__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"The Infortrend Logical Volumes Name List. It Is Separated With Comma. [ie: v1,v2]","displayName":"Infortrend Pools Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__infortrend_pools_name__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"The Java Absolute Path.","displayName":"Java Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__java_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"The Maximum Retry Times If A Command Fails.","displayName":"Infortrend Cli Max Retries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__infortrend_cli_max_retries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"Infortrend Iqn Prefix For Iscsi.","displayName":"Infortrend Iqn Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__InfortrendCLIISCSI__infortrend_iqn_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:InfortrendCLIISCSI"]},{"description":"Volume Configuration File Storage Directory","displayName":"Volumes Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__volumes_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Path To The Client Certificate For Verification, If The Driver Supports It.","displayName":"Driver Client Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__driver_client_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Maximum Number Of Times To Rescan Targets To Find Volume","displayName":"Num Volume Device Scan Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__num_volume_device_scan_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Backend Name For A Given Driver Implementation","displayName":"Volume Backend Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__volume_backend_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Method Used To Wipe Old Volumes","displayName":"Volume Clear","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__volume_clear","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:none","urn:alm:descriptor:com.tectonic.ui:select:zero","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Chiscsi (Cxt) Global Defaults Configuration File","displayName":"Chiscsi Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__chiscsi_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"String Representation For An Equation That Will Be Used To Filter Hosts. Only Used When The Driver Filter Is Set To Be Used By The Cinder Scheduler.","displayName":"Filter Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__filter_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Namespace For Driver Private Data Values To Be Saved In.","displayName":"Driver Data Namespace","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__driver_data_namespace","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Write-Back(On) Or Write-Through(Off). This Parameter Is Valid If Target_Helper Is Set To Tgtadm.","displayName":"Iscsi Write Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__iscsi_write_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Flag To Pass To Ionice To Alter The I/O Priority Of The Process Used To Zero A Volume After Deletion, For Example '-C3' For Idle Only Priority.","displayName":"Volume Clear Ionice","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__volume_clear_ionice","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Blockio Or Fileio Optionally, Auto Can Be Set And Cinder Will Autodetect Type Of Backing Device","displayName":"Iscsi Iotype","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__iscsi_iotype","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:blockio","urn:alm:descriptor:com.tectonic.ui:select:fileio","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"List Of Options That Control Which Trace Info Is Written To The Debug Log Level To Assist Developers. Valid Values Are Method And Api. [ie: v1,v2]","displayName":"Trace Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__trace_flags__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Protocol For Transferring Data Between Host And Storage Back-End.","displayName":"Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:fc","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"String Representation For An Equation That Will Be Used To Determine The Goodness Of A Host. Only Used When Using The Goodness Weigher Is Set To Be Used By The Cinder Scheduler.","displayName":"Goodness Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__goodness_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Number Of Times To Attempt To Run Flakey Shell Commands","displayName":"Num Shell Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__num_shell_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Target User-Land Tool To Use. Tgtadm Is Default, Use Lioadm For Lio Iscsi Support, Scstadmin For Scst Target Support, Ietadm For Iscsi Enterprise Target, Iscsictl For Chelsio Iscsi Target, Nvmet For Nvmeof Support, Spdk-Nvmeof For Spdk Nvme-Of, Or Fake For Testing. Note: The Iet Driver Is Deprecated And Will Be Removed In The V Release.","displayName":"Target Helper","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__target_helper","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:tgtadm","urn:alm:descriptor:com.tectonic.ui:select:lioadm","urn:alm:descriptor:com.tectonic.ui:select:scstadmin","urn:alm:descriptor:com.tectonic.ui:select:iscsictl","urn:alm:descriptor:com.tectonic.ui:select:ietadm","urn:alm:descriptor:com.tectonic.ui:select:nvmet","urn:alm:descriptor:com.tectonic.ui:select:spdk-nvmeof","urn:alm:descriptor:com.tectonic.ui:select:fake","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Report To Clients Of Cinder That The Backend Supports Discard (Aka. Trim/Unmap). This Will Not Actually Change The Behavior Of The Backend Or The Client Directly, It Will Only Notify That It Can Be Used.","displayName":"Report Discard Supported","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__report_discard_supported","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Upper Limit Of Bandwidth Of Volume Copy. 0 =\u003e Unlimited","displayName":"Volume Copy Bps Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__volume_copy_bps_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Path To The Client Certificate Key For Verification, If The Driver Supports It.","displayName":"Driver Client Cert Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__driver_client_cert_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Availability Zone For This Volume Backend. If Not Set, The Storage_Availability_Zone Option Value Is Used As The Default For All Backends.","displayName":"Backend Availability Zone","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__backend_availability_zone","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Size In Mib To Wipe At Start Of Old Volumes. 1024 Mib At Max. 0 =\u003e All (max=1024)","displayName":"Volume Clear Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__volume_clear_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Sets The Target-Specific Flags For The Iscsi Target. Only Used For Tgtadm To Specify Backing Device Flags Using Bsoflags Option. The Specified String Is Passed As Is To The Underlying Tool.","displayName":"Iscsi Target Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__iscsi_target_flags","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"The Blkio Cgroup Name To Be Used To Limit Bandwidth Of Volume Copy","displayName":"Volume Copy Blkio Cgroup Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__volume_copy_blkio_cgroup_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__JovianISCSI__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:JovianISCSI"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__KaminarioISCSI__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:KaminarioISCSI"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__KaminarioISCSI__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:KaminarioISCSI"]},{"description":"Disabling Iscsi Discovery (Sendtargets) For Multipath Connections On K2 Driver.","displayName":"Disable Discovery","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__KaminarioISCSI__disable_discovery","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:KaminarioISCSI"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__KaminarioISCSI__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:KaminarioISCSI"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__KaminarioISCSI__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:KaminarioISCSI"]},{"description":"Whether Or Not Our Private Network Has Unique Fqdn On Each Initiator Or Not. For Example Networks With Qa Systems Usually Have Multiple Servers/Vms With The Same Fqdn. When True This Will Create Host Entries On 3Par Using The Fqdn, When False It Will Use The Reversed Iqn/Wwnn.","displayName":"Unique Fqdn Network","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__KaminarioISCSI__unique_fqdn_network","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:KaminarioISCSI"]},{"description":"Volume Configuration File Storage Directory","displayName":"Volumes Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__volumes_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"If \u003e0, Create Lvs With Multiple Mirrors. Note That This Requires Lvm_Mirrors + 2 Pvs With Available Space","displayName":"Lvm Mirrors","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__lvm_mirrors","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The Nvme Target Remote Configuration Ip Address.","displayName":"Spdk Rpc Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__spdk_rpc_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Queue Depth For Rdma Transport. (min=1, max=128)","displayName":"Spdk Max Queue Depth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__spdk_max_queue_depth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Write-Back(On) Or Write-Through(Off). This Parameter Is Valid If Target_Helper Is Set To Tgtadm.","displayName":"Iscsi Write Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__iscsi_write_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Certain Iscsi Targets Have Predefined Target Names, Scst Target Driver Uses This Name.","displayName":"Scst Target Iqn Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__scst_target_iqn_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Blockio Or Fileio Optionally, Auto Can Be Set And Cinder Will Autodetect Type Of Backing Device","displayName":"Iscsi Iotype","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__iscsi_iotype","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:blockio","urn:alm:descriptor:com.tectonic.ui:select:fileio","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Suppress Leaked File Descriptor Warnings In Lvm Commands.","displayName":"Lvm Suppress Fd Warnings","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__lvm_suppress_fd_warnings","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The Nvme Target Remote Configuration Port. (min=0, max=65535)","displayName":"Spdk Rpc Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__spdk_rpc_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Name For The Vg That Will Contain Exported Volumes","displayName":"Volume Group","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__volume_group","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Method Used To Wipe Old Volumes","displayName":"Volume Clear","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__volume_clear","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:none","urn:alm:descriptor:com.tectonic.ui:select:zero","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Type Of Lvm Volumes To Deploy; (Default, Thin, Or Auto). Auto Defaults To Thin If Thin Is Supported.","displayName":"Lvm Type","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__lvm_type","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:default","urn:alm:descriptor:com.tectonic.ui:select:thin","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Target User-Land Tool To Use. Tgtadm Is Default, Use Lioadm For Lio Iscsi Support, Scstadmin For Scst Target Support, Ietadm For Iscsi Enterprise Target, Iscsictl For Chelsio Iscsi Target, Nvmet For Nvmeof Support, Spdk-Nvmeof For Spdk Nvme-Of, Or Fake For Testing. Note: The Iet Driver Is Deprecated And Will Be Removed In The V Release.","displayName":"Target Helper","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__target_helper","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:tgtadm","urn:alm:descriptor:com.tectonic.ui:select:lioadm","urn:alm:descriptor:com.tectonic.ui:select:scstadmin","urn:alm:descriptor:com.tectonic.ui:select:iscsictl","urn:alm:descriptor:com.tectonic.ui:select:ietadm","urn:alm:descriptor:com.tectonic.ui:select:nvmet","urn:alm:descriptor:com.tectonic.ui:select:spdk-nvmeof","urn:alm:descriptor:com.tectonic.ui:select:fake","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Lvm Conf File To Use For The Lvm Driver In Cinder; This Setting Is Ignored If The Specified File Does Not Exist (You Can Also Specify 'None' To Not Use A Conf File Even If One Exists).","displayName":"Lvm Conf File","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__lvm_conf_file","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Scst Target Implementation Can Choose From Multiple Scst Target Drivers.","displayName":"Scst Target Driver","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__scst_target_driver","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The Nvme Target Remote Configuration Password.","displayName":"Spdk Rpc Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__spdk_rpc_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The Port That The Nvme Target Is Listening On. (min=0, max=65535)","displayName":"Nvmet Port Id","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__nvmet_port_id","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Size In Mib To Wipe At Start Of Old Volumes. 1024 Mib At Max. 0 =\u003e All (max=1024)","displayName":"Volume Clear Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__volume_clear_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Sets The Target-Specific Flags For The Iscsi Target. Only Used For Tgtadm To Specify Backing Device Flags Using Bsoflags Option. The Specified String Is Passed As Is To The Underlying Tool.","displayName":"Iscsi Target Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__iscsi_target_flags","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"The Nvme Target Remote Configuration Username.","displayName":"Spdk Rpc Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LVMVolume__spdk_rpc_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LVMVolume"]},{"description":"Pool Or Vdisk Name To Use For Volume Creation.","displayName":"Lenovo Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LenovoFC__lenovo_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LenovoFC"]},{"description":"Linear (For Vdisk) Or Virtual (For Pool).","displayName":"Lenovo Pool Type","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LenovoFC__lenovo_pool_type","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:linear","urn:alm:descriptor:com.tectonic.ui:select:virtual","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LenovoFC"]},{"description":"Pool Or Vdisk Name To Use For Volume Creation.","displayName":"Lenovo Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LenovoISCSI__lenovo_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LenovoISCSI"]},{"description":"List Of Comma-Separated Target Iscsi Ip Addresses. [ie: v1,v2]","displayName":"Lenovo Iscsi Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LenovoISCSI__lenovo_iscsi_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LenovoISCSI"]},{"description":"Linear (For Vdisk) Or Virtual (For Pool).","displayName":"Lenovo Pool Type","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LenovoISCSI__lenovo_pool_type","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:linear","urn:alm:descriptor:com.tectonic.ui:select:virtual","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LenovoISCSI"]},{"description":"True Means Cinder Node Is A Diskless Linstor Node.","displayName":"Linstor Controller Diskless","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorDrbd__linstor_controller_diskless","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorDrbd"]},{"description":"Default Block Size For Image Restoration. When Using Iscsi Transport, This Option Specifies The Block Size.","displayName":"Linstor Default Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorDrbd__linstor_default_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorDrbd"]},{"description":"Default Storage Uri For Linstor.","displayName":"Linstor Default Uri","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorDrbd__linstor_default_uri","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorDrbd"]},{"description":"Default Storage Pool Name For Linstor.","displayName":"Linstor Default Storage Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorDrbd__linstor_default_storage_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorDrbd"]},{"description":"Default Volume Downscale Size In Kib = 4 Mib.","displayName":"Linstor Volume Downsize Factor","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorDrbd__linstor_volume_downsize_factor__transform_string_float","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorDrbd"]},{"description":"Default Volume Group Name For Linstor. Not Cinder Volume.","displayName":"Linstor Default Volume Group Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorDrbd__linstor_default_volume_group_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorDrbd"]},{"description":"Autoplace Replication Count On Volume Deployment. 0 = Full Cluster Replication Without Autoplace, 1 = Single Node Deployment Without Replication, 2 Or Greater = Replicated Deployment With Autoplace.","displayName":"Linstor Autoplace Count","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorDrbd__linstor_autoplace_count","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorDrbd"]},{"description":"True Means Cinder Node Is A Diskless Linstor Node.","displayName":"Linstor Controller Diskless","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorIscsi__linstor_controller_diskless","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorIscsi"]},{"description":"Default Block Size For Image Restoration. When Using Iscsi Transport, This Option Specifies The Block Size.","displayName":"Linstor Default Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorIscsi__linstor_default_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorIscsi"]},{"description":"Default Storage Uri For Linstor.","displayName":"Linstor Default Uri","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorIscsi__linstor_default_uri","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorIscsi"]},{"description":"Default Storage Pool Name For Linstor.","displayName":"Linstor Default Storage Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorIscsi__linstor_default_storage_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorIscsi"]},{"description":"Default Volume Downscale Size In Kib = 4 Mib.","displayName":"Linstor Volume Downsize Factor","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorIscsi__linstor_volume_downsize_factor__transform_string_float","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorIscsi"]},{"description":"Default Volume Group Name For Linstor. Not Cinder Volume.","displayName":"Linstor Default Volume Group Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorIscsi__linstor_default_volume_group_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorIscsi"]},{"description":"Autoplace Replication Count On Volume Deployment. 0 = Full Cluster Replication Without Autoplace, 1 = Single Node Deployment Without Replication, 2 Or Greater = Replicated Deployment With Autoplace.","displayName":"Linstor Autoplace Count","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__LinstorIscsi__linstor_autoplace_count","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:LinstorIscsi"]},{"description":"M-Series Storage Control Volume Name Format.","displayName":"Nec Cv Ldname Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_cv_ldname_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"M-Series Storage Ld Name Format For Volumes.","displayName":"Nec Ldname Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ldname_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"User Name For M-Series Storage Ismcli.","displayName":"Nec Ismcli User","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ismcli_user","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"M-Series Storage Ld Set Name For Compute Node.","displayName":"Nec Ldset","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ldset","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"M-Series Storage Ld Name Format For Snapshots.","displayName":"Nec Backup Ldname Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_backup_ldname_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Filename Of Rsa Private Key For M-Series Storage Ismcli.","displayName":"Nec Ismcli Privkey","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ismcli_privkey","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Port Number Of Ssh Pool.","displayName":"Nec Ssh Pool Port Number","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ssh_pool_port_number","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Fip Address Of M-Series Storage Ismcli.","displayName":"Nec Ismcli Fip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ismcli_fip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Use Legacy Ismcli Command.","displayName":"Nec Queryconfig View","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_queryconfig_view","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Maximum Number Of Managing Sessions.","displayName":"Nec Backend Max Ld Count","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_backend_max_ld_count","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Timeout Value Of Unpairthread.","displayName":"Nec Unpairthread Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_unpairthread_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Configure Access Control Automatically.","displayName":"Nec Auto Accesscontrol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_auto_accesscontrol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Use Legacy Ismcli Command With Optimization.","displayName":"Nec Ismview Alloptimize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ismview_alloptimize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Output Path Of Ismview File.","displayName":"Nec Ismview Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ismview_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Password For M-Series Storage Ismcli.","displayName":"Nec Ismcli Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_ismcli_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Diskarray Name Of M-Series Storage.","displayName":"Nec Diskarray Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_diskarray_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"Return Actual Free Capacity.","displayName":"Nec Actual Free Capacity","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_actual_free_capacity","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"M-Series Storage Backup Pool Number To Be Used. [ie: v1,v2]","displayName":"Nec Backup Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_backup_pools__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"M-Series Storage Pool Numbers List To Be Used. [ie: v1,v2]","displayName":"Nec Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageFC__nec_pools__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageFC"]},{"description":"M-Series Storage Control Volume Name Format.","displayName":"Nec Cv Ldname Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_cv_ldname_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"M-Series Storage Ld Name Format For Volumes.","displayName":"Nec Ldname Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ldname_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"User Name For M-Series Storage Ismcli.","displayName":"Nec Ismcli User","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ismcli_user","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"M-Series Storage Ld Set Name For Compute Node.","displayName":"Nec Ldset","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ldset","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"M-Series Storage Ld Name Format For Snapshots.","displayName":"Nec Backup Ldname Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_backup_ldname_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Filename Of Rsa Private Key For M-Series Storage Ismcli.","displayName":"Nec Ismcli Privkey","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ismcli_privkey","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Port Number Of Ssh Pool.","displayName":"Nec Ssh Pool Port Number","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ssh_pool_port_number","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Fip Address Of M-Series Storage Ismcli.","displayName":"Nec Ismcli Fip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ismcli_fip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Use Legacy Ismcli Command.","displayName":"Nec Queryconfig View","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_queryconfig_view","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Maximum Number Of Managing Sessions.","displayName":"Nec Backend Max Ld Count","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_backend_max_ld_count","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Timeout Value Of Unpairthread.","displayName":"Nec Unpairthread Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_unpairthread_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Configure Access Control Automatically.","displayName":"Nec Auto Accesscontrol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_auto_accesscontrol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Use Legacy Ismcli Command With Optimization.","displayName":"Nec Ismview Alloptimize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ismview_alloptimize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Output Path Of Ismview File.","displayName":"Nec Ismview Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ismview_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Password For M-Series Storage Ismcli.","displayName":"Nec Ismcli Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_ismcli_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Diskarray Name Of M-Series Storage.","displayName":"Nec Diskarray Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_diskarray_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Return Actual Free Capacity.","displayName":"Nec Actual Free Capacity","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_actual_free_capacity","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"M-Series Storage Backup Pool Number To Be Used. [ie: v1,v2]","displayName":"Nec Backup Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_backup_pools__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"M-Series Storage Pool Numbers List To Be Used. [ie: v1,v2]","displayName":"Nec Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MStorageISCSI__nec_pools__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MStorageISCSI"]},{"description":"Volume Configuration File Storage Directory","displayName":"Volumes Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__volumes_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Path To The Client Certificate For Verification, If The Driver Supports It.","displayName":"Driver Client Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__driver_client_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Maximum Number Of Times To Rescan Targets To Find Volume","displayName":"Num Volume Device Scan Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__num_volume_device_scan_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Backend Name For A Given Driver Implementation","displayName":"Volume Backend Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__volume_backend_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Method Used To Wipe Old Volumes","displayName":"Volume Clear","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__volume_clear","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:none","urn:alm:descriptor:com.tectonic.ui:select:zero","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Chiscsi (Cxt) Global Defaults Configuration File","displayName":"Chiscsi Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__chiscsi_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"String Representation For An Equation That Will Be Used To Filter Hosts. Only Used When The Driver Filter Is Set To Be Used By The Cinder Scheduler.","displayName":"Filter Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__filter_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Namespace For Driver Private Data Values To Be Saved In.","displayName":"Driver Data Namespace","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__driver_data_namespace","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Write-Back(On) Or Write-Through(Off). This Parameter Is Valid If Target_Helper Is Set To Tgtadm.","displayName":"Iscsi Write Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__iscsi_write_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Flag To Pass To Ionice To Alter The I/O Priority Of The Process Used To Zero A Volume After Deletion, For Example '-C3' For Idle Only Priority.","displayName":"Volume Clear Ionice","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__volume_clear_ionice","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Blockio Or Fileio Optionally, Auto Can Be Set And Cinder Will Autodetect Type Of Backing Device","displayName":"Iscsi Iotype","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__iscsi_iotype","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:blockio","urn:alm:descriptor:com.tectonic.ui:select:fileio","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"List Of Options That Control Which Trace Info Is Written To The Debug Log Level To Assist Developers. Valid Values Are Method And Api. [ie: v1,v2]","displayName":"Trace Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__trace_flags__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Protocol For Transferring Data Between Host And Storage Back-End.","displayName":"Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:fc","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"String Representation For An Equation That Will Be Used To Determine The Goodness Of A Host. Only Used When Using The Goodness Weigher Is Set To Be Used By The Cinder Scheduler.","displayName":"Goodness Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__goodness_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Number Of Times To Attempt To Run Flakey Shell Commands","displayName":"Num Shell Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__num_shell_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Target User-Land Tool To Use. Tgtadm Is Default, Use Lioadm For Lio Iscsi Support, Scstadmin For Scst Target Support, Ietadm For Iscsi Enterprise Target, Iscsictl For Chelsio Iscsi Target, Nvmet For Nvmeof Support, Spdk-Nvmeof For Spdk Nvme-Of, Or Fake For Testing. Note: The Iet Driver Is Deprecated And Will Be Removed In The V Release.","displayName":"Target Helper","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__target_helper","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:tgtadm","urn:alm:descriptor:com.tectonic.ui:select:lioadm","urn:alm:descriptor:com.tectonic.ui:select:scstadmin","urn:alm:descriptor:com.tectonic.ui:select:iscsictl","urn:alm:descriptor:com.tectonic.ui:select:ietadm","urn:alm:descriptor:com.tectonic.ui:select:nvmet","urn:alm:descriptor:com.tectonic.ui:select:spdk-nvmeof","urn:alm:descriptor:com.tectonic.ui:select:fake","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Report To Clients Of Cinder That The Backend Supports Discard (Aka. Trim/Unmap). This Will Not Actually Change The Behavior Of The Backend Or The Client Directly, It Will Only Notify That It Can Be Used.","displayName":"Report Discard Supported","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__report_discard_supported","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Upper Limit Of Bandwidth Of Volume Copy. 0 =\u003e Unlimited","displayName":"Volume Copy Bps Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__volume_copy_bps_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Path To The Client Certificate Key For Verification, If The Driver Supports It.","displayName":"Driver Client Cert Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__driver_client_cert_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Availability Zone For This Volume Backend. If Not Set, The Storage_Availability_Zone Option Value Is Used As The Default For All Backends.","displayName":"Backend Availability Zone","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__backend_availability_zone","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Size In Mib To Wipe At Start Of Old Volumes. 1024 Mib At Max. 0 =\u003e All (max=1024)","displayName":"Volume Clear Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__volume_clear_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Sets The Target-Specific Flags For The Iscsi Target. Only Used For Tgtadm To Specify Backing Device Flags Using Bsoflags Option. The Specified String Is Passed As Is To The Underlying Tool.","displayName":"Iscsi Target Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__iscsi_target_flags","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"The Blkio Cgroup Name To Be Used To Limit Bandwidth Of Volume Copy","displayName":"Volume Copy Blkio Cgroup Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__volume_copy_blkio_cgroup_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANFC__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANFC"]},{"description":"Volume Configuration File Storage Directory","displayName":"Volumes Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__volumes_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Path To The Client Certificate For Verification, If The Driver Supports It.","displayName":"Driver Client Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__driver_client_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Maximum Number Of Times To Rescan Targets To Find Volume","displayName":"Num Volume Device Scan Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__num_volume_device_scan_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Backend Name For A Given Driver Implementation","displayName":"Volume Backend Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__volume_backend_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Method Used To Wipe Old Volumes","displayName":"Volume Clear","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__volume_clear","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:none","urn:alm:descriptor:com.tectonic.ui:select:zero","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Chiscsi (Cxt) Global Defaults Configuration File","displayName":"Chiscsi Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__chiscsi_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"String Representation For An Equation That Will Be Used To Filter Hosts. Only Used When The Driver Filter Is Set To Be Used By The Cinder Scheduler.","displayName":"Filter Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__filter_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Namespace For Driver Private Data Values To Be Saved In.","displayName":"Driver Data Namespace","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__driver_data_namespace","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Write-Back(On) Or Write-Through(Off). This Parameter Is Valid If Target_Helper Is Set To Tgtadm.","displayName":"Iscsi Write Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__iscsi_write_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Flag To Pass To Ionice To Alter The I/O Priority Of The Process Used To Zero A Volume After Deletion, For Example '-C3' For Idle Only Priority.","displayName":"Volume Clear Ionice","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__volume_clear_ionice","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Blockio Or Fileio Optionally, Auto Can Be Set And Cinder Will Autodetect Type Of Backing Device","displayName":"Iscsi Iotype","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__iscsi_iotype","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:blockio","urn:alm:descriptor:com.tectonic.ui:select:fileio","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"List Of Options That Control Which Trace Info Is Written To The Debug Log Level To Assist Developers. Valid Values Are Method And Api. [ie: v1,v2]","displayName":"Trace Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__trace_flags__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Protocol For Transferring Data Between Host And Storage Back-End.","displayName":"Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:fc","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"String Representation For An Equation That Will Be Used To Determine The Goodness Of A Host. Only Used When Using The Goodness Weigher Is Set To Be Used By The Cinder Scheduler.","displayName":"Goodness Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__goodness_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Number Of Times To Attempt To Run Flakey Shell Commands","displayName":"Num Shell Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__num_shell_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Target User-Land Tool To Use. Tgtadm Is Default, Use Lioadm For Lio Iscsi Support, Scstadmin For Scst Target Support, Ietadm For Iscsi Enterprise Target, Iscsictl For Chelsio Iscsi Target, Nvmet For Nvmeof Support, Spdk-Nvmeof For Spdk Nvme-Of, Or Fake For Testing. Note: The Iet Driver Is Deprecated And Will Be Removed In The V Release.","displayName":"Target Helper","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__target_helper","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:tgtadm","urn:alm:descriptor:com.tectonic.ui:select:lioadm","urn:alm:descriptor:com.tectonic.ui:select:scstadmin","urn:alm:descriptor:com.tectonic.ui:select:iscsictl","urn:alm:descriptor:com.tectonic.ui:select:ietadm","urn:alm:descriptor:com.tectonic.ui:select:nvmet","urn:alm:descriptor:com.tectonic.ui:select:spdk-nvmeof","urn:alm:descriptor:com.tectonic.ui:select:fake","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Report To Clients Of Cinder That The Backend Supports Discard (Aka. Trim/Unmap). This Will Not Actually Change The Behavior Of The Backend Or The Client Directly, It Will Only Notify That It Can Be Used.","displayName":"Report Discard Supported","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__report_discard_supported","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Upper Limit Of Bandwidth Of Volume Copy. 0 =\u003e Unlimited","displayName":"Volume Copy Bps Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__volume_copy_bps_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Path To The Client Certificate Key For Verification, If The Driver Supports It.","displayName":"Driver Client Cert Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__driver_client_cert_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Availability Zone For This Volume Backend. If Not Set, The Storage_Availability_Zone Option Value Is Used As The Default For All Backends.","displayName":"Backend Availability Zone","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__backend_availability_zone","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Size In Mib To Wipe At Start Of Old Volumes. 1024 Mib At Max. 0 =\u003e All (max=1024)","displayName":"Volume Clear Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__volume_clear_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Sets The Target-Specific Flags For The Iscsi Target. Only Used For Tgtadm To Specify Backing Device Flags Using Bsoflags Option. The Specified String Is Passed As Is To The Underlying Tool.","displayName":"Iscsi Target Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__iscsi_target_flags","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"The Blkio Cgroup Name To Be Used To Limit Bandwidth Of Volume Copy","displayName":"Volume Copy Blkio Cgroup Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__volume_copy_blkio_cgroup_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__MacroSANISCSI__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:MacroSANISCSI"]},{"description":"This Option Specifies The Virtual Storage Server (Vserver) Name On The Storage Cluster On Which Provisioning Of Block Storage Volumes Should Occur.","displayName":"Netapp Vserver","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NetAppCmodeFibreChannel__netapp_vserver","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NetAppCmodeFibreChannel"]},{"description":"This Option Specifies The Virtual Storage Server (Vserver) Name On The Storage Cluster On Which Provisioning Of Block Storage Volumes Should Occur.","displayName":"Netapp Vserver","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NetAppCmodeISCSI__netapp_vserver","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NetAppCmodeISCSI"]},{"description":"Template String To Generate Origin Name Of Clone","displayName":"Nexenta Origin Snapshot Template","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_origin_snapshot_template","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"A Folder Where Cinder Created Datasets Will Reside.","displayName":"Nexenta Folder","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_folder","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Group Of Hosts Which Are Allowed To Access Volumes","displayName":"Nexenta Iscsi Target Host Group","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_iscsi_target_host_group","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Amount Of Luns Per Iscsi Target","displayName":"Nexenta Luns Per Target","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_luns_per_target","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Deduplication Value For New Zfs Folders.","displayName":"Nexenta Dataset Dedup","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_dataset_dedup","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:select:sha256","urn:alm:descriptor:com.tectonic.ui:select:verify","urn:alm:descriptor:com.tectonic.ui:select:sha256","urn:alm:descriptor:com.tectonic.ui:select:verify","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Specifies The Backoff Factor To Apply Between Connection Attempts To Nexentastor Management Rest Api Server","displayName":"Nexenta Rest Backoff Factor","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_rest_backoff_factor__transform_string_float","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Volume Group For Nexentastor5 Iscsi","displayName":"Nexenta Volume Group","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_volume_group","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Comma Separated List Of Portals For Nexentastor5, In Format Of Ip1:Port1,Ip2:Port2. Port Is Optional, Default=3260. Example: 10.10.10.1:3267,10.10.1.2","displayName":"Nexenta Iscsi Target Portals","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_iscsi_target_portals","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Prefix For Iscsi Host Groups On Nexentastor","displayName":"Nexenta Host Group Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_host_group_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Human-Readable Description For The Folder.","displayName":"Nexenta Dataset Description","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_dataset_description","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Specifies The Number Of Times To Repeat Nexentastor Management Rest Api Call In Case Of Connection Errors And Nexentastor Appliance Ebusy Or Enoent Errors","displayName":"Nexenta Rest Retry Count","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_rest_retry_count","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Ip Address Of Nexentastor Appliance","displayName":"Nexenta Host","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_host","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Use Http Secure Protocol For Nexentastor Management Rest Api Connections","displayName":"Nexenta Use Https","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_use_https","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Nexentastor Pool Name That Holds All Volumes","displayName":"Nexenta Volume","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_volume","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Nexentastor Target Portal Groups","displayName":"Nexenta Iscsi Target Portal Groups","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_iscsi_target_portal_groups","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Compression Value For New Zfs Folders.","displayName":"Nexenta Dataset Compression","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_dataset_compression","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:select:gzip","urn:alm:descriptor:com.tectonic.ui:select:gzip-1","urn:alm:descriptor:com.tectonic.ui:select:gzip-2","urn:alm:descriptor:com.tectonic.ui:select:gzip-3","urn:alm:descriptor:com.tectonic.ui:select:gzip-4","urn:alm:descriptor:com.tectonic.ui:select:gzip-5","urn:alm:descriptor:com.tectonic.ui:select:gzip-6","urn:alm:descriptor:com.tectonic.ui:select:gzip-7","urn:alm:descriptor:com.tectonic.ui:select:gzip-8","urn:alm:descriptor:com.tectonic.ui:select:gzip-9","urn:alm:descriptor:com.tectonic.ui:select:lzjb","urn:alm:descriptor:com.tectonic.ui:select:zle","urn:alm:descriptor:com.tectonic.ui:select:lz4","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Specifies The Time Limit (In Seconds), Within Which Nexentastor Management Rest Api Server Must Send A Response","displayName":"Nexenta Rest Read Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_rest_read_timeout__transform_string_float","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Specifies The Time Limit (In Seconds), Within Which The Connection To Nexentastor Management Rest Api Server Must Be Established","displayName":"Nexenta Rest Connect Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_rest_connect_timeout__transform_string_float","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Prefix For Iscsi Target Groups On Nexentastor","displayName":"Nexenta Target Group Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_target_group_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Enables Or Disables The Creation Of Sparse Datasets","displayName":"Nexenta Sparse","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_sparse","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Iqn Prefix For Nexentastor Iscsi Targets","displayName":"Nexenta Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Postponed Write To Backing Store Or Not","displayName":"Nexenta Lu Writebackcache Disabled","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_lu_writebackcache_disabled","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Block Size For Datasets","displayName":"Nexenta Ns5 Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_ns5_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Nexenta Appliance Iscsi Target Portal Port","displayName":"Nexenta Iscsi Target Portal Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_iscsi_target_portal_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Use Http Or Https For Nexentastor Management Rest Api Connection (Default Auto)","displayName":"Nexenta Rest Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_rest_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:http","urn:alm:descriptor:com.tectonic.ui:select:https","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Template String To Generate Group Snapshot Name","displayName":"Nexenta Group Snapshot Template","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_group_snapshot_template","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Block Size For Datasets","displayName":"Nexenta Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NexentaISCSI__nexenta_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NexentaISCSI"]},{"description":"Nimble Subnet Label","displayName":"Nimble Subnet Label","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NimbleFC__nimble_subnet_label","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NimbleFC"]},{"description":"Whether To Verify Nimble Ssl Certificate","displayName":"Nimble Verify Certificate","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NimbleFC__nimble_verify_certificate","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NimbleFC"]},{"description":"Nimble Controller Pool Name","displayName":"Nimble Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NimbleFC__nimble_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NimbleFC"]},{"description":"Path To Nimble Array Ssl Certificate","displayName":"Nimble Verify Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NimbleFC__nimble_verify_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NimbleFC"]},{"description":"Nimble Subnet Label","displayName":"Nimble Subnet Label","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NimbleISCSI__nimble_subnet_label","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NimbleISCSI"]},{"description":"Whether To Verify Nimble Ssl Certificate","displayName":"Nimble Verify Certificate","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NimbleISCSI__nimble_verify_certificate","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NimbleISCSI"]},{"description":"Nimble Controller Pool Name","displayName":"Nimble Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NimbleISCSI__nimble_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NimbleISCSI"]},{"description":"Path To Nimble Array Ssl Certificate","displayName":"Nimble Verify Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__NimbleISCSI__nimble_verify_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:NimbleISCSI"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEFC__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEFC"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEFC__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEFC"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEFC__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEFC"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEFC__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEFC"]},{"description":"Pool Or Vdisk Name To Use For Volume Creation.","displayName":"Pvme Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEFC__pvme_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEFC"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEFC__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEFC"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEFC__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEFC"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEISCSI__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEISCSI"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEISCSI__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEISCSI"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEISCSI__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEISCSI"]},{"description":"List Of Comma-Separated Target Iscsi Ip Addresses. [ie: v1,v2]","displayName":"Pvme Iscsi Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEISCSI__pvme_iscsi_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEISCSI"]},{"description":"Pool Or Vdisk Name To Use For Volume Creation.","displayName":"Pvme Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEISCSI__pvme_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEISCSI"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEISCSI__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEISCSI"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PVMEISCSI__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PVMEISCSI"]},{"description":"Round Volume Sizes Up To 8Gb Boundaries. Powerflex/Vxflex Os Requires Volumes To Be Sized In Multiples Of 8Gb. If Set To False, Volume Creation Will Fail For Volumes Not Sized Properly","displayName":"Powerflex Round Volume Capacity","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerFlex__powerflex_round_volume_capacity","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerFlex"]},{"description":"Gateway Rest Server Port. (min=0, max=65535)","displayName":"Powerflex Rest Server Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerFlex__powerflex_rest_server_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerFlex"]},{"description":"Powerflex/Scaleio Api Version. This Value Should Be Left As The Default Value Unless Otherwise Instructed By Technical Support.","displayName":"Powerflex Server Api Version","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerFlex__powerflex_server_api_version","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerFlex"]},{"description":"Allow Volumes To Be Created In Storage Pools When Zero Padding Is Disabled. This Option Should Not Be Enabled If Multiple Tenants Will Utilize Volumes From A Shared Storage Pool.","displayName":"Powerflex Allow Non Padded Volumes","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerFlex__powerflex_allow_non_padded_volumes","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerFlex"]},{"description":"Unmap Volumes Before Deletion.","displayName":"Powerflex Unmap Volume Before Deletion","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerFlex__powerflex_unmap_volume_before_deletion","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerFlex"]},{"description":"Allow Volume Migration During Rebuild.","displayName":"Powerflex Allow Migration During Rebuild","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerFlex__powerflex_allow_migration_during_rebuild","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerFlex"]},{"description":"Storage Pools. Comma Separated List Of Storage Pools Used To Provide Volumes. Each Pool Should Be Specified As A Protection_Domain_Name:Storage_Pool_Name Value","displayName":"Powerflex Storage Pools","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerFlex__powerflex_storage_pools","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerFlex"]},{"description":"Max_Over_Subscription_Ratio Setting For The Driver. Maximum Value Allowed Is 10.0.","displayName":"Powerflex Max Over Subscription Ratio","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerFlex__powerflex_max_over_subscription_ratio__transform_string_float","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerFlex"]},{"description":"Enable/Disable Real-Time Performance Metrics For Port Level Load Balancing For A Powermax Backend.","displayName":"Load Balance Real Time","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__load_balance_real_time","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Serial Number Of The Array To Connect To.","displayName":"Powermax Array","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__powermax_array","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"How Far In Minutes To Look Back For Diagnostic Performance Metrics In Load Calculation, Minimum Of 0 Maximum Of 1440 (24 Hours).","displayName":"Load Look Back","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__load_look_back","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Metric Used For Port Load Calculation.","displayName":"Port Load Metric","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__port_load_metric","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"List Of User Assigned Name For Storage Array. [ie: v1,v2]","displayName":"Powermax Array Tag List","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__powermax_array_tag_list__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"How Long To Wait For The Server To Send Data Before Giving Up.","displayName":"U4P Failover Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__u4p_failover_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"A Backoff Factor To Apply Between Attempts After The Second Try (Most Errors Are Resolved Immediately By A Second Try Without A Delay). Retries Will Sleep For: {Backoff Factor} * (2 ^ ({Number Of Total Retries} - 1)) Seconds.","displayName":"U4P Failover Backoff Factor","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__u4p_failover_backoff_factor","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Service Level To Use For Provisioning Storage. Setting This As An Extra Spec In Pool_Name Is Preferable.","displayName":"Powermax Service Level","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__powermax_service_level","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"How Far In Minutes To Look Back For Real-Time Performance Metrics In Load Calculation, Minimum Of 1 Maximum Of 10.","displayName":"Load Look Back Real Time","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__load_look_back_real_time","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Metric Used For Port Group Load Calculation.","displayName":"Port Group Load Metric","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__port_group_load_metric","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"List Of Port Groups Containing Frontend Ports Configured Prior For Server Connection. [ie: v1,v2]","displayName":"Powermax Port Groups","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__powermax_port_groups__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"If The Driver Should Automatically Failback To The Primary Instance Of Unisphere When A Successful Connection Is Re-Established.","displayName":"U4P Failover Autofailback","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__u4p_failover_autofailback","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"User Defined Override For Port Group Name.","displayName":"Powermax Port Group Name Template","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__powermax_port_group_name_template","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Use This Value To Specify Number Of Retries.","displayName":"Retries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__retries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Use This Value To Specify The Maximum Number Of Unlinks For The Temporary Snapshots Before A Clone Operation.","displayName":"Powermax Snapvx Unlink Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__powermax_snapvx_unlink_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Use This Value To Enable The Initiator_Check.","displayName":"Initiator Check","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__initiator_check","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Enable/Disable Load Balancing For A Powermax Backend.","displayName":"Load Balance","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__load_balance","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Performance Data Format, Not Applicable For Real-Time Metrics. Available Options Are 'Avg' And 'Max'.","displayName":"Load Data Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__load_data_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"The Maximum Number Of Retries Each Connection Should Attempt. Note, This Applies Only To Failed Dns Lookups, Socket Connections And Connection Timeouts, Never To Requests Where Data Has Made It To The Server.","displayName":"U4P Failover Retries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__u4p_failover_retries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Use This Value To Specify Length Of The Interval In Seconds.","displayName":"Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Dictionary Of Unisphere Failover Target Info. [ie: k1:v1,k2:v2]","displayName":"U4P Failover Target","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__u4p_failover_target__transform_csv_kvs","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"User Defined Override For Short Host Name.","displayName":"Powermax Short Host Name Template","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__powermax_short_host_name_template","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Storage Resource Pool On Array To Use For Provisioning.","displayName":"Powermax Srp","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__powermax_srp","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Workload, Setting This As An Extra Spec In Pool_Name Is Preferable.","displayName":"Vmax Workload","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxFC__vmax_workload","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxFC"]},{"description":"Enable/Disable Real-Time Performance Metrics For Port Level Load Balancing For A Powermax Backend.","displayName":"Load Balance Real Time","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__load_balance_real_time","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Serial Number Of The Array To Connect To.","displayName":"Powermax Array","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__powermax_array","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"How Far In Minutes To Look Back For Diagnostic Performance Metrics In Load Calculation, Minimum Of 0 Maximum Of 1440 (24 Hours).","displayName":"Load Look Back","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__load_look_back","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Metric Used For Port Load Calculation.","displayName":"Port Load Metric","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__port_load_metric","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"List Of User Assigned Name For Storage Array. [ie: v1,v2]","displayName":"Powermax Array Tag List","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__powermax_array_tag_list__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"How Long To Wait For The Server To Send Data Before Giving Up.","displayName":"U4P Failover Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__u4p_failover_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"A Backoff Factor To Apply Between Attempts After The Second Try (Most Errors Are Resolved Immediately By A Second Try Without A Delay). Retries Will Sleep For: {Backoff Factor} * (2 ^ ({Number Of Total Retries} - 1)) Seconds.","displayName":"U4P Failover Backoff Factor","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__u4p_failover_backoff_factor","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Service Level To Use For Provisioning Storage. Setting This As An Extra Spec In Pool_Name Is Preferable.","displayName":"Powermax Service Level","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__powermax_service_level","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"How Far In Minutes To Look Back For Real-Time Performance Metrics In Load Calculation, Minimum Of 1 Maximum Of 10.","displayName":"Load Look Back Real Time","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__load_look_back_real_time","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Metric Used For Port Group Load Calculation.","displayName":"Port Group Load Metric","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__port_group_load_metric","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"List Of Port Groups Containing Frontend Ports Configured Prior For Server Connection. [ie: v1,v2]","displayName":"Powermax Port Groups","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__powermax_port_groups__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"If The Driver Should Automatically Failback To The Primary Instance Of Unisphere When A Successful Connection Is Re-Established.","displayName":"U4P Failover Autofailback","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__u4p_failover_autofailback","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"User Defined Override For Port Group Name.","displayName":"Powermax Port Group Name Template","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__powermax_port_group_name_template","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Use This Value To Specify Number Of Retries.","displayName":"Retries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__retries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Use This Value To Specify The Maximum Number Of Unlinks For The Temporary Snapshots Before A Clone Operation.","displayName":"Powermax Snapvx Unlink Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__powermax_snapvx_unlink_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Use This Value To Enable The Initiator_Check.","displayName":"Initiator Check","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__initiator_check","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Enable/Disable Load Balancing For A Powermax Backend.","displayName":"Load Balance","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__load_balance","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Performance Data Format, Not Applicable For Real-Time Metrics. Available Options Are 'Avg' And 'Max'.","displayName":"Load Data Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__load_data_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"The Maximum Number Of Retries Each Connection Should Attempt. Note, This Applies Only To Failed Dns Lookups, Socket Connections And Connection Timeouts, Never To Requests Where Data Has Made It To The Server.","displayName":"U4P Failover Retries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__u4p_failover_retries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Use This Value To Specify Length Of The Interval In Seconds.","displayName":"Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Dictionary Of Unisphere Failover Target Info. [ie: k1:v1,k2:v2]","displayName":"U4P Failover Target","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__u4p_failover_target__transform_csv_kvs","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"User Defined Override For Short Host Name.","displayName":"Powermax Short Host Name Template","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__powermax_short_host_name_template","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Storage Resource Pool On Array To Use For Provisioning.","displayName":"Powermax Srp","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__powermax_srp","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Workload, Setting This As An Extra Spec In Pool_Name Is Preferable.","displayName":"Vmax Workload","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerMaxISCSI__vmax_workload","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerMaxISCSI"]},{"description":"Allowed Ports. Comma Separated List Of Powerstore Iscsi Ips Or Fc Wwns (Ex. 58:Cc:F0:98:49:22:07:02) To Be Used. If Option Is Not Set All Ports Are Allowed. [ie: v1,v2]","displayName":"Powerstore Ports","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerStore__powerstore_ports__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerStore"]},{"description":"Appliances Names. Comma Separated List Of Powerstore Appliances Names Used To Provision Volumes. Required. [ie: v1,v2]","displayName":"Powerstore Appliances","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PowerStore__powerstore_appliances__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PowerStore"]},{"description":"Snapshot Replication Interval In Seconds.","displayName":"Pure Replica Interval Default","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_replica_interval_default","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Retain How Many Snapshots For Each Day.","displayName":"Pure Replica Retention Long Term Per Day Default","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_replica_retention_long_term_per_day_default","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Pure Pod Name To Use For Sync Replication (Will Be Created If It Does Not Exist).","displayName":"Pure Replication Pod Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_replication_pod_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Retain Snapshots Per Day On Target For This Time (In Days.)","displayName":"Pure Replica Retention Long Term Default","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_replica_retention_long_term_default","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Retain All Snapshots On Target For This Time (In Seconds.)","displayName":"Pure Replica Retention Short Term Default","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_replica_retention_short_term_default","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Rest Api Authorization Token.","displayName":"Pure Api Token","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_api_token","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Automatically Determine An Oversubscription Ratio Based On The Current Total Data Reduction Values. If Used This Calculated Value Will Override The Max_Over_Subscription_Ratio Config Option.","displayName":"Pure Automatic Max Oversubscription Ratio","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_automatic_max_oversubscription_ratio","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Cidr Of Flasharray Iscsi Targets Hosts Are Allowed To Connect To. Default Will Allow Connection To Any Ip Address.","displayName":"Pure Iscsi Cidr","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_iscsi_cidr","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"When Enabled, All Pure Volumes, Snapshots, And Protection Groups Will Be Eradicated At The Time Of Deletion In Cinder. Data Will Not Be Recoverable After A Delete With This Set To True! When Disabled, Volumes And Snapshots Will Go Into Pending Eradication State And Can Be Recovered.","displayName":"Pure Eradicate On Delete","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_eradicate_on_delete","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Pure Protection Group Name To Use For Async Replication (Will Be Created If It Does Not Exist).","displayName":"Pure Replication Pg Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_replication_pg_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Determines How The Purity System Tunes The Protocol Used Between The Array And The Initiator.","displayName":"Pure Host Personality","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureFC__pure_host_personality__transform_empty_none","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:aix","urn:alm:descriptor:com.tectonic.ui:select:esxi","urn:alm:descriptor:com.tectonic.ui:select:hitachi-vsp","urn:alm:descriptor:com.tectonic.ui:select:hpux","urn:alm:descriptor:com.tectonic.ui:select:oracle-vm-server","urn:alm:descriptor:com.tectonic.ui:select:solaris","urn:alm:descriptor:com.tectonic.ui:select:vms","urn:alm:descriptor:com.tectonic.ui:select:","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureFC"]},{"description":"Snapshot Replication Interval In Seconds.","displayName":"Pure Replica Interval Default","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_replica_interval_default","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Retain How Many Snapshots For Each Day.","displayName":"Pure Replica Retention Long Term Per Day Default","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_replica_retention_long_term_per_day_default","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Pure Pod Name To Use For Sync Replication (Will Be Created If It Does Not Exist).","displayName":"Pure Replication Pod Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_replication_pod_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Retain Snapshots Per Day On Target For This Time (In Days.)","displayName":"Pure Replica Retention Long Term Default","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_replica_retention_long_term_default","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Retain All Snapshots On Target For This Time (In Seconds.)","displayName":"Pure Replica Retention Short Term Default","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_replica_retention_short_term_default","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Rest Api Authorization Token.","displayName":"Pure Api Token","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_api_token","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Automatically Determine An Oversubscription Ratio Based On The Current Total Data Reduction Values. If Used This Calculated Value Will Override The Max_Over_Subscription_Ratio Config Option.","displayName":"Pure Automatic Max Oversubscription Ratio","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_automatic_max_oversubscription_ratio","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Cidr Of Flasharray Iscsi Targets Hosts Are Allowed To Connect To. Default Will Allow Connection To Any Ip Address.","displayName":"Pure Iscsi Cidr","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_iscsi_cidr","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"When Enabled, All Pure Volumes, Snapshots, And Protection Groups Will Be Eradicated At The Time Of Deletion In Cinder. Data Will Not Be Recoverable After A Delete With This Set To True! When Disabled, Volumes And Snapshots Will Go Into Pending Eradication State And Can Be Recovered.","displayName":"Pure Eradicate On Delete","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_eradicate_on_delete","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Pure Protection Group Name To Use For Async Replication (Will Be Created If It Does Not Exist).","displayName":"Pure Replication Pg Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_replication_pg_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Determines How The Purity System Tunes The Protocol Used Between The Array And The Initiator.","displayName":"Pure Host Personality","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__PureISCSI__pure_host_personality__transform_empty_none","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:aix","urn:alm:descriptor:com.tectonic.ui:select:esxi","urn:alm:descriptor:com.tectonic.ui:select:hitachi-vsp","urn:alm:descriptor:com.tectonic.ui:select:hpux","urn:alm:descriptor:com.tectonic.ui:select:oracle-vm-server","urn:alm:descriptor:com.tectonic.ui:select:solaris","urn:alm:descriptor:com.tectonic.ui:select:vms","urn:alm:descriptor:com.tectonic.ui:select:","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:PureISCSI"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"The Url To Management Qnap Storage. Driver Does Not Support Ipv6 Address In Url.","displayName":"Qnap Management Url","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__qnap_management_url","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"Communication Protocol To Access Qnap Storage","displayName":"Qnap Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__qnap_storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"The Pool Name In The Qnap Storage","displayName":"Qnap Poolname","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__QnapISCSI__qnap_poolname","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:QnapISCSI"]},{"description":"Quobyte Url To The Quobyte Volume Using E.G. A Dns Srv Record (Preferred) Or A Host List (Alternatively) Like Quobyte://\u003cDir Host1\u003e, \u003cDir Host2\u003e/\u003cVolume Name\u003e","displayName":"Quobyte Volume Url","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Quobyte__quobyte_volume_url","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Quobyte"]},{"description":"Create New Volumes From The Volume_From_Snapshot_Cache By Creating Overlay Files Instead Of Full Copies. This Speeds Up The Creation Of Volumes From This Cache. This Feature Requires The Options Quobyte_Qcow2_Volumes And Quobyte_Volume_From_Snapshot_Cache To Be Set To True. If One Of These Is Set To False This Option Is Ignored.","displayName":"Quobyte Overlay Volumes","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Quobyte__quobyte_overlay_volumes","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Quobyte"]},{"description":"Create A Cache Of Volumes From Merged Snapshots To Speed Up Creation Of Multiple Volumes From A Single Snapshot.","displayName":"Quobyte Volume From Snapshot Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Quobyte__quobyte_volume_from_snapshot_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Quobyte"]},{"description":"Create Volumes As Qcow2 Files Rather Than Raw Files.","displayName":"Quobyte Qcow2 Volumes","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Quobyte__quobyte_qcow2_volumes","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Quobyte"]},{"description":"Create Volumes As Sparse Files Which Take No Space. If Set To False, Volume Is Created As Regular File.","displayName":"Quobyte Sparsed Volumes","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Quobyte__quobyte_sparsed_volumes","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Quobyte"]},{"description":"Path To A Quobyte Client Configuration File.","displayName":"Quobyte Client Cfg","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Quobyte__quobyte_client_cfg","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Quobyte"]},{"description":"Base Dir Containing The Mount Point For The Quobyte Volume.","displayName":"Quobyte Mount Point Base","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Quobyte__quobyte_mount_point_base","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Quobyte"]},{"description":"Set To True For Driver To Report Total Capacity As A Dynamic Value (Used + Current Free) And To False To Report A Static Value (Quota Max Bytes If Defined And Global Size Of Cluster If Not).","displayName":"Report Dynamic Total Capacity","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__report_dynamic_total_capacity","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Set To True If The Pool Is Used Exclusively By Cinder. On Exclusive Use Driver Won'T Query Images' Provisioned Size As They Will Match The Value Calculated By The Cinder Core Code For Allocated_Capacity_Gb. This Reduces The Load On The Ceph Cluster As Well As On The Volume Service.","displayName":"Rbd Exclusive Cinder Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_exclusive_cinder_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Path To The Ceph Keyring File","displayName":"Rbd Keyring Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_keyring_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Volumes Will Be Chunked Into Objects Of This Size (In Megabytes).","displayName":"Rbd Store Chunk Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_store_chunk_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Path To The Ceph Configuration File","displayName":"Rbd Ceph Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_ceph_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"The Rados Pool Where Rbd Volumes Are Stored","displayName":"Rbd Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Maximum Number Of Nested Volume Clones That Are Taken Before A Flatten Occurs. Set To 0 To Disable Cloning. Note: Lowering This Value Will Not Affect Existing Volumes Whose Clone Depth Exceeds The New Value.","displayName":"Rbd Max Clone Depth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_max_clone_depth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"The Rados Client Name For Accessing Rbd Volumes - Only Set When Using Cephx Authentication","displayName":"Rbd User","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_user","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Enable Deferred Deletion. Upon Deletion, Volumes Are Tagged For Deletion But Will Only Be Removed Asynchronously At A Later Time.","displayName":"Enable Deferred Deletion","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__enable_deferred_deletion","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Number Of Retries If Connection To Ceph Cluster Failed.","displayName":"Rados Connection Retries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rados_connection_retries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Time Delay In Seconds Before A Volume Is Eligible For Permanent Removal After Being Tagged For Deferred Deletion.","displayName":"Deferred Deletion Delay","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__deferred_deletion_delay","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Interval Value (In Seconds) Between Connection Retries To Ceph Cluster.","displayName":"Rados Connection Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rados_connection_interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"The Name Of Ceph Cluster","displayName":"Rbd Cluster Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_cluster_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"The Libvirt Uuid Of The Secret For The Rbd_User Volumes","displayName":"Rbd Secret Uuid","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_secret_uuid","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Timeout Value (In Seconds) Used When Connecting To Ceph Cluster. If Value \u003c 0, No Timeout Is Set And Default Librados Value Is Used.","displayName":"Rados Connect Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rados_connect_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Flatten Volumes Created From Snapshots To Remove Dependency From Volume To Snapshot","displayName":"Rbd Flatten Volume From Snapshot","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__rbd_flatten_volume_from_snapshot","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Number Of Seconds Between Runs Of The Periodic Task To Purge Volumes Tagged For Deletion.","displayName":"Deferred Deletion Purge Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBD__deferred_deletion_purge_interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBD"]},{"description":"Set To True For Driver To Report Total Capacity As A Dynamic Value (Used + Current Free) And To False To Report A Static Value (Quota Max Bytes If Defined And Global Size Of Cluster If Not).","displayName":"Report Dynamic Total Capacity","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__report_dynamic_total_capacity","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Username For The Rbd_Target_Api Service","displayName":"Rbd Iscsi Api Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_iscsi_api_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Username For The Rbd_Target_Api Service","displayName":"Rbd Iscsi Api User","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_iscsi_api_user","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Volumes Will Be Chunked Into Objects Of This Size (In Megabytes).","displayName":"Rbd Store Chunk Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_store_chunk_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Path To The Ceph Configuration File","displayName":"Rbd Ceph Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_ceph_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Suppress Requests Library Ssl Certificate Warnings.","displayName":"Suppress Requests Ssl Warnings","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__suppress_requests_ssl_warnings","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Rados Pool Where Rbd Volumes Are Stored","displayName":"Rbd Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Maximum Number Of Nested Volume Clones That Are Taken Before A Flatten Occurs. Set To 0 To Disable Cloning. Note: Lowering This Value Will Not Affect Existing Volumes Whose Clone Depth Exceeds The New Value.","displayName":"Rbd Max Clone Depth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_max_clone_depth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Rados Client Name For Accessing Rbd Volumes - Only Set When Using Cephx Authentication","displayName":"Rbd User","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_user","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Preconfigured Target_Iqn On The Iscsi Gateway.","displayName":"Rbd Iscsi Target Iqn","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_iscsi_target_iqn","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Enable Deferred Deletion. Upon Deletion, Volumes Are Tagged For Deletion But Will Only Be Removed Asynchronously At A Later Time.","displayName":"Enable Deferred Deletion","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__enable_deferred_deletion","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Number Of Retries If Connection To Ceph Cluster Failed.","displayName":"Rados Connection Retries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rados_connection_retries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Enable Client Request Debugging.","displayName":"Rbd Iscsi Api Debug","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_iscsi_api_debug","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Time Delay In Seconds Before A Volume Is Eligible For Permanent Removal After Being Tagged For Deferred Deletion.","displayName":"Deferred Deletion Delay","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__deferred_deletion_delay","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Interval Value (In Seconds) Between Connection Retries To Ceph Cluster.","displayName":"Rados Connection Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rados_connection_interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Flatten Volumes Created From Snapshots To Remove Dependency From Volume To Snapshot","displayName":"Rbd Flatten Volume From Snapshot","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_flatten_volume_from_snapshot","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Url To The Rbd_Target_Api Service","displayName":"Rbd Iscsi Api Url","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_iscsi_api_url","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Set To True If The Pool Is Used Exclusively By Cinder. On Exclusive Use Driver Won'T Query Images' Provisioned Size As They Will Match The Value Calculated By The Cinder Core Code For Allocated_Capacity_Gb. This Reduces The Load On The Ceph Cluster As Well As On The Volume Service.","displayName":"Rbd Exclusive Cinder Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_exclusive_cinder_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Libvirt Uuid Of The Secret For The Rbd_User Volumes","displayName":"Rbd Secret Uuid","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_secret_uuid","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"The Name Of Ceph Cluster","displayName":"Rbd Cluster Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rbd_cluster_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Timeout Value (In Seconds) Used When Connecting To Ceph Cluster. If Value \u003c 0, No Timeout Is Set And Default Librados Value Is Used.","displayName":"Rados Connect Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__rados_connect_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Number Of Seconds Between Runs Of The Periodic Task To Purge Volumes Tagged For Deletion.","displayName":"Deferred Deletion Purge Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RBDISCSI__deferred_deletion_purge_interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RBDISCSI"]},{"description":"Url Of Podm Service","displayName":"Podm Url","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RSD__podm_url","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RSD"]},{"description":"Username Of Podm Service","displayName":"Podm Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RSD__podm_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RSD"]},{"description":"Password Of Podm Service","displayName":"Podm Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__RSD__podm_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:RSD"]},{"description":"Storage Center System Serial Number","displayName":"Dell Sc Ssn","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__dell_sc_ssn","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Comma Separated Fault Domain Ips To Be Included From Iscsi Returns. [ie: v1,v2]","displayName":"Included Domain Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__included_domain_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Dell Sc Api Sync Call Default Timeout In Seconds.","displayName":"Dell Api Sync Rest Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__dell_api_sync_rest_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Enable Https Sc Certificate Verification","displayName":"Dell Sc Verify Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__dell_sc_verify_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Dell Sc Api Async Call Default Timeout In Seconds.","displayName":"Dell Api Async Rest Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__dell_api_async_rest_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Name Of The Server Folder To Use On The Storage Center","displayName":"Dell Sc Server Folder","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__dell_sc_server_folder","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Ip Address Of Secondary Dsm Controller","displayName":"Secondary San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__secondary_san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Server Os Type To Use When Creating A New Server On The Storage Center.","displayName":"Dell Server Os","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__dell_server_os","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Dell Api Port (min=0, max=65535)","displayName":"Dell Sc Api Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__dell_sc_api_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Secondary Dell Api Port (min=0, max=65535)","displayName":"Secondary Sc Api Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__secondary_sc_api_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Secondary Dsm User Name","displayName":"Secondary San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__secondary_san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Secondary Dsm User Password Name","displayName":"Secondary San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__secondary_san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Name Of The Volume Folder To Use On The Storage Center","displayName":"Dell Sc Volume Folder","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__dell_sc_volume_folder","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Comma Separated Fault Domain Ips To Be Excluded From Iscsi Returns. [ie: v1,v2]","displayName":"Excluded Domain Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCFC__excluded_domain_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCFC"]},{"description":"Storage Center System Serial Number","displayName":"Dell Sc Ssn","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__dell_sc_ssn","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Comma Separated Fault Domain Ips To Be Included From Iscsi Returns. [ie: v1,v2]","displayName":"Included Domain Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__included_domain_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Dell Sc Api Sync Call Default Timeout In Seconds.","displayName":"Dell Api Sync Rest Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__dell_api_sync_rest_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Enable Https Sc Certificate Verification","displayName":"Dell Sc Verify Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__dell_sc_verify_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Dell Sc Api Async Call Default Timeout In Seconds.","displayName":"Dell Api Async Rest Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__dell_api_async_rest_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Name Of The Server Folder To Use On The Storage Center","displayName":"Dell Sc Server Folder","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__dell_sc_server_folder","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Ip Address Of Secondary Dsm Controller","displayName":"Secondary San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__secondary_san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Server Os Type To Use When Creating A New Server On The Storage Center.","displayName":"Dell Server Os","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__dell_server_os","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Dell Api Port (min=0, max=65535)","displayName":"Dell Sc Api Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__dell_sc_api_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Secondary Dell Api Port (min=0, max=65535)","displayName":"Secondary Sc Api Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__secondary_sc_api_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Secondary Dsm User Name","displayName":"Secondary San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__secondary_san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Secondary Dsm User Password Name","displayName":"Secondary San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__secondary_san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Name Of The Volume Folder To Use On The Storage Center","displayName":"Dell Sc Volume Folder","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__dell_sc_volume_folder","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Comma Separated Fault Domain Ips To Be Excluded From Iscsi Returns. [ie: v1,v2]","displayName":"Excluded Domain Ips","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SCISCSI__excluded_domain_ips__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SCISCSI"]},{"description":"Volume Configuration File Storage Directory","displayName":"Volumes Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__volumes_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Path To The Client Certificate For Verification, If The Driver Supports It.","displayName":"Driver Client Cert","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__driver_client_cert","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Maximum Number Of Times To Rescan Targets To Find Volume","displayName":"Num Volume Device Scan Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__num_volume_device_scan_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Backend Name For A Given Driver Implementation","displayName":"Volume Backend Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__volume_backend_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Method Used To Wipe Old Volumes","displayName":"Volume Clear","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__volume_clear","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:none","urn:alm:descriptor:com.tectonic.ui:select:zero","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Chiscsi (Cxt) Global Defaults Configuration File","displayName":"Chiscsi Conf","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__chiscsi_conf","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"String Representation For An Equation That Will Be Used To Filter Hosts. Only Used When The Driver Filter Is Set To Be Used By The Cinder Scheduler.","displayName":"Filter Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__filter_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Namespace For Driver Private Data Values To Be Saved In.","displayName":"Driver Data Namespace","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__driver_data_namespace","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Write-Back(On) Or Write-Through(Off). This Parameter Is Valid If Target_Helper Is Set To Tgtadm.","displayName":"Iscsi Write Cache","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__iscsi_write_cache","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:on","urn:alm:descriptor:com.tectonic.ui:select:off","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Flag To Pass To Ionice To Alter The I/O Priority Of The Process Used To Zero A Volume After Deletion, For Example '-C3' For Idle Only Priority.","displayName":"Volume Clear Ionice","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__volume_clear_ionice","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Sets The Behavior Of The Iscsi Target To Either Perform Blockio Or Fileio Optionally, Auto Can Be Set And Cinder Will Autodetect Type Of Backing Device","displayName":"Iscsi Iotype","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__iscsi_iotype","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:blockio","urn:alm:descriptor:com.tectonic.ui:select:fileio","urn:alm:descriptor:com.tectonic.ui:select:auto","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"List Of Options That Control Which Trace Info Is Written To The Debug Log Level To Assist Developers. Valid Values Are Method And Api. [ie: v1,v2]","displayName":"Trace Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__trace_flags__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Default Block Size Used When Copying/Clearing Volumes","displayName":"Volume Dd Blocksize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__volume_dd_blocksize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Protocol For Transferring Data Between Host And Storage Back-End.","displayName":"Storage Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__storage_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:fc","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"String Representation For An Equation That Will Be Used To Determine The Goodness Of A Host. Only Used When Using The Goodness Weigher Is Set To Be Used By The Cinder Scheduler.","displayName":"Goodness Function","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__goodness_function","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Number Of Times To Attempt To Run Flakey Shell Commands","displayName":"Num Shell Tries","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__num_shell_tries","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Target User-Land Tool To Use. Tgtadm Is Default, Use Lioadm For Lio Iscsi Support, Scstadmin For Scst Target Support, Ietadm For Iscsi Enterprise Target, Iscsictl For Chelsio Iscsi Target, Nvmet For Nvmeof Support, Spdk-Nvmeof For Spdk Nvme-Of, Or Fake For Testing. Note: The Iet Driver Is Deprecated And Will Be Removed In The V Release.","displayName":"Target Helper","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__target_helper","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:tgtadm","urn:alm:descriptor:com.tectonic.ui:select:lioadm","urn:alm:descriptor:com.tectonic.ui:select:scstadmin","urn:alm:descriptor:com.tectonic.ui:select:iscsictl","urn:alm:descriptor:com.tectonic.ui:select:ietadm","urn:alm:descriptor:com.tectonic.ui:select:nvmet","urn:alm:descriptor:com.tectonic.ui:select:spdk-nvmeof","urn:alm:descriptor:com.tectonic.ui:select:fake","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Report To Clients Of Cinder That The Backend Supports Discard (Aka. Trim/Unmap). This Will Not Actually Change The Behavior Of The Backend Or The Client Directly, It Will Only Notify That It Can Be Used.","displayName":"Report Discard Supported","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__report_discard_supported","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Upper Limit Of Bandwidth Of Volume Copy. 0 =\u003e Unlimited","displayName":"Volume Copy Bps Limit","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__volume_copy_bps_limit","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Path To The Client Certificate Key For Verification, If The Driver Supports It.","displayName":"Driver Client Cert Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__driver_client_cert_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Availability Zone For This Volume Backend. If Not Set, The Storage_Availability_Zone Option Value Is Used As The Default For All Backends.","displayName":"Backend Availability Zone","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__backend_availability_zone","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Size In Mib To Wipe At Start Of Old Volumes. 1024 Mib At Max. 0 =\u003e All (max=1024)","displayName":"Volume Clear Size","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__volume_clear_size","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Sets The Target-Specific Flags For The Iscsi Target. Only Used For Tgtadm To Specify Backing Device Flags Using Bsoflags Option. The Specified String Is Passed As Is To The Underlying Tool.","displayName":"Iscsi Target Flags","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__iscsi_target_flags","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"The Blkio Cgroup Name To Be Used To Limit Bandwidth Of Volume Copy","displayName":"Volume Copy Blkio Cgroup Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__volume_copy_blkio_cgroup_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SdsISCSI__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SdsISCSI"]},{"description":"Overrides Default Cluster Svip With The One Specified. This Is Required Or Deployments That Have Implemented The Use Of Vlans For Iscsi Networks In Their Cloud.","displayName":"Sf Svip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_svip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Sets Time In Seconds To Wait For A Create Volume Operation To Complete. (min=30)","displayName":"Sf Volume Create Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_volume_create_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Allow Tenants To Specify Qos On Create","displayName":"Sf Allow Tenant Qos","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_allow_tenant_qos","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Utilize Volume Access Groups On A Per-Tenant Basis.","displayName":"Sf Enable Vag","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_enable_vag","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Sets Time In Seconds To Wait For A Clone Of A Volume Or Snapshot To Complete. (min=60)","displayName":"Sf Volume Clone Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_volume_clone_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Solidfire Api Port. Useful If The Device Api Is Behind A Proxy On A Different Port. (min=0, max=65535)","displayName":"Sf Api Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_api_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Set 512 Byte Emulation On Volume Creation; ","displayName":"Sf Emulate 512","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_emulate_512","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Create Solidfire Volumes With This Prefix. Volume Names Are Of The Form \u003cSf_Volume_Prefix\u003e\u003cCinder-Volume-Id\u003e.  The Default Is To Use A Prefix Of 'Uuid-'.","displayName":"Sf Volume Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_volume_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Sets Time In Seconds To Wait For Clusters To Complete Pairing. (min=3)","displayName":"Sf Cluster Pairing Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_cluster_pairing_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Create Solidfire Accounts With This Prefix. Any String Can Be Used Here, But The String 'Hostname' Is Special And Will Create A Prefix Using The Cinder Node Hostname (Previous Default Behavior).  The Default Is No Prefix.","displayName":"Sf Account Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_account_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Sets Time In Seconds To Wait For A Migrating Volume To Complete Pairing And Sync. (min=30)","displayName":"Sf Volume Pairing Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_volume_pairing_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Change How Solidfire Reports Used Space And Provisioning Calculations. If This Parameter Is Set To 'Usedspace', The  Driver Will Report Correct Values As Expected By Cinder Thin Provisioning.","displayName":"Sf Provisioning Calc","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_provisioning_calc","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:maxProvisionedSpace","urn:alm:descriptor:com.tectonic.ui:select:usedSpace","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"Sets Time In Seconds To Wait For An Api Request To Complete. (min=30)","displayName":"Sf Api Request Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SolidFire__sf_api_request_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SolidFire"]},{"description":"The Default Storpool Chain Replication Value.  Used When Creating A Volume With No Specified Type If Storpool_Template Is Not Set.  Also Used For Calculating The Apparent Free Space Reported In The Stats.","displayName":"Storpool Replication","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorPool__storpool_replication","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorPool"]},{"description":"The Storpool Template For Volumes With No Type.","displayName":"Storpool Template","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorPool__storpool_template","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorPool"]},{"description":"Maximum Number Of Seconds To Wait For Flashcopy To Be Prepared. (min=1, max=600)","displayName":"Storwize Svc Flashcopy Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_flashcopy_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Storage System Autoexpand Parameter For Volumes (True/False)","displayName":"Storwize Svc Vol Autoexpand","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_vol_autoexpand","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Specifies Secondary Management Ip Or Hostname To Be Used If San_Ip Is Invalid Or Becomes Inaccessible.","displayName":"Storwize San Secondary Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_san_secondary_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Specifies The Storwize Flashcopy Copy Rate To Be Used When Creating A Full Volume Copy. The Default Is Rate Is 50, And The Valid Rates Are 1-150. (min=1, max=150)","displayName":"Storwize Svc Flashcopy Rate","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_flashcopy_rate","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Storage System Grain Size Parameter For Volumes (8/32/64/128/256)","displayName":"Storwize Svc Vol Grainsize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_vol_grainsize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Enable Or Disable Retaining Of Aux Volume On Secondary Storage During Delete Of The Volume On Primary Storage Or Moving The Primary Volume From Mirror To Non-Mirror With Replication Enabled. This Option Is Valid For Spectrum Virtualize Family.","displayName":"Storwize Svc Retain Aux Volume","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_retain_aux_volume","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Connect With Multipath (Fc Only; Iscsi Multipath Is Controlled By Nova)","displayName":"Storwize Svc Multipath Enabled","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_multipath_enabled","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"If Operating In Stretched Cluster Mode, Specify The Name Of The Pool In Which Mirrored Copies Are Stored.Example: 'Pool2'","displayName":"Storwize Svc Stretched Cluster Partner","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_stretched_cluster_partner","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Storage System Compression Option For Volumes","displayName":"Storwize Svc Vol Compression","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_vol_compression","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Enable Easy Tier For Volumes","displayName":"Storwize Svc Vol Easytier","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_vol_easytier","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Storage System Space-Efficiency Parameter For Volumes (Percentage) (min=-1, max=100)","displayName":"Storwize Svc Vol Rsize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_vol_rsize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Comma Separated List Of Storage System Storage Pools For Volumes. [ie: v1,v2]","displayName":"Storwize Svc Volpool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_volpool_name__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Specifies The Name Of The Pool In Which Mirrored Copy Is Stored. Example: 'Pool2'","displayName":"Storwize Svc Mirror Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_mirror_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"The I/O Group In Which To Allocate Volumes. It Can Be A Comma-Separated List In Which Case The Driver Will Select An Io_Group Based On Least Number Of Volumes Associated With The Io_Group.","displayName":"Storwize Svc Vol Iogrp","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_vol_iogrp","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Storage System Threshold For Volume Capacity Warnings (Percentage) (min=-1, max=100)","displayName":"Storwize Svc Vol Warning","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_vol_warning","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"This Defines An Optional Cycle Period That Applies To Global Mirror Relationships With A Cycling Mode Of Multi. A Global Mirror Relationship Using The Multi Cycling_Mode Performs A Complete Cycle At Most Once Each Period. The Default Is 300 Seconds, And The Valid Seconds Are 60-86400. (min=60, max=86400)","displayName":"Cycle Period Seconds","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__cycle_period_seconds","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Specifies The Site Information For Host. One Wwpn Or Multi Wwpns Used In The Host Can Be Specified. For Example: Storwize_Preferred_Host_Site=Site1:Wwpn1,Site2:Wwpn2\u0026Wwpn3 Or Storwize_Preferred_Host_Site=Site1:Iqn1,Site2:Iqn2 [ie: k1:v1,k2:v2]","displayName":"Storwize Preferred Host Site","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_preferred_host_site__transform_csv_kvs","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Allow Tenants To Specify Qos On Create","displayName":"Storwize Svc Allow Tenant Qos","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_allow_tenant_qos","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Specifies That The Volume Not Be Formatted During Creation.","displayName":"Storwize Svc Vol Nofmtdisk","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_svc_vol_nofmtdisk","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Specifies The Name Of The Peer Pool For Hyperswap Volume, The Peer Pool Must Exist On The Other Site.","displayName":"Storwize Peer Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCFC__storwize_peer_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCFC"]},{"description":"Maximum Number Of Seconds To Wait For Flashcopy To Be Prepared. (min=1, max=600)","displayName":"Storwize Svc Flashcopy Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_flashcopy_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Storage System Autoexpand Parameter For Volumes (True/False)","displayName":"Storwize Svc Vol Autoexpand","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_vol_autoexpand","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Specifies Secondary Management Ip Or Hostname To Be Used If San_Ip Is Invalid Or Becomes Inaccessible.","displayName":"Storwize San Secondary Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_san_secondary_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Specifies The Storwize Flashcopy Copy Rate To Be Used When Creating A Full Volume Copy. The Default Is Rate Is 50, And The Valid Rates Are 1-150. (min=1, max=150)","displayName":"Storwize Svc Flashcopy Rate","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_flashcopy_rate","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Storage System Grain Size Parameter For Volumes (8/32/64/128/256)","displayName":"Storwize Svc Vol Grainsize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_vol_grainsize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Enable Or Disable Retaining Of Aux Volume On Secondary Storage During Delete Of The Volume On Primary Storage Or Moving The Primary Volume From Mirror To Non-Mirror With Replication Enabled. This Option Is Valid For Spectrum Virtualize Family.","displayName":"Storwize Svc Retain Aux Volume","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_retain_aux_volume","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Storage System Threshold For Volume Capacity Warnings (Percentage) (min=-1, max=100)","displayName":"Storwize Svc Vol Warning","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_vol_warning","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Specifies That The Volume Not Be Formatted During Creation.","displayName":"Storwize Svc Vol Nofmtdisk","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_vol_nofmtdisk","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Storage System Compression Option For Volumes","displayName":"Storwize Svc Vol Compression","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_vol_compression","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Enable Easy Tier For Volumes","displayName":"Storwize Svc Vol Easytier","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_vol_easytier","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Storage System Space-Efficiency Parameter For Volumes (Percentage) (min=-1, max=100)","displayName":"Storwize Svc Vol Rsize","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_vol_rsize","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Comma Separated List Of Storage System Storage Pools For Volumes. [ie: v1,v2]","displayName":"Storwize Svc Volpool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_volpool_name__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Configure Chap Authentication For Iscsi Connections (Default: Enabled)","displayName":"Storwize Svc Iscsi Chap Enabled","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_iscsi_chap_enabled","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Specifies The Name Of The Pool In Which Mirrored Copy Is Stored. Example: 'Pool2'","displayName":"Storwize Svc Mirror Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_mirror_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"If Operating In Stretched Cluster Mode, Specify The Name Of The Pool In Which Mirrored Copies Are Stored.Example: 'Pool2'","displayName":"Storwize Svc Stretched Cluster Partner","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_stretched_cluster_partner","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"This Defines An Optional Cycle Period That Applies To Global Mirror Relationships With A Cycling Mode Of Multi. A Global Mirror Relationship Using The Multi Cycling_Mode Performs A Complete Cycle At Most Once Each Period. The Default Is 300 Seconds, And The Valid Seconds Are 60-86400. (min=60, max=86400)","displayName":"Cycle Period Seconds","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__cycle_period_seconds","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Specifies The Site Information For Host. One Wwpn Or Multi Wwpns Used In The Host Can Be Specified. For Example: Storwize_Preferred_Host_Site=Site1:Wwpn1,Site2:Wwpn2\u0026Wwpn3 Or Storwize_Preferred_Host_Site=Site1:Iqn1,Site2:Iqn2 [ie: k1:v1,k2:v2]","displayName":"Storwize Preferred Host Site","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_preferred_host_site__transform_csv_kvs","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Allow Tenants To Specify Qos On Create","displayName":"Storwize Svc Allow Tenant Qos","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_allow_tenant_qos","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"The I/O Group In Which To Allocate Volumes. It Can Be A Comma-Separated List In Which Case The Driver Will Select An Io_Group Based On Least Number Of Volumes Associated With The Io_Group.","displayName":"Storwize Svc Vol Iogrp","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_svc_vol_iogrp","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Specifies The Name Of The Peer Pool For Hyperswap Volume, The Peer Pool Must Exist On The Other Site.","displayName":"Storwize Peer Pool","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__StorwizeSVCISCSI__storwize_peer_pool","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:StorwizeSVCISCSI"]},{"description":"Do Certificate Validation Or Not If $Driver_Use_Ssl Is True","displayName":"Synology Ssl Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__synology_ssl_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Password Of Administrator For Logging In Synology Storage.","displayName":"Synology Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__synology_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Administrator Of Synology Storage.","displayName":"Synology Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__synology_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Volume On Synology Storage To Be Used For Creating Lun.","displayName":"Synology Pool Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__synology_pool_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Chap User Name.","displayName":"Chap Username","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__chap_username","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"The List Of Secondary Ip Addresses Of The Iscsi Daemon [ie: v1,v2]","displayName":"Iscsi Secondary Ip Addresses","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__iscsi_secondary_ip_addresses__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Management Port For Synology Storage. (min=0, max=65535)","displayName":"Synology Admin Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__synology_admin_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Password For Specified Chap Account Name.","displayName":"Chap Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__chap_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"One Time Password Of Administrator For Logging In Synology Storage If Otp Is Enabled.","displayName":"Synology One Time Pass","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__synology_one_time_pass","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Prefix For Iscsi Volumes","displayName":"Target Prefix","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__target_prefix","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"The Port That The Iscsi Daemon Is Listening On (min=0, max=65535)","displayName":"Target Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__target_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Determines The Target Protocol For New Volumes, Created With Tgtadm, Lioadm And Nvmet Target Helpers. In Order To Enable Rdma, This Parameter Should Be Set With The Value 'Iser'. The Supported Iscsi Protocol Values Are 'Iscsi' And 'Iser', In Case Of Nvmet Target Set To 'Nvmet_Rdma'.","displayName":"Target Protocol","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__target_protocol","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:iscsi","urn:alm:descriptor:com.tectonic.ui:select:iser","urn:alm:descriptor:com.tectonic.ui:select:nvmet_rdma","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"The Ip Address That The Iscsi Daemon Is Listening On","displayName":"Target Ip Address","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__target_ip_address","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Option To Enable/Disable Chap Authentication For Targets.","displayName":"Use Chap Auth","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__use_chap_auth","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Device Id For Skip One Time Password Check For Logging In Synology Storage If Otp Is Enabled.","displayName":"Synology Device Id","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__synology_device_id","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"Tell Driver To Use Ssl For Connection To Backend Storage If The Driver Supports It.","displayName":"Driver Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__SynoISCSI__driver_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:SynoISCSI"]},{"description":"A Comma-Separated List Of Iscsi Or Fc Ports To Be Used. Each Port Can Be Unix-Style Glob Expressions. [ie: v1,v2]","displayName":"Unity Io Ports","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Unity__unity_io_ports__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Unity"]},{"description":"To Remove The Host From Unity When The Last Lun Is Detached From It. By Default, It Is False.","displayName":"Remove Empty Host","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Unity__remove_empty_host","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Unity"]},{"description":"A Comma-Separated List Of Storage Pool Names To Be Used. [ie: v1,v2]","displayName":"Unity Storage Pool Names","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__Unity__unity_storage_pool_names__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:Unity"]},{"description":"Comma-Separated List Of Storage Pool Names To Be Used. [ie: v1,v2]","displayName":"Storage Vnx Pool Names","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__storage_vnx_pool_names__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"To Destroy Storage Group When The Last Lun Is Removed From It. By Default, The Value Is False.","displayName":"Destroy Empty Storage Group","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__destroy_empty_storage_group","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Vnx Authentication Scope Type. By Default, The Value Is Global.","displayName":"Storage Vnx Authentication Type","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__storage_vnx_authentication_type","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Default Timeout For Cli Operations In Minutes. For Example, Lun Migration Is A Typical Long Running Operation, Which Depends On The Lun Size And The Load Of The Array. An Upper Bound In The Specific Deployment Can Be Set To Avoid Unnecessary Long Wait. By Default, It Is 365 Days Long.","displayName":"Default Timeout","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__default_timeout","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Automatically Deregister Initiators After The Related Storage Group Is Destroyed. By Default, The Value Is False.","displayName":"Initiator Auto Deregistration","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__initiator_auto_deregistration","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Always Use Asynchronous Migration During Volume Cloning And Creating From Snapshot. As Described In Configuration Doc, Async Migration Has Some Constraints. Besides Using Metadata, Customers Could Use This Option To Disable Async Migration. Be Aware That `Async_Migrate` In Metadata Overrides This Option When Both Are Set. By Default, The Value Is True.","displayName":"Vnx Async Migrate","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__vnx_async_migrate","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Delete A Lun Even If It Is In Storage Groups.","displayName":"Force Delete Lun In Storagegroup","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__force_delete_lun_in_storagegroup","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Naviseccli Path.","displayName":"Naviseccli Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__naviseccli_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Comma Separated Iscsi Or Fc Ports To Be Used In Nova Or Cinder. [ie: v1,v2]","displayName":"Io Port List","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__io_port_list__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Directory Path That Contains The Vnx Security File. Make Sure The Security File Is Generated First.","displayName":"Storage Vnx Security File Dir","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__storage_vnx_security_file_dir","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Automatically Register Initiators. By Default, The Value Is False.","displayName":"Initiator Auto Registration","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__initiator_auto_registration","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Mapping Between Hostname And Its Iscsi Initiator Ip Addresses.","displayName":"Iscsi Initiators","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__iscsi_initiators","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Force Lun Creation Even If The Full Threshold Of Pool Is Reached. By Default, The Value Is False.","displayName":"Ignore Pool Full Threshold","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__ignore_pool_full_threshold","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Default Max Number Of Luns In A Storage Group. By Default, The Value Is 255.","displayName":"Max Luns Per Storage Group","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VNX__max_luns_per_storage_group","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VNX"]},{"description":"Percent Of Actual Usage Of The Underlying Volume Before No New Volumes Can Be Allocated To The Volume Destination.","displayName":"Vzstorage Used Ratio","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VZStorage__vzstorage_used_ratio__transform_string_float","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VZStorage"]},{"description":"File With The List Of Available Vzstorage Shares.","displayName":"Vzstorage Shares Config","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VZStorage__vzstorage_shares_config","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VZStorage"]},{"description":"Base Dir Containing Mount Points For Vzstorage Shares.","displayName":"Vzstorage Mount Point Base","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VZStorage__vzstorage_mount_point_base","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VZStorage"]},{"description":"Create Volumes As Sparsed Files Which Take No Space Rather Than Regular Files When Using Raw Format, In Which Case Volume Creation Takes Lot Of Time.","displayName":"Vzstorage Sparsed Volumes","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VZStorage__vzstorage_sparsed_volumes","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VZStorage"]},{"description":"Mount Options Passed To The Vzstorage Client. See Section Of The Pstorage-Mount Man Page For Details. [ie: v1,v2]","displayName":"Vzstorage Mount Options","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VZStorage__vzstorage_mount_options__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VZStorage"]},{"description":"Default Format That Will Be Used When Creating Volumes If No Volume Format Is Specified.","displayName":"Vzstorage Default Volume Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__VZStorage__vzstorage_default_volume_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:VZStorage"]},{"description":"Path To Store Vhd Backed Volumes","displayName":"Windows Iscsi Lun Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__WindowsISCSI__windows_iscsi_lun_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:WindowsISCSI"]},{"description":"Mappings Between Share Locations And Pool Names. If Not Specified, The Share Names Will Be Used As Pool Names. Example: //Addr/Share:Pool_Name,//Addr/Share2:Pool_Name2 [ie: k1:v1,k2:v2]","displayName":"Smbfs Pool Mappings","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__WindowsSmbfs__smbfs_pool_mappings__transform_csv_kvs","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:WindowsSmbfs"]},{"description":"File With The List Of Available Smbfs Shares.","displayName":"Smbfs Shares Config","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__WindowsSmbfs__smbfs_shares_config","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:WindowsSmbfs"]},{"description":"Base Dir Containing Mount Points For Smbfs Shares.","displayName":"Smbfs Mount Point Base","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__WindowsSmbfs__smbfs_mount_point_base","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:WindowsSmbfs"]},{"description":"Default Format That Will Be Used When Creating Volumes If No Volume Format Is Specified.","displayName":"Smbfs Default Volume Format","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__WindowsSmbfs__smbfs_default_volume_format","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:select:vhd","urn:alm:descriptor:com.tectonic.ui:select:vhdx","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:WindowsSmbfs"]},{"description":"Number Of Retries In Case Array Is Busy","displayName":"Xtremio Array Busy Retry Count","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__xtremio_array_busy_retry_count","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"Xms Cluster Id In Multi-Cluster Environment","displayName":"Xtremio Cluster Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__xtremio_cluster_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"Should The Driver Remove Initiator Groups With No Volumes After The Last Connection Was Terminated. Since The Behavior Till Now Was To Leave The Ig Be, We Default To False (Not Deleting Igs Without Connected Volumes); Setting This Parameter To True Will Remove Any Ig After Terminating Its Connection To The Last Volume.","displayName":"Xtremio Clean Unused Ig","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__xtremio_clean_unused_ig","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"Interval Between Retries In Case Array Is Busy","displayName":"Xtremio Array Busy Retry Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__xtremio_array_busy_retry_interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOFC__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOFC"]},{"description":"Number Of Retries In Case Array Is Busy","displayName":"Xtremio Array Busy Retry Count","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__xtremio_array_busy_retry_count","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"Password For San Controller","displayName":"San Password","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__san_password","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Backend Endpoint.","displayName":"Driver Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__driver_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"Username For San Controller","displayName":"San Login","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__san_login","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"Xms Cluster Id In Multi-Cluster Environment","displayName":"Xtremio Cluster Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__xtremio_cluster_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"Can Be Used To Specify A Non Default Path To A Ca_Bundle File Or Directory With Certificates Of Trusted Cas, Which Will Be Used To Validate The Backend","displayName":"Driver Ssl Cert Path","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__driver_ssl_cert_path","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"Should The Driver Remove Initiator Groups With No Volumes After The Last Connection Was Terminated. Since The Behavior Till Now Was To Leave The Ig Be, We Default To False (Not Deleting Igs Without Connected Volumes); Setting This Parameter To True Will Remove Any Ig After Terminating Its Connection To The Last Volume.","displayName":"Xtremio Clean Unused Ig","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__xtremio_clean_unused_ig","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"Interval Between Retries In Case Array Is Busy","displayName":"Xtremio Array Busy Retry Interval","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__xtremio_array_busy_retry_interval","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"Ip Address Of San Controller","displayName":"San Ip","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__XtremIOISCSI__san_ip","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:XtremIOISCSI"]},{"description":"Vpsa - Default Encryption Policy For Volumes","displayName":"Zadara Vol Encrypt","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_vol_encrypt","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Vpsa - Use Iser Instead Of Iscsi","displayName":"Zadara Use Iser","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_use_iser","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Vpsa - Attach Snapshot Policy For Volumes","displayName":"Zadara Default Snap Policy","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_default_snap_policy","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Vpsa - Use Ssl Connection","displayName":"Zadara Vpsa Use Ssl","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_vpsa_use_ssl","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Vpsa - Management Host Name Or Ip Address","displayName":"Zadara Vpsa Host","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_vpsa_host","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Vpsa - Storage Pool Assigned For Volumes","displayName":"Zadara Vpsa Poolname","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_vpsa_poolname","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"If Set To True The Http Client Will Validate The Ssl Certificate Of The Vpsa Endpoint.","displayName":"Zadara Ssl Cert Verify","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_ssl_cert_verify","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Vpsa - Port Number (min=0, max=65535)","displayName":"Zadara Vpsa Port","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_vpsa_port","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Vpsa Access Key","displayName":"Zadara Access Key","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_access_key","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:password","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Vpsa - Default Template For Vpsa Volume Names","displayName":"Zadara Vol Name Template","path":"config.envVars.X_CSI_BACKEND_CONFIG.driver__ZadaraVPSAISCSI__zadara_vol_name_template","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:fieldDependency:config.envVars.X_CSI_BACKEND_CONFIG.driver:ZadaraVPSAISCSI"]},{"description":"Backend name (set by operator if empty)","displayName":"Name","path":"config.envVars.X_CSI_BACKEND_CONFIG.name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"The unique name of the plugin (set by operator if empty)","displayName":"Plugin name","path":"config.envVars.X_CSI_EMBER_CONFIG.plugin_name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Number of gRPC workers for the CSI plugin","displayName":"gRPC workers","path":"config.envVars.X_CSI_EMBER_CONFIG.grpc_workers","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:number","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Allow keepalive pings when there are no gRPC calls","displayName":"Slow operations","path":"config.envVars.X_CSI_EMBER_CONFIG.slow_operations","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Get stats from the storage backend when the CSI plugin is probed","displayName":"Probe backend","path":"config.envVars.X_CSI_EMBER_CONFIG.enable_probe","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"List of features we want to disable on the plugin. Features that can be disabled are clone, snapshot, expand, expand_online. Must be a JSON list ie: [\"clone\", \"expand_online\"]'\n","displayName":"Disabled features","path":"config.envVars.X_CSI_EMBER_CONFIG.disabled__transform_csv","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Project ID to store in the persistence metadata backend","displayName":"Project ID","path":"config.envVars.X_CSI_EMBER_CONFIG.project_id","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"User ID to store in the persistence metadata backend","displayName":"User ID","path":"config.envVars.X_CSI_EMBER_CONFIG.user_id","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Disable all the logs in the CSI plugins","displayName":"Quiet","path":"config.envVars.X_CSI_EMBER_CONFIG.disable_logs","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Enabled debug log levels (quiet option must not be set)","displayName":"Debug logs","path":"config.envVars.X_CSI_EMBER_CONFIG.debug","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Enable remote debugging with rpdb on calls","displayName":"Remote debugging","path":"config.envVars.X_CSI_DEBUG_MODE","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:select:","urn:alm:descriptor:com.tectonic.ui:select:RPDB","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Default filesystem for mount type volumes when it is not specified","displayName":"Default filesystem","path":"config.envVars.X_CSI_DEFAULT_MOUNT_FS","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:select:btrfs","urn:alm:descriptor:com.tectonic.ui:select:cramfs","urn:alm:descriptor:com.tectonic.ui:select:ext2","urn:alm:descriptor:com.tectonic.ui:select:ext3","urn:alm:descriptor:com.tectonic.ui:select:ext4","urn:alm:descriptor:com.tectonic.ui:select:minix","urn:alm:descriptor:com.tectonic.ui:select:xfs","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Metadata persistence plugin selection and settings (must be valid JSON)","displayName":"Persistence","path":"config.envVars.X_CSI_PERSISTENCE_CONFIG","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:text","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Allow unsupported drivers to run","displayName":"Unsupported","path":"config.envVars.X_CSI_BACKEND_CONFIG.enable_unsupported_driver","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:com.tectonic.ui:checkbox","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"sysFiles secrets","displayName":"sysFiles secrets","path":"config.sysFiles.name","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:AdvancedSettings","urn:alm:descriptor:io.kubernetes:Secret","urn:alm:descriptor:com.tectonic.ui:advanced"]},{"description":"Use multipath if driver supports it","displayName":"Multipath","path":"config.envVars.X_CSI_BACKEND_CONFIG.multipath","x-descriptors":["urn:alm:descriptor:com.tectonic.ui:fieldGroup:DriverSettings","urn:alm:descriptor:com.tectonic.ui:checkbox"]}],"statusDescriptors":[{"description":"The installed Ember CSI version","displayName":"Version","path":"version"}],"version":"v1alpha1"}]},"description":"Ember-CSI is a multi-vendor CSI plugin driver supporting\nover 80 storage drivers in a single plugin to provide block and mount\nstorage to container orchestration systems.\n\nThe operator adds support for management of multiple Ember CSI instances\nwithin a cluster and simplifies storage backend deployments.\n\n### Supported drivers\nEmber-CSI includes a good number of storage drivers, but due to limitation on hardware availability only a small number of them have been validated at one point or another. In alphabetical order they are:\n\n* HPE3PARFC\n* HPE3PARISCSI\n* KaminarioISCSI\n* LVMVolume\n* PowerMaxFC\n* PowerMaxISCSI\n* PureFC\n* PureISCSI\n* QnapISCSI\n* RBD\n* SolidFire\n* SynoISCSI\n* XtremIOFC\n* XtremIOISCSI\n\n### Getting started\nPlease have a look at our quick start documentation on how to get started:\n[github.com/embercsi/ember-csi-operator#quick-start](https://github.com/embercsi/ember-csi-operator#quick-start).\nWe recommend to use the user friendly \"Edit Form\" when creating a new\nEmberStorageBackend. You'll find the link in the upper right corner of the\neditor.\n\n### Documentation\nDocumentation on Ember CSI itself can be found at [docs.ember-csi.io](http://docs.ember-csi.io/).\n\n### Getting help\nPlease contact us if you encounter any issues while using Ember CSI.\nGet in touch through the #ember-csi channel on Freenode, also accessible through\n[Kiwi IRC](https://kiwiirc.com/nextclient/irc.freenode.net/ember-csi).\n\nYou can also create an issue on the [Github project](https://github.com/embercsi/ember-csi-operator)\nfor bugs, enhancements, or other requests.\n","displayName":"Ember CSI Operator","icon":[{"base64data":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcKICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICB4bWxuczpjYz0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjIgogICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgdmlld0JveD0iMCAwIDEwNi41NDIzMiAxMzguNzkwODUiCiAgIGhlaWdodD0iMTM4Ljc5MDg1IgogICB3aWR0aD0iMTA2LjU0MjMyIgogICB4bWw6c3BhY2U9InByZXNlcnZlIgogICBpZD0ic3ZnNDc2NiIKICAgdmVyc2lvbj0iMS4xIj48bWV0YWRhdGEKICAgICBpZD0ibWV0YWRhdGE0NzcyIj48cmRmOlJERj48Y2M6V29yawogICAgICAgICByZGY6YWJvdXQ9IiI+PGRjOmZvcm1hdD5pbWFnZS9zdmcreG1sPC9kYzpmb3JtYXQ+PGRjOnR5cGUKICAgICAgICAgICByZGY6cmVzb3VyY2U9Imh0dHA6Ly9wdXJsLm9yZy9kYy9kY21pdHlwZS9TdGlsbEltYWdlIiAvPjxkYzp0aXRsZT48L2RjOnRpdGxlPjwvY2M6V29yaz48L3JkZjpSREY+PC9tZXRhZGF0YT48ZGVmcwogICAgIGlkPSJkZWZzNDc3MCI+PGNsaXBQYXRoCiAgICAgICBpZD0iY2xpcFBhdGg0NzgyIgogICAgICAgY2xpcFBhdGhVbml0cz0idXNlclNwYWNlT25Vc2UiPjxwYXRoCiAgICAgICAgIGlkPSJwYXRoNDc4MCIKICAgICAgICAgZD0iTSAwLDE1MCBIIDMwMCBWIDAgSCAwIFoiIC8+PC9jbGlwUGF0aD48L2RlZnM+PGcKICAgICB0cmFuc2Zvcm09Im1hdHJpeCgxLjMzMzMzMzMsMCwwLC0xLjMzMzMzMzMsLTEwMS45OTEyNSwxODIuNzI5MikiCiAgICAgaWQ9Imc0Nzc0Ij48ZwogICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTMzLjU1MzI1MikiCiAgICAgICBpZD0iZzQ5MzUiPjxnCiAgICAgICAgIGlkPSJnNDc4NCIKICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTQyLjAwMzksNzcuNjA3OSkiPjxwYXRoCiAgICAgICAgICAgZD0ibSAwLDAgYyAyLjY1NywtMC45ODMgMy4wOTgsLTIuNjA3IDMuOTE2LC00LjMxMiAwLjgxOCwtMS43MDUgMC44ODUsLTMuNjQxIDEuMTI0LC01LjUwOCAwLjIzOCwtMS44NjYgMC43MjYsLTMuODI3IDIuMTQ0LC01LjEyMSAxLjM3OSwtMS4yNTkgMy41NTUsLTEuNjUzIDUuMzQyLC0wLjk2OCAxLjc4NywwLjY4NyAzLjA5LDIuNDE1IDMuMTk4LDQuMjQ1IDAuMTE3LDEuOTgyIC0xLjI4NCw0LjgwMSAtMi42NSw2LjI4MiBDIDkuNzE5LC0xLjc0NCA1LjA4NSwtMC4zOTkgMCwwIgogICAgICAgICAgIHN0eWxlPSJmaWxsOiNlOWFhMjk7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmUiCiAgICAgICAgICAgaWQ9InBhdGg0Nzg2IiAvPjwvZz48ZwogICAgICAgICBpZD0iZzQ3ODgiCiAgICAgICAgIHRyYW5zZm9ybT0idHJhbnNsYXRlKDE4NS4xNDY1LDkwLjU5NTIpIj48cGF0aAogICAgICAgICAgIGQ9Im0gMCwwIGMgMy41MzMsLTYuMDk5IDUuMTQyLC0xMy4zNzQgNC43NDksLTIwLjU5NyAtMC41MiwtNy4yMDEgLTIuODkyLC0xNC40MzEgLTcuMjczLC0yMC4zNzUgLTEuMDA2LC0xLjU1MSAtMi4yODgsLTIuODgzIC0zLjQ4MiwtNC4yOTYgLTAuNjQxLC0wLjY2MyAtMS4zMzUsLTEuMjc1IC0yLjAwNSwtMS45MTQgLTAuMzQsLTAuMzE0IC0wLjY3LC0wLjYzOSAtMS4wMTksLTAuOTQyIGwgLTEuMDk3LC0wLjg1IGMgLTIuODU5LC0yLjM2NSAtNi4xNTEsLTQuMTYyIC05LjU1MiwtNS42NTMgbCAtMi42MSwtMC45OTMgYyAtMC44NzUsLTAuMzE4IC0xLjc5MywtMC41IC0yLjY5LC0wLjc1NCAtMS43ODYsLTAuNTUxIC0zLjY1MSwtMC43MTkgLTUuNDg3LC0xLjAzOCAtMy43MDIsLTAuMyAtNy40NjMsLTAuMzk4IC0xMS4xNDQsMC4yODYgbCAtMS4zODIsMC4yMTcgYyAtMC40NiwwLjA4IC0wLjkwNiwwLjIyNSAtMS4zNTksMC4zMzQgbCAtMi43MDcsMC43MTQgLTIuNjI2LDAuOTY3IGMgLTAuNDM2LDAuMTY3IC0wLjg3OCwwLjMxNyAtMS4zMDYsMC40OTkgbCAtMS4yNTgsMC42MTEgYyAtMy40MDYsMS41MjkgLTYuNDk5LDMuNjggLTkuMzIsNi4wODggbCAtMi4wMzQsMS45MDggYyAtMC42NjIsMC42NTEgLTEuMjQzLDEuMzggLTEuODY2LDIuMDY3IGwgLTAuOTE4LDEuMDQ2IGMgLTAuMjg3LDAuMzYzIC0wLjU1LDAuNzQ3IC0wLjgyNSwxLjEyIC0wLjUzOSwwLjc1NCAtMS4wOTcsMS40OTUgLTEuNjE2LDIuMjYgLTEuOTY0LDMuMTQyIC0zLjU4MSw2LjQ5OCAtNC42MTksMTAuMDQyIC0wLjk3NywzLjU0MyAtMS43MDMsNy4xODMgLTEuNjQyLDEwLjg0OCAtMC4wOTYsMy42NTEgMC4zOTcsNy4yOTggMS4zNDYsMTAuNzg5IDEuOTQyLDYuOTc0IDUuODQxLDEzLjMyNCAxMS4xMzksMTcuOTY2IC00LjQ4OCwtNS40MDkgLTcuNTY0LC0xMS44MTYgLTguNzQ2LC0xOC41MTcgLTAuNjE2LC0zLjMzNiAtMC44MjMsLTYuNzQ1IC0wLjQ2NSwtMTAuMDkxIDAuMTk5LC0zLjM1OCAxLjAwNiwtNi42MzUgMi4wNzQsLTkuNzc4IDQuNCwtMTIuNjE4IDE1Ljk1OCwtMjIuMTcyIDI4Ljk0MSwtMjQuMTYgMy4yMjMsLTAuNjQ3IDYuNTQyLC0wLjU3OSA5LjgxMiwtMC4zNjMgMS42MTcsMC4yNzUgMy4yNjgsMC4zODUgNC44NDUsMC44NjUgMC43OTEsMC4yMTggMS42MDYsMC4zNiAyLjM4LDAuNjM1IGwgMi4zMjgsMC44MTQgYyAzLjA0MywxLjIyMiA2LjAzMiwyLjcwNyA4LjY1LDQuNzQgbCAxLjAwOSwwLjcyNCBjIDAuMzIxLDAuMjYgMC42MjQsMC41NDMgMC45MzcsMC44MTQgbCAxLjg2NywxLjY0MiBjIDEuMTI5LDEuMjExIDIuMzY3LDIuMzQxIDMuMzQzLDMuNjk0IDQuMjE1LDUuMTc0IDYuODkzLDExLjU2OCA3Ljk0NywxOC4yNzcgQyAzLjMzOCwtMTMuNjE5IDIuNTI3LC02LjU2MiAwLDAiCiAgICAgICAgICAgc3R5bGU9ImZpbGw6I2UxNzUxYztmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZSIKICAgICAgICAgICBpZD0icGF0aDQ3OTAiIC8+PC9nPjxnCiAgICAgICAgIGlkPSJnNDc5MiIKICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTQ4LjIzNzMsNDYuNTY5MykiPjxwYXRoCiAgICAgICAgICAgZD0ibSAwLDAgYyAxLjU3MSwtMC4xNjIgMy4xNTQsLTAuMjA5IDQuNzMyLC0wLjEzIDMuMzQ0LDAuMTY3IDYuNjUsMC45MSA5LjczMywyLjIxOSAyLjMzMSwwLjk4OCA2LjI1LDIuNjcyIDcuNjMyLDQuODY1IDIuMjcsMy42MDMgMi4wODQsOS4yMSAxLjQ4MywxMy4yNTQgLTEuNDc5LDkuOTYyIC05Ljk4NCwxOC40NyAtMTkuNTQ1LDIxLjc4OSA0LjI4OSwtMS40ODggOC4zOSwtNS43MzkgMTAuNzAyLC05LjY3OSAyLjUxMywtNC4yOCAyLjUzOCwtOC43MTQgMC44MzgsLTEzLjEyIC0yLjE1OCwtNS41OTIgLTcuMTU5LC04LjgxMyAtMTMuMDk5LC04LjgxMyAtNy4xNCwwIC0xMy44NzMsNS45MTIgLTE0LjIzLDEzLjIyNyAtMC40MDIsOC4yMzkgNi41NjgsMTYuNDIxIDExLjI2OSwyMi40NzggMTMuNzc5LDE3Ljc1OCAyLjgsNDQuMzg0IDIuNzk4LDQ0LjM4NyBDIDEuNDk1LDgwLjk1MyAtMC44MjYsNzIuMDMgLTcuMDYzLDY0LjcyIC0xMi41Nyw1OC4yNjUgLTE5LjU4OCw1Mi45NzQgLTIzLjgwOCw0NS40OTMgYyAtMS45NzgsLTMuNTA2IC0zLjM1NiwtNy4zNzEgLTMuODc3LC0xMS44NzcgLTAuODQyLC03LjI2OSAwLjg5OCwtMTQuODE0IDUuMTEzLC0yMC44MjcgQyAtMTcuNDI2LDUuNDQ4IC04Ljg0MSwwLjkwNyAwLDAiCiAgICAgICAgICAgc3R5bGU9ImZpbGw6I2IxNDkyZTtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZSIKICAgICAgICAgICBpZD0icGF0aDQ3OTQiIC8+PC9nPjxnCiAgICAgICAgIGlkPSJnNDc5NiIKICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTQ5LjU5NDIsNDYuNDYxOSkiPjxwYXRoCiAgICAgICAgICAgZD0ibSAwLDAgYyAwLjM5LC0wLjAyMiAwLjc3OCwtMC4wNCAxLjE2NCwtMC4wNDkgLTkuNTg2LDQuMDM1IC0xNC4zMTEsMTEuNTQ3IC0xNS4zMDIsMjAuNDI5IC0wLjUwNiw0LjU0MSAwLjkxMyw4Ljg5MSAzLjI3OSwxMi42ODMgMi4zNjQsNC44NjIgNi4xMiw5LjQwMiA5LjAxNywxMy4xMzUgMTMuNzc5LDE3Ljc1NyAyLjgsNDQuMzg0IDIuNzk5LDQ0LjM4NiBDIDAuMTM4LDgxLjA2MSAtMi4xODMsNzIuMTM4IC04LjQyLDY0LjgyNyAtMTMuOTI3LDU4LjM3MyAtMjAuOTQ1LDUzLjA4MSAtMjUuMTY1LDQ1LjYgYyAtMS45NzgsLTMuNTA2IC0zLjM1NiwtNy4zNzEgLTMuODc3LC0xMS44NzYgLTAuODQyLC03LjI3IDAuODk4LC0xNC44MTUgNS4xMTMsLTIwLjgyOCBDIC0xOC43ODMsNS41NTYgLTEwLjE5OCwxLjAxNSAtMS4zNTcsMC4xMDcgLTAuOTQ5LDAuMDY1IC0wLjU0MywwLjAzMyAtMC4xNDEsMC4wMDggLTAuMDk0LDAuMDA1IC0wLjA0NywwLjAwMyAwLDAiCiAgICAgICAgICAgc3R5bGU9ImZpbGw6I2Q3NzIzMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZSIKICAgICAgICAgICBpZD0icGF0aDQ3OTgiIC8+PC9nPjxnCiAgICAgICAgIGlkPSJnNDgwMCIKICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTc0LjM5MjYsNTcuNDY4OCkiPjxwYXRoCiAgICAgICAgICAgZD0ibSAwLDAgYyA0LjQ5OSw1LjM3OCA1LjQ1NCwxMy45MzggNS40NDEsMTkuOTg4IC0wLjAxMiw2IC0xLjU1NywxMi4wNjEgLTUuMDM3LDE3LjI3NyAtMi44NTEsNC4yNzYgLTYuOTAxLDcuODcgLTEwLjI0LDExLjg4MSAtMy4zNCw0LjAxMiAtNi4wNDIsOC43NDggLTUuNTcsMTMuNjUxIC0yLjc5MiwtMy4wMDYgLTMuMzk0LC03LjAwNiAtMi42MTMsLTEwLjkyNCAwLjY4MywtMy40MjIgMi41MzcsLTYuNTczIDMuNzY4LC05Ljg0NCAwLjkxNywtMi40MzkgMS45MTUsLTQuODY2IDIuNDQ3LC03LjQyNiAwLjU4NSwtMi44MTYgMC4yOTMsLTUuMDQ1IC0wLjc1NSwtNy42NzkgMS41ODYsLTEuMzczIDMuMTYzLC0yLjk3NiA0LjI5NiwtNC43NTMgMS4xMzUsLTEuNzc3IDEuMzk4LC0zLjk1NCAyLjM5MiwtNS44MDQgMi4yNjYsLTQuMjIgMy4wMzcsLTkuMTE4IDIuNTQ2LC0xMy44OTgiCiAgICAgICAgICAgc3R5bGU9ImZpbGw6I2UwYTgzMjtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZSIKICAgICAgICAgICBpZD0icGF0aDQ4MDIiIC8+PC9nPjxnCiAgICAgICAgIGlkPSJnNDgwNCIKICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTYyLjc5OTgsMTAyLjU3MjMpIj48cGF0aAogICAgICAgICAgIGQ9Ik0gMCwwIEMgLTMuMjI5LDQuNjc4IC02LjkwOCwxMi4wMjggLTMuODEzLDE3LjY5NCAtNi42MDUsMTQuNjg4IC03LjIwNywxMC42ODcgLTYuNDI2LDYuNzcgYyAwLjY4MywtMy40MjMgMi41MzYsLTYuNTc0IDMuNzY4LC05Ljg0NSAwLjkxNywtMi40MzggMS45MTUsLTQuODY2IDIuNDQ3LC03LjQyNSAwLjU4NSwtMi44MTcgMC4yOTMsLTUuMDQ2IC0wLjc1NSwtNy42NzkgMS41ODYsLTEuMzc0IDMuMTYyLC0yLjk3NiA0LjI5NiwtNC43NTMgMS4xMzUsLTEuNzc4IDEuMzk4LC0zLjk1NCAyLjM5MiwtNS44MDQgMC4yMjEsLTAuNDEzIDAuNDI0LC0wLjgzNSAwLjYxOCwtMS4yNiBsIDEuMDcsLTAuMDYyIGMgMCwwIDIuMjc1LDcuOTYyIDEuMjcyLDE1LjE4MiBDIDcuODcsLTkuMDQzIDMuMjA2LC00LjY0NSAwLDAiCiAgICAgICAgICAgc3R5bGU9ImZpbGw6I2MzNTAyZTtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZSIKICAgICAgICAgICBpZD0icGF0aDQ4MDYiIC8+PC9nPjxnCiAgICAgICAgIGlkPSJnNDgwOCIKICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTUwLjc1ODMsNDYuNDEzMSkiPjxwYXRoCiAgICAgICAgICAgZD0ibSAwLDAgYyAwLDAgMTQuMTcsMy42OTEgMTYuNjY5LDE4Ljc5MyAyLjE4NiwxMy4yMDUgLTkuMTM3LDIxLjE4MyAtMTUuMTU1LDIzLjM2IDAsMCAxMy4xNzgsMC44OTggMjAuMTIxLC02Ljg0OSBDIDI4LjU3OSwyNy41NTggMjguMTEsMTkuMDg2IDI0LjI4OCwxMi4wNzEgMjAuMjIxLDQuNjA4IDkuMDE5LC0wLjY4MiAwLDAiCiAgICAgICAgICAgc3R5bGU9ImZpbGw6I2Q3NzIzMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZSIKICAgICAgICAgICBpZD0icGF0aDQ4MTAiIC8+PC9nPjxnCiAgICAgICAgIGlkPSJnNDgxMiIKICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTUwLjc1ODMsNDYuNDEzMSkiPjxwYXRoCiAgICAgICAgICAgZD0iTSAwLDAgQyAxNS42MTcsMS4zMyAyMy45ODksMTQuMDQxIDIxLjQ1MywyNi4yNDEgMTkuMDc1LDM3LjY3NyAxLjUxNCw0Mi4xNTMgMS41MTQsNDIuMTUzIDcuNTMyLDM5Ljk3NiAxOC44NTUsMzEuOTk4IDE2LjY2OSwxOC43OTMgMTQuMTcsMy42OTEgMCwwIDAsMCIKICAgICAgICAgICBzdHlsZT0iZmlsbDojZTBhODMyO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lIgogICAgICAgICAgIGlkPSJwYXRoNDgxNCIgLz48L2c+PGcKICAgICAgICAgaWQ9Imc0ODE2IgogICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMjcuNTkxMyw3Ni45MjI5KSI+PHBhdGgKICAgICAgICAgICBkPSJtIDAsMCBjIDEuMDk0LDkuMjEzIDcuMTk4LDE1LjYzIDEyLjk5LDIyLjQwMiA0LjgyMiw1LjYzOCA5LjA1NiwxMS45NTUgMTAuNTkzLDE5LjMxMyAxLjIzOCw1LjkzNSAxLjMsMTIuNTkgLTAuNjI0LDE4LjQwOSBDIDIyLjE0MSw1MC42IDE5LjgyLDQxLjY3NyAxMy41ODMsMzQuMzY2IDguMDc2LDI3LjkxMiAxLjA1OCwyMi42MiAtMy4xNjIsMTUuMTM5IC01LjE0LDExLjYzMyAtNi41MTgsNy43NjggLTcuMDM5LDMuMjYzIGMgLTAuODQyLC03LjI3IDAuODk4LC0xNC44MTUgNS4xMTMsLTIwLjgyNyA1LjE0NiwtNy4zNDEgMTMuNzMxLC0xMS44ODIgMjIuNTcyLC0xMi43OSAwLjQwOCwtMC4wNDIgMC44MTMsLTAuMDc0IDEuMjE2LC0wLjA5OSAwLjA0NywtMC4wMDMgMC4wOTQsLTAuMDA1IDAuMTQxLC0wLjAwOCAwLjM5LC0wLjAyMiAwLjc3OCwtMC4wNCAxLjE2NCwtMC4wNDkgLTYuNDU0LDAuODgzIC0xMi4yNTQsMy4xMjggLTE2LjQ2MSw3LjQ3IEMgMC45NTQsLTE3LjEwMyAtMC45NTEsLTguMDEgMCwwIgogICAgICAgICAgIHN0eWxlPSJmaWxsOiNlMGE4MzI7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmUiCiAgICAgICAgICAgaWQ9InBhdGg0ODE4IiAvPjwvZz48L2c+PC9nPjwvc3ZnPg==","mediatype":"image/svg+xml"}],"install":{"spec":{"clusterPermissions":[{"rules":[{"apiGroups":["security.openshift.io"],"resourceNames":["privileged","hostmount-anyuid"],"resources":["securitycontextconstraints"],"verbs":["use"]},{"apiGroups":["ember-csi.io"],"resources":["*"],"verbs":["*"]},{"apiGroups":["rbac.authorization.k8s.io"],"resources":["clusterrole","clusterrolebindings","role","rolebindings","serviceaccounts"],"verbs":["get","create","delete","patch","update"]},{"apiGroups":["apiextensions.k8s.io"],"resources":["customresourcedefinitions"],"verbs":["list","create"]},{"apiGroups":[""],"resources":["nodes","pods"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["secrets"],"verbs":["get","list"]},{"apiGroups":[""],"resources":["persistentvolumes"],"verbs":["create","delete","list","get","watch","update","patch"]},{"apiGroups":[""],"resources":["persistentvolumeclaims"],"verbs":["get","list","watch","update"]},{"apiGroups":[""],"resources":["persistentvolumeclaims/status"],"verbs":["update","patch"]},{"apiGroups":["storage.k8s.io"],"resources":["volumeattachments"],"verbs":["get","list","watch","update","delete","create","patch"]},{"apiGroups":["storage.k8s.io"],"resources":["volumeattachments/status"],"verbs":["patch"]},{"apiGroups":["storage.k8s.io"],"resources":["storageclasses","csinodes","csidrivers"],"verbs":["create","get","list","watch","update","delete"]},{"apiGroups":["*"],"resources":["events"],"verbs":["create","list","watch","update","delete","patch"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotclasses"],"verbs":["get","list","watch","create","update","delete"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotcontents"],"verbs":["create","get","list","watch","update","delete"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotcontents/status"],"verbs":["update"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshots"],"verbs":["get","list","watch","update"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshots/status"],"verbs":["update"]},{"apiGroups":["csi.storage.k8s.io"],"resources":["csidrivers"],"verbs":["create","get","list","watch","update","delete"]}],"serviceAccountName":"ember-csi-operator"}],"deployments":[{"name":"ember-csi-operator","spec":{"replicas":1,"selector":{"matchLabels":{"name":"ember-csi-operator"}},"strategy":{},"template":{"metadata":{"labels":{"name":"ember-csi-operator"}},"spec":{"containers":[{"command":["ember-csi-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"ember-csi-operator"}],"image":"quay.io/embercsi/ember-csi-operator:latest","imagePullPolicy":"Always","name":"ember-csi-operator","ports":[{"containerPort":60000,"name":"metrics"}],"readinessProbe":{"exec":{"command":["stat","/tmp/operator-sdk-ready"]},"failureThreshold":1,"initialDelaySeconds":4,"periodSeconds":10},"resources":{}}],"serviceAccountName":"ember-csi-operator"}}}}],"permissions":[{"rules":[{"apiGroups":[""],"resources":["pods","services","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["*"]},{"apiGroups":[""],"resources":["namespaces"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["*"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["get","create"]},{"apiGroups":["ember-csi.io"],"resources":["*"],"verbs":["*"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["get","watch","list","delete","update","create"]},{"apiGroups":["storage.k8s.io"],"resources":["csistoragecapacities"],"verbs":["get","list","watch","create","update","patch","delete"]}],"serviceAccountName":"ember-csi-operator"}]},"strategy":"deployment"},"installModes":[{"supported":true,"type":"OwnNamespace"},{"supported":true,"type":"SingleNamespace"},{"supported":true,"type":"MultiNamespace"},{"supported":false,"type":"AllNamespaces"}],"keywords":["Ember-CSI","CSI"],"labels":{"operated-by":"ember-csi.io"},"links":[{"name":"Learn more about the project","url":"http://ember-csi.io/"},{"name":"Documentation","url":"http://readthedocs.org/projects/ember-csi/"},{"name":"Ember-CSI Source Code","url":"https://github.com/embercsi/ember-csi"},{"name":"Ember-CSI Operator Source Code","url":"https://github.com/embercsi/ember-csi-operator"}],"maintainers":[{"email":"geguileo@redhat.com","name":"Gorka Eguileor"},{"email":"cschwede@redhat.com","name":"Christian Schwede"}],"maturity":"beta","minKubeVersion":"1.16.0","provider":{"name":"Red Hat"},"replaces":"ember-csi-community-operator.v0.9.8","selector":{"matchLabels":{"operated-by":"ember-csi.io"}},"version":"0.9.9"}}
relatedImages:
  - image: quay.io/embercsi/ember-csi-operator:latest
    name: ""
  - image: quay.io/openshift-community-operators/ember-csi-community-operator@sha256:5dce9b3018cfb300cd651c7980353cedc6617383d5c525e6a4a39ffb8e105774
    name: ""
schema: olm.bundle
