image: quay.io/openshift-community-operators/apicurio-registry@sha256:86e1713ae8c2baef90dd0c63b26b78d5575d93d23b419f2b5056007fd7451f59
name: apicurio-registry-operator.v1.0.0-v2.0.0.final
package: apicurio-registry
properties:
  - type: olm.gvk
    value:
      group: registry.apicur.io
      kind: ApicurioRegistry
      version: v1
  - type: olm.package
    value:
      packageName: apicurio-registry
      version: 1.0.0-v2.0.0.final
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwaWN1ci5pby9uYW1lIjoiYXBpY3VyaW8tcmVnaXN0cnktb3BlcmF0b3IiLCJhcGljdXIuaW8vdHlwZSI6Im9wZXJhdG9yIiwiYXBpY3VyLmlvL3ZlcnNpb24iOiIxLjAuMCJ9LCJuYW1lIjoiYXBpY3VyaW8tcmVnaXN0cnktb3BlcmF0b3IifX0=
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/apicurio/apicurio-registry-operator:1.0.0
    name: ""
  - image: quay.io/openshift-community-operators/apicurio-registry@sha256:86e1713ae8c2baef90dd0c63b26b78d5575d93d23b419f2b5056007fd7451f59
    name: ""
schema: olm.bundle
