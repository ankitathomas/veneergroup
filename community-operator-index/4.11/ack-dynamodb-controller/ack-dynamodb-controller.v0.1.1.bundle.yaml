image: quay.io/openshift-community-operators/ack-dynamodb-controller@sha256:a9d5c5356d012f2dca60853123e00870129517c391e85a533f340143b611beff
name: ack-dynamodb-controller.v0.1.1
package: ack-dynamodb-controller
properties:
  - type: olm.gvk
    value:
      group: dynamodb.services.k8s.aws
      kind: Backup
      version: v1alpha1
  - type: olm.gvk
    value:
      group: dynamodb.services.k8s.aws
      kind: GlobalTable
      version: v1alpha1
  - type: olm.gvk
    value:
      group: dynamodb.services.k8s.aws
      kind: Table
      version: v1alpha1
  - type: olm.package
    value:
      packageName: ack-dynamodb-controller
      version: 0.1.1
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYWNrLWR5bmFtb2RiLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoibWV0cmljc3BvcnQiLCJwb3J0Ijo4MDgwLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlciJ9LCJ0eXBlIjoiTm9kZVBvcnQifSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJhY2stZHluYW1vZGItcmVhZGVyIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiZHluYW1vZGIuc2VydmljZXMuazhzLmF3cyJdLCJyZXNvdXJjZXMiOlsiYmFja3VwcyIsImdsb2JhbHRhYmxlcyIsInRhYmxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJhY2stZHluYW1vZGItd3JpdGVyIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiZHluYW1vZGIuc2VydmljZXMuazhzLmF3cyJdLCJyZXNvdXJjZXMiOlsiYmFja3VwcyIsImdsb2JhbHRhYmxlcyIsInRhYmxlcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJkeW5hbW9kYi5zZXJ2aWNlcy5rOHMuYXdzIl0sInJlc291cmNlcyI6WyJiYWNrdXBzIiwiZ2xvYmFsdGFibGVzIiwidGFibGVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjcuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImJhY2t1cHMuZHluYW1vZGIuc2VydmljZXMuazhzLmF3cyJ9LCJzcGVjIjp7Imdyb3VwIjoiZHluYW1vZGIuc2VydmljZXMuazhzLmF3cyIsIm5hbWVzIjp7ImtpbmQiOiJCYWNrdXAiLCJsaXN0S2luZCI6IkJhY2t1cExpc3QiLCJwbHVyYWwiOiJiYWNrdXBzIiwic2luZ3VsYXIiOiJiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIEJhY2t1cHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgQmFja3VwLiIsInByb3BlcnRpZXMiOnsiYmFja3VwTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZmllZCBuYW1lIGZvciB0aGUgYmFja3VwLiIsInR5cGUiOiJzdHJpbmcifSwidGFibGVOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHRhYmxlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImJhY2t1cE5hbWUiLCJ0YWJsZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQmFja3VwIiwicHJvcGVydGllcyI6eyJhY2tSZXNvdXJjZU1ldGFkYXRhIjp7ImRlc2NyaXB0aW9uIjoiQWxsIENScyBtYW5hZ2VkIGJ5IEFDSyBoYXZlIGEgY29tbW9uIGBTdGF0dXMuQUNLUmVzb3VyY2VNZXRhZGF0YWAgbWVtYmVyIHRoYXQgaXMgdXNlZCB0byBjb250YWluIHJlc291cmNlIHN5bmMgc3RhdGUsIGFjY291bnQgb3duZXJzaGlwLCBjb25zdHJ1Y3RlZCBBUk4gZm9yIHRoZSByZXNvdXJjZSIsInByb3BlcnRpZXMiOnsiYXJuIjp7ImRlc2NyaXB0aW9uIjoiQVJOIGlzIHRoZSBBbWF6b24gUmVzb3VyY2UgTmFtZSBmb3IgdGhlIHJlc291cmNlLiBUaGlzIGlzIGEgZ2xvYmFsbHktdW5pcXVlIGlkZW50aWZpZXIgYW5kIGlzIHNldCBvbmx5IGJ5IHRoZSBBQ0sgc2VydmljZSBjb250cm9sbGVyIG9uY2UgdGhlIGNvbnRyb2xsZXIgaGFzIG9yY2hlc3RyYXRlZCB0aGUgY3JlYXRpb24gb2YgdGhlIHJlc291cmNlIE9SIHdoZW4gaXQgaGFzIHZlcmlmaWVkIHRoYXQgYW4gXCJhZG9wdGVkXCIgcmVzb3VyY2UgKGEgcmVzb3VyY2Ugd2hlcmUgdGhlIEFSTiBhbm5vdGF0aW9uIHdhcyBzZXQgYnkgdGhlIEt1YmVybmV0ZXMgdXNlciBvbiB0aGUgQ1IpIGV4aXN0cyBhbmQgbWF0Y2hlcyB0aGUgc3VwcGxpZWQgQ1IncyBTcGVjIGZpZWxkIHZhbHVlcy4gVE9ETyh2aWphdEApOiBGaW5kIGEgYmV0dGVyIHN0cmF0ZWd5IGZvciByZXNvdXJjZXMgdGhhdCBkbyBub3QgaGF2ZSBBUk4gaW4gQ3JlYXRlT3V0cHV0UmVzcG9uc2UgaHR0cHM6Ly9naXRodWIuY29tL2F3cy9hd3MtY29udHJvbGxlcnMtazhzL2lzc3Vlcy8yNzAiLCJ0eXBlIjoic3RyaW5nIn0sIm93bmVyQWNjb3VudElEIjp7ImRlc2NyaXB0aW9uIjoiT3duZXJBY2NvdW50SUQgaXMgdGhlIEFXUyBBY2NvdW50IElEIG9mIHRoZSBhY2NvdW50IHRoYXQgb3ducyB0aGUgYmFja2VuZCBBV1Mgc2VydmljZSBBUEkgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJyZWdpb24iOnsiZGVzY3JpcHRpb24iOiJSZWdpb24gaXMgdGhlIEFXUyByZWdpb24gaW4gd2hpY2ggdGhlIHJlc291cmNlIGV4aXN0cyBvciB3aWxsIGV4aXN0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm93bmVyQWNjb3VudElEIiwicmVnaW9uIl0sInR5cGUiOiJvYmplY3QifSwiYmFja3VwQ3JlYXRpb25EYXRlVGltZSI6eyJkZXNjcmlwdGlvbiI6IlRpbWUgYXQgd2hpY2ggdGhlIGJhY2t1cCB3YXMgY3JlYXRlZC4gVGhpcyBpcyB0aGUgcmVxdWVzdCB0aW1lIG9mIHRoZSBiYWNrdXAuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJiYWNrdXBFeHBpcnlEYXRlVGltZSI6eyJkZXNjcmlwdGlvbiI6IlRpbWUgYXQgd2hpY2ggdGhlIGF1dG9tYXRpYyBvbi1kZW1hbmQgYmFja3VwIGNyZWF0ZWQgYnkgRHluYW1vREIgd2lsbCBleHBpcmUuIFRoaXMgU1lTVEVNIG9uLWRlbWFuZCBiYWNrdXAgZXhwaXJlcyBhdXRvbWF0aWNhbGx5IDM1IGRheXMgYWZ0ZXIgaXRzIGNyZWF0aW9uLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwiYmFja3VwU2l6ZUJ5dGVzIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBvZiB0aGUgYmFja3VwIGluIGJ5dGVzLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwiYmFja3VwU3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQmFja3VwIGNhbiBiZSBpbiBvbmUgb2YgdGhlIGZvbGxvd2luZyBzdGF0ZXM6IENSRUFUSU5HLCBBQ1RJVkUsIERFTEVURUQuIiwidHlwZSI6InN0cmluZyJ9LCJiYWNrdXBUeXBlIjp7ImRlc2NyaXB0aW9uIjoiQmFja3VwVHlwZTogXG4gICAgKiBVU0VSIC0gWW91IGNyZWF0ZSBhbmQgbWFuYWdlIHRoZXNlIHVzaW5nIHRoZSBvbi1kZW1hbmQgYmFja3VwIGZlYXR1cmUuIFxuICAgICogU1lTVEVNIC0gSWYgeW91IGRlbGV0ZSBhIHRhYmxlIHdpdGggcG9pbnQtaW4tdGltZSByZWNvdmVyeSBlbmFibGVkLCAgICBhIFNZU1RFTSBiYWNrdXAgaXMgYXV0b21hdGljYWxseSBjcmVhdGVkIGFuZCBpcyByZXRhaW5lZCBmb3IgMzUgZGF5cyAoYXQgICAgbm8gYWRkaXRpb25hbCBjb3N0KS4gU3lzdGVtIGJhY2t1cHMgYWxsb3cgeW91IHRvIHJlc3RvcmUgdGhlIGRlbGV0ZWQgdGFibGUgICAgdG8gdGhlIHN0YXRlIGl0IHdhcyBpbiBqdXN0IGJlZm9yZSB0aGUgcG9pbnQgb2YgZGVsZXRpb24uIFxuICAgICogQVdTX0JBQ0tVUCAtIE9uLWRlbWFuZCBiYWNrdXAgY3JlYXRlZCBieSB5b3UgZnJvbSBBV1MgQmFja3VwIHNlcnZpY2UuIiwidHlwZSI6InN0cmluZyJ9LCJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQWxsIENSUyBtYW5hZ2VkIGJ5IEFDSyBoYXZlIGEgY29tbW9uIGBTdGF0dXMuQ29uZGl0aW9uc2AgbWVtYmVyIHRoYXQgY29udGFpbnMgYSBjb2xsZWN0aW9uIG9mIGBhY2t2MWFscGhhMS5Db25kaXRpb25gIG9iamVjdHMgdGhhdCBkZXNjcmliZSB0aGUgdmFyaW91cyB0ZXJtaW5hbCBzdGF0ZXMgb2YgdGhlIENSIGFuZCBpdHMgYmFja2VuZCBBV1Mgc2VydmljZSBBUEkgcmVzb3VyY2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBpcyB0aGUgY29tbW9uIHN0cnVjdCB1c2VkIGJ5IGFsbCBDUkRzIG1hbmFnZWQgYnkgQUNLIHNlcnZpY2UgY29udHJvbGxlcnMgdG8gaW5kaWNhdGUgdGVybWluYWwgc3RhdGVzICBvZiB0aGUgQ1IgYW5kIGl0cyBiYWNrZW5kIEFXUyBzZXJ2aWNlIEFQSSByZXNvdXJjZSIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiBUcnVlLCBGYWxzZSwgVW5rbm93bi4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGlzIHRoZSB0eXBlIG9mIHRoZSBDb25kaXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjcuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Imdsb2JhbHRhYmxlcy5keW5hbW9kYi5zZXJ2aWNlcy5rOHMuYXdzIn0sInNwZWMiOnsiZ3JvdXAiOiJkeW5hbW9kYi5zZXJ2aWNlcy5rOHMuYXdzIiwibmFtZXMiOnsia2luZCI6Ikdsb2JhbFRhYmxlIiwibGlzdEtpbmQiOiJHbG9iYWxUYWJsZUxpc3QiLCJwbHVyYWwiOiJnbG9iYWx0YWJsZXMiLCJzaW5ndWxhciI6Imdsb2JhbHRhYmxlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiR2xvYmFsVGFibGUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIEdsb2JhbFRhYmxlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ikdsb2JhbFRhYmxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEdsb2JhbFRhYmxlLiBcbiBSZXByZXNlbnRzIHRoZSBwcm9wZXJ0aWVzIG9mIGEgZ2xvYmFsIHRhYmxlLiIsInByb3BlcnRpZXMiOnsiZ2xvYmFsVGFibGVOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGdsb2JhbCB0YWJsZSBuYW1lLiIsInR5cGUiOiJzdHJpbmcifSwicmVwbGljYXRpb25Hcm91cCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBSZWdpb25zIHdoZXJlIHRoZSBnbG9iYWwgdGFibGUgbmVlZHMgdG8gYmUgY3JlYXRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgdGhlIHByb3BlcnRpZXMgb2YgYSByZXBsaWNhLiIsInByb3BlcnRpZXMiOnsicmVnaW9uTmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsiZ2xvYmFsVGFibGVOYW1lIiwicmVwbGljYXRpb25Hcm91cCJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ikdsb2JhbFRhYmxlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEdsb2JhbFRhYmxlIiwicHJvcGVydGllcyI6eyJhY2tSZXNvdXJjZU1ldGFkYXRhIjp7ImRlc2NyaXB0aW9uIjoiQWxsIENScyBtYW5hZ2VkIGJ5IEFDSyBoYXZlIGEgY29tbW9uIGBTdGF0dXMuQUNLUmVzb3VyY2VNZXRhZGF0YWAgbWVtYmVyIHRoYXQgaXMgdXNlZCB0byBjb250YWluIHJlc291cmNlIHN5bmMgc3RhdGUsIGFjY291bnQgb3duZXJzaGlwLCBjb25zdHJ1Y3RlZCBBUk4gZm9yIHRoZSByZXNvdXJjZSIsInByb3BlcnRpZXMiOnsiYXJuIjp7ImRlc2NyaXB0aW9uIjoiQVJOIGlzIHRoZSBBbWF6b24gUmVzb3VyY2UgTmFtZSBmb3IgdGhlIHJlc291cmNlLiBUaGlzIGlzIGEgZ2xvYmFsbHktdW5pcXVlIGlkZW50aWZpZXIgYW5kIGlzIHNldCBvbmx5IGJ5IHRoZSBBQ0sgc2VydmljZSBjb250cm9sbGVyIG9uY2UgdGhlIGNvbnRyb2xsZXIgaGFzIG9yY2hlc3RyYXRlZCB0aGUgY3JlYXRpb24gb2YgdGhlIHJlc291cmNlIE9SIHdoZW4gaXQgaGFzIHZlcmlmaWVkIHRoYXQgYW4gXCJhZG9wdGVkXCIgcmVzb3VyY2UgKGEgcmVzb3VyY2Ugd2hlcmUgdGhlIEFSTiBhbm5vdGF0aW9uIHdhcyBzZXQgYnkgdGhlIEt1YmVybmV0ZXMgdXNlciBvbiB0aGUgQ1IpIGV4aXN0cyBhbmQgbWF0Y2hlcyB0aGUgc3VwcGxpZWQgQ1IncyBTcGVjIGZpZWxkIHZhbHVlcy4gVE9ETyh2aWphdEApOiBGaW5kIGEgYmV0dGVyIHN0cmF0ZWd5IGZvciByZXNvdXJjZXMgdGhhdCBkbyBub3QgaGF2ZSBBUk4gaW4gQ3JlYXRlT3V0cHV0UmVzcG9uc2UgaHR0cHM6Ly9naXRodWIuY29tL2F3cy9hd3MtY29udHJvbGxlcnMtazhzL2lzc3Vlcy8yNzAiLCJ0eXBlIjoic3RyaW5nIn0sIm93bmVyQWNjb3VudElEIjp7ImRlc2NyaXB0aW9uIjoiT3duZXJBY2NvdW50SUQgaXMgdGhlIEFXUyBBY2NvdW50IElEIG9mIHRoZSBhY2NvdW50IHRoYXQgb3ducyB0aGUgYmFja2VuZCBBV1Mgc2VydmljZSBBUEkgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJyZWdpb24iOnsiZGVzY3JpcHRpb24iOiJSZWdpb24gaXMgdGhlIEFXUyByZWdpb24gaW4gd2hpY2ggdGhlIHJlc291cmNlIGV4aXN0cyBvciB3aWxsIGV4aXN0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm93bmVyQWNjb3VudElEIiwicmVnaW9uIl0sInR5cGUiOiJvYmplY3QifSwiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkFsbCBDUlMgbWFuYWdlZCBieSBBQ0sgaGF2ZSBhIGNvbW1vbiBgU3RhdHVzLkNvbmRpdGlvbnNgIG1lbWJlciB0aGF0IGNvbnRhaW5zIGEgY29sbGVjdGlvbiBvZiBgYWNrdjFhbHBoYTEuQ29uZGl0aW9uYCBvYmplY3RzIHRoYXQgZGVzY3JpYmUgdGhlIHZhcmlvdXMgdGVybWluYWwgc3RhdGVzIG9mIHRoZSBDUiBhbmQgaXRzIGJhY2tlbmQgQVdTIHNlcnZpY2UgQVBJIHJlc291cmNlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb24gaXMgdGhlIGNvbW1vbiBzdHJ1Y3QgdXNlZCBieSBhbGwgQ1JEcyBtYW5hZ2VkIGJ5IEFDSyBzZXJ2aWNlIGNvbnRyb2xsZXJzIHRvIGluZGljYXRlIHRlcm1pbmFsIHN0YXRlcyAgb2YgdGhlIENSIGFuZCBpdHMgYmFja2VuZCBBV1Mgc2VydmljZSBBUEkgcmVzb3VyY2UiLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHRoZSB0cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBpcyB0aGUgdHlwZSBvZiB0aGUgQ29uZGl0aW9uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJjcmVhdGlvbkRhdGVUaW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGNyZWF0aW9uIHRpbWUgb2YgdGhlIGdsb2JhbCB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImdsb2JhbFRhYmxlU3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGdsb2JhbCB0YWJsZTogXG4gICAgKiBDUkVBVElORyAtIFRoZSBnbG9iYWwgdGFibGUgaXMgYmVpbmcgY3JlYXRlZC4gXG4gICAgKiBVUERBVElORyAtIFRoZSBnbG9iYWwgdGFibGUgaXMgYmVpbmcgdXBkYXRlZC4gXG4gICAgKiBERUxFVElORyAtIFRoZSBnbG9iYWwgdGFibGUgaXMgYmVpbmcgZGVsZXRlZC4gXG4gICAgKiBBQ1RJVkUgLSBUaGUgZ2xvYmFsIHRhYmxlIGlzIHJlYWR5IGZvciB1c2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: public.ecr.aws/aws-controllers-k8s/dynamodb-controller:v0.1.1
    name: ""
  - image: quay.io/openshift-community-operators/ack-dynamodb-controller@sha256:a9d5c5356d012f2dca60853123e00870129517c391e85a533f340143b611beff
    name: ""
schema: olm.bundle
