image: quay.io/openshift-community-operators/klusterlet@sha256:d164430f558dd0e547fd5e4b96f0be2281921e12c5c5cbcb4fc355601531d54c
name: klusterlet.v0.7.0
package: klusterlet
properties:
  - type: olm.gvk
    value:
      group: operator.open-cluster-management.io
      kind: Klusterlet
      version: v1
  - type: olm.package
    value:
      packageName: klusterlet
      version: 0.7.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/open-cluster-management/registration-operator:v0.7.0
    name: ""
  - image: quay.io/openshift-community-operators/klusterlet@sha256:d164430f558dd0e547fd5e4b96f0be2281921e12c5c5cbcb4fc355601531d54c
    name: ""
schema: olm.bundle
