image: quay.io/openshift-community-operators/percona-xtradb-cluster-operator@sha256:4a2a956e2df9d4848680a2e5528096632da21cc87921e96d2beb138f2442536e
name: percona-xtradb-cluster-operator.v1.10.0
package: percona-xtradb-cluster-operator
properties:
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBBackup
      version: v1alpha1
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-1-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-10-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-2-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-3-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-4-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-5-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-6-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-7-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-8-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1-9-0
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBCluster
      version: v1alpha1
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBClusterBackup
      version: v1
  - type: olm.gvk
    value:
      group: pxc.percona.com
      kind: PerconaXtraDBClusterRestore
      version: v1
  - type: olm.package
    value:
      packageName: percona-xtradb-cluster-operator
      version: 1.10.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJiYWNrdXBzLnB4Yy5wZXJjb25hLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoicHhjLnBlcmNvbmEuY29tIiwibmFtZXMiOnsia2luZCI6IlBlcmNvbmFYdHJhREJCYWNrdXAiLCJsaXN0S2luZCI6IlBlcmNvbmFYdHJhREJCYWNrdXBMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiYmFja3VwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlciBuYW1lIiwianNvblBhdGgiOiIuc3BlYy5weGNDbHVzdGVyIiwibmFtZSI6IkNsdXN0ZXIiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2UgbmFtZSBmcm9tIHB4YyBzcGVjIiwianNvblBhdGgiOiIuc3RhdHVzLnN0b3JhZ2VOYW1lIiwibmFtZSI6IlN0b3JhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkJhY2t1cCBkZXN0aW5hdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5kZXN0aW5hdGlvbiIsIm5hbWUiOiJEZXN0aW5hdGlvbiIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiSm9iIHN0YXR1cyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkNvbXBsZXRlZCB0aW1lIiwianNvblBhdGgiOiIuc3RhdHVzLmNvbXBsZXRlZCIsIm5hbWUiOiJDb21wbGV0ZWQiLCJ0eXBlIjoiZGF0ZSJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJjbHVzdGVyYmFja3Vwcy5weGMucGVyY29uYS5jb20ifSwic3BlYyI6eyJncm91cCI6InB4Yy5wZXJjb25hLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlckJhY2t1cCIsImxpc3RLaW5kIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJCYWNrdXBMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJiYWNrdXBzIiwic2hvcnROYW1lcyI6WyJweGMtYmFja3VwIiwicHhjLWJhY2t1cHMiXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiY2x1c3RlcmJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXIgbmFtZSIsImpzb25QYXRoIjoiLnNwZWMucHhjQ2x1c3RlciIsIm5hbWUiOiJDbHVzdGVyIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJTdG9yYWdlIG5hbWUgZnJvbSBweGMgc3BlYyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdG9yYWdlTmFtZSIsIm5hbWUiOiJTdG9yYWdlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJCYWNrdXAgZGVzdGluYXRpb24iLCJqc29uUGF0aCI6Ii5zdGF0dXMuZGVzdGluYXRpb24iLCJuYW1lIjoiRGVzdGluYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkpvYiBzdGF0dXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJDb21wbGV0ZWQgdGltZSIsImpzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0ZWQiLCJuYW1lIjoiQ29tcGxldGVkIiwidHlwZSI6ImRhdGUifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsic3BlYyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwic3RhdHVzIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJjbHVzdGVycmVzdG9yZXMucHhjLnBlcmNvbmEuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJweGMucGVyY29uYS5jb20iLCJuYW1lcyI6eyJraW5kIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJSZXN0b3JlIiwibGlzdEtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlclJlc3RvcmVMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJyZXN0b3JlcyIsInNob3J0TmFtZXMiOlsicHhjLXJlc3RvcmUiLCJweGMtcmVzdG9yZXMiXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiY2x1c3RlcnJlc3RvcmUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDbHVzdGVyIG5hbWUiLCJqc29uUGF0aCI6Ii5zcGVjLnB4Y0NsdXN0ZXIiLCJuYW1lIjoiQ2x1c3RlciIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiSm9iIHN0YXR1cyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkNvbXBsZXRlZCB0aW1lIiwianNvblBhdGgiOiIuc3RhdHVzLmNvbXBsZXRlZCIsIm5hbWUiOiJDb21wbGV0ZWQiLCJ0eXBlIjoiZGF0ZSJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: percona/percona-xtradb-cluster-operator:1.10.0
    name: ""
  - image: quay.io/openshift-community-operators/percona-xtradb-cluster-operator@sha256:4a2a956e2df9d4848680a2e5528096632da21cc87921e96d2beb138f2442536e
    name: ""
schema: olm.bundle
