image: quay.io/openshift-community-operators/hive-operator@sha256:804b3e83c1afa7b899c1939b922fc21d0dfdb54b0ed8b7952bd1a18f4dbbc839
name: hive-operator.v1.1.13
package: hive-operator
properties:
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: Checkpoint
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: ClusterClaim
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: ClusterDeployment
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: ClusterDeprovision
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: ClusterImageSet
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: ClusterPool
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: ClusterProvision
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: ClusterRelocate
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: ClusterState
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: DNSZone
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: HiveConfig
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: MachinePool
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: MachinePoolNameLease
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: SelectorSyncIdentityProvider
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: SelectorSyncSet
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: SyncIdentityProvider
      version: v1
  - type: olm.gvk
    value:
      group: hive.openshift.io
      kind: SyncSet
      version: v1
  - type: olm.gvk
    value:
      group: hiveinternal.openshift.io
      kind: ClusterSync
      version: v1alpha1
  - type: olm.gvk
    value:
      group: hiveinternal.openshift.io
      kind: ClusterSyncLease
      version: v1alpha1
  - type: olm.gvk
    value:
      group: hiveinternal.openshift.io
      kind: FakeClusterInstall
      version: v1alpha1
  - type: olm.package
    value:
      packageName: hive-operator
      version: 1.1.13
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNoZWNrcG9pbnRzLmhpdmUub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJoaXZlLm9wZW5zaGlmdC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJDaGVja3BvaW50IiwibGlzdEtpbmQiOiJDaGVja3BvaW50TGlzdCIsInBsdXJhbCI6ImNoZWNrcG9pbnRzIiwic2luZ3VsYXIiOiJjaGVja3BvaW50In0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2hlY2twb2ludCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgYmFja3VwIG9mIEhpdmUgb2JqZWN0cy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNoZWNrcG9pbnRTcGVjIGRlZmluZXMgdGhlIG1ldGFkYXRhIGFyb3VuZCB0aGUgSGl2ZSBvYmplY3RzIHN0YXRlIGluIHRoZSBuYW1lc3BhY2UgYXQgdGhlIHRpbWUgb2YgdGhlIGxhc3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsibGFzdEJhY2t1cENoZWNrc3VtIjp7ImRlc2NyaXB0aW9uIjoiTGFzdEJhY2t1cENoZWNrc3VtIGlzIHRoZSBjaGVja3N1bSBvZiBhbGwgSGl2ZSBvYmplY3RzIGluIHRoZSBuYW1lc3BhY2UgYXQgdGhlIHRpbWUgb2YgdGhlIGxhc3QgYmFja3VwLiIsInR5cGUiOiJzdHJpbmcifSwibGFzdEJhY2t1cFJlZiI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RCYWNrdXBSZWYgaXMgYSByZWZlcmVuY2UgdG8gbGFzdCBiYWNrdXAgb2JqZWN0IGNyZWF0ZWQiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSIsIm5hbWVzcGFjZSJdLCJ0eXBlIjoib2JqZWN0In0sImxhc3RCYWNrdXBUaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdEJhY2t1cFRpbWUgaXMgdGhlIGxhc3QgdGltZSB3ZSBwZXJmb3JtZWQgYSBiYWNrdXAgb2YgdGhlIG5hbWVzcGFjZSIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RCYWNrdXBDaGVja3N1bSIsImxhc3RCYWNrdXBSZWYiLCJsYXN0QmFja3VwVGltZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNoZWNrcG9pbnRTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQ2hlY2twb2ludCIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNsdXN0ZXJjbGFpbXMuaGl2ZS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImhpdmUub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6IkNsdXN0ZXJDbGFpbSIsImxpc3RLaW5kIjoiQ2x1c3RlckNsYWltTGlzdCIsInBsdXJhbCI6ImNsdXN0ZXJjbGFpbXMiLCJzaW5ndWxhciI6ImNsdXN0ZXJjbGFpbSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLmNsdXN0ZXJQb29sTmFtZSIsIm5hbWUiOiJQb29sIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmNvbmRpdGlvbnNbPyhALnR5cGU9PSdQZW5kaW5nJyldLnJlYXNvbiIsIm5hbWUiOiJQZW5kaW5nIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5uYW1lc3BhY2UiLCJuYW1lIjoiQ2x1c3Rlck5hbWVzcGFjZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5jb25kaXRpb25zWz8oQC50eXBlPT0nQ2x1c3RlclJ1bm5pbmcnKV0ucmVhc29uIiwibmFtZSI6IkNsdXN0ZXJSdW5uaW5nIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyQ2xhaW0gcmVwcmVzZW50cyBhIGNsYWltIHRvIGEgY2x1c3RlciBmcm9tIGEgY2x1c3RlciBwb29sLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlckNsYWltU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSBDbHVzdGVyQ2xhaW0uIiwicHJvcGVydGllcyI6eyJjbHVzdGVyUG9vbE5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyUG9vbE5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIGNsdXN0ZXIgcG9vbCBmcm9tIHdoaWNoIHRvIGNsYWltIGEgY2x1c3Rlci4iLCJ0eXBlIjoic3RyaW5nIn0sImxpZmV0aW1lIjp7ImRlc2NyaXB0aW9uIjoiTGlmZXRpbWUgaXMgdGhlIG1heGltdW0gbGlmZXRpbWUgb2YgdGhlIGNsYWltIGFmdGVyIGl0IGlzIGFzc2lnbmVkIGEgY2x1c3Rlci4gSWYgdGhlIGNsYWltIHN0aWxsIGV4aXN0cyB3aGVuIHRoZSBsaWZldGltZSBoYXMgZWxhcHNlZCwgdGhlIGNsYWltIHdpbGwgYmUgZGVsZXRlZCBieSBIaXZlLiBUaGlzIGlzIGEgRHVyYXRpb24gdmFsdWU7IHNlZSBodHRwczovL3BrZy5nby5kZXYvdGltZSNQYXJzZUR1cmF0aW9uIGZvciBhY2NlcHRlZCBmb3JtYXRzLiIsImZvcm1hdCI6ImR1cmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2UgaXMgdGhlIG5hbWVzcGFjZSBjb250YWluaW5nIHRoZSBDbHVzdGVyRGVwbG95bWVudCAobmFtZSB3aWxsIG1hdGNoIHRoZSBuYW1lc3BhY2UpIG9mIHRoZSBjbGFpbWVkIGNsdXN0ZXIuIFRoaXMgZmllbGQgd2lsbCBiZSBzZXQgYXMgc29vbiBhcyBhIHN1aXRhYmxlIGNsdXN0ZXIgY2FuIGJlIGZvdW5kLCBob3dldmVyIHRoYXQgY2x1c3RlciBtYXkgc3RpbGwgYmUgcmVzdW1pbmcgYW5kIG5vdCB5ZXQgcmVhZHkgZm9yIHVzZS4gV2FpdCBmb3IgdGhlIENsdXN0ZXJSdW5uaW5nIGNvbmRpdGlvbiB0byBiZSB0cnVlIHRvIGF2b2lkIHRoaXMgaXNzdWUuIiwidHlwZSI6InN0cmluZyJ9LCJzdWJqZWN0cyI6eyJkZXNjcmlwdGlvbiI6IlN1YmplY3RzIGhvbGQgcmVmZXJlbmNlcyB0byB3aGljaCB0byBhdXRob3JpemUgYWNjZXNzIHRvIHRoZSBjbGFpbWVkIGNsdXN0ZXIuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJTdWJqZWN0IGNvbnRhaW5zIGEgcmVmZXJlbmNlIHRvIHRoZSBvYmplY3Qgb3IgdXNlciBpZGVudGl0aWVzIGEgcm9sZSBiaW5kaW5nIGFwcGxpZXMgdG8uICBUaGlzIGNhbiBlaXRoZXIgaG9sZCBhIGRpcmVjdCBBUEkgb2JqZWN0IHJlZmVyZW5jZSwgb3IgYSB2YWx1ZSBmb3Igbm9uLW9iamVjdHMgc3VjaCBhcyB1c2VyIGFuZCBncm91cCBuYW1lcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaUdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiQVBJR3JvdXAgaG9sZHMgdGhlIEFQSSBncm91cCBvZiB0aGUgcmVmZXJlbmNlZCBzdWJqZWN0LiBEZWZhdWx0cyB0byBcIlwiIGZvciBTZXJ2aWNlQWNjb3VudCBzdWJqZWN0cy4gRGVmYXVsdHMgdG8gXCJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvXCIgZm9yIFVzZXIgYW5kIEdyb3VwIHN1YmplY3RzLiIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2Ygb2JqZWN0IGJlaW5nIHJlZmVyZW5jZWQuIFZhbHVlcyBkZWZpbmVkIGJ5IHRoaXMgQVBJIGdyb3VwIGFyZSBcIlVzZXJcIiwgXCJHcm91cFwiLCBhbmQgXCJTZXJ2aWNlQWNjb3VudFwiLiBJZiB0aGUgQXV0aG9yaXplciBkb2VzIG5vdCByZWNvZ25pemVkIHRoZSBraW5kIHZhbHVlLCB0aGUgQXV0aG9yaXplciBzaG91bGQgcmVwb3J0IGFuIGVycm9yLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIG9iamVjdCBiZWluZyByZWZlcmVuY2VkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSByZWZlcmVuY2VkIG9iamVjdC4gIElmIHRoZSBvYmplY3Qga2luZCBpcyBub24tbmFtZXNwYWNlLCBzdWNoIGFzIFwiVXNlclwiIG9yIFwiR3JvdXBcIiwgYW5kIHRoaXMgdmFsdWUgaXMgbm90IGVtcHR5IHRoZSBBdXRob3JpemVyIHNob3VsZCByZXBvcnQgYW4gZXJyb3IuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImNsdXN0ZXJQb29sTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJDbGFpbVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDbHVzdGVyQ2xhaW0uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBpbmNsdWRlcyBtb3JlIGRldGFpbGVkIHN0YXR1cyBmb3IgdGhlIGNsdXN0ZXIgcG9vbC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJDbGFpbUNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciB0aGUgY3VycmVudCBjb25kaXRpb24gb2YgYSBjbHVzdGVyIGNsYWltLiIsInByb3BlcnRpZXMiOnsibGFzdFByb2JlVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQcm9iZVRpbWUgaXMgdGhlIGxhc3QgdGltZSB3ZSBwcm9iZWQgdGhlIGNvbmRpdGlvbi4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgYSBodW1hbi1yZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCBsYXN0IHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJSZWFzb24gaXMgYSB1bmlxdWUsIG9uZS13b3JkLCBDYW1lbENhc2UgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIGlzIHRoZSBzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGlzIHRoZSB0eXBlIG9mIHRoZSBjb25kaXRpb24uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJsaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IkxpZmV0aW1lIGlzIHRoZSBtYXhpbXVtIGxpZmV0aW1lIG9mIHRoZSBjbGFpbSBhZnRlciBpdCBpcyBhc3NpZ25lZCBhIGNsdXN0ZXIuIElmIHRoZSBjbGFpbSBzdGlsbCBleGlzdHMgd2hlbiB0aGUgbGlmZXRpbWUgaGFzIGVsYXBzZWQsIHRoZSBjbGFpbSB3aWxsIGJlIGRlbGV0ZWQgYnkgSGl2ZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNsdXN0ZXJkZXByb3Zpc2lvbnMuaGl2ZS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImhpdmUub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6IkNsdXN0ZXJEZXByb3Zpc2lvbiIsImxpc3RLaW5kIjoiQ2x1c3RlckRlcHJvdmlzaW9uTGlzdCIsInBsdXJhbCI6ImNsdXN0ZXJkZXByb3Zpc2lvbnMiLCJzaG9ydE5hbWVzIjpbImNkciJdLCJzaW5ndWxhciI6ImNsdXN0ZXJkZXByb3Zpc2lvbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLmluZnJhSUQiLCJuYW1lIjoiSW5mcmFJRCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuY2x1c3RlcklEIiwibmFtZSI6IkNsdXN0ZXJJRCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0ZWQiLCJuYW1lIjoiQ29tcGxldGVkIiwidHlwZSI6ImJvb2xlYW4ifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlckRlcHJvdmlzaW9uIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBjbHVzdGVyZGVwcm92aXNpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlckRlcHJvdmlzaW9uU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIENsdXN0ZXJEZXByb3Zpc2lvbiIsInByb3BlcnRpZXMiOnsiY2x1c3RlcklEIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlcklEIGlzIGEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBjbHVzdGVyIHRvIGRlcHJvdmlzaW9uLiBJdCB3aWxsIGJlIHVzZWQgaWYgc3BlY2lmaWVkLiIsInR5cGUiOiJzdHJpbmcifSwiaW5mcmFJRCI6eyJkZXNjcmlwdGlvbiI6IkluZnJhSUQgaXMgdGhlIGlkZW50aWZpZXIgZ2VuZXJhdGVkIGR1cmluZyBpbnN0YWxsYXRpb24gZm9yIGEgY2x1c3Rlci4gSXQgaXMgdXNlZCBmb3IgdGFnZ2luZy9uYW1pbmcgcmVzb3VyY2VzIGluIGNsb3VkIHByb3ZpZGVycy4iLCJ0eXBlIjoic3RyaW5nIn0sInBsYXRmb3JtIjp7ImRlc2NyaXB0aW9uIjoiUGxhdGZvcm0gY29udGFpbnMgcGxhdGZvcm0tc3BlY2lmaWMgY29uZmlndXJhdGlvbiBmb3IgYSBDbHVzdGVyRGVwcm92aXNpb24iLCJwcm9wZXJ0aWVzIjp7ImF3cyI6eyJkZXNjcmlwdGlvbiI6IkFXUyBjb250YWlucyBBV1Mtc3BlY2lmaWMgZGVwcm92aXNpb24gc2V0dGluZ3MiLCJwcm9wZXJ0aWVzIjp7ImNyZWRlbnRpYWxzQXNzdW1lUm9sZSI6eyJkZXNjcmlwdGlvbiI6IkNyZWRlbnRpYWxzQXNzdW1lUm9sZSByZWZlcnMgdG8gdGhlIElBTSByb2xlIHRoYXQgbXVzdCBiZSBhc3N1bWVkIHRvIG9idGFpbiBBV1MgYWNjb3VudCBhY2Nlc3MgZm9yIGRlcHJvdmlzaW9uaW5nIHRoZSBjbHVzdGVyLiIsInByb3BlcnRpZXMiOnsiZXh0ZXJuYWxJRCI6eyJkZXNjcmlwdGlvbiI6IkV4dGVybmFsSUQgaXMgcmFuZG9tIHN0cmluZyBnZW5lcmF0ZWQgYnkgcGxhdGZvcm0gc28gdGhhdCBhc3N1bWUgcm9sZSBpcyBwcm90ZWN0ZWQgZnJvbSBjb25mdXNlZCBkZXB1dHkgcHJvYmxlbS4gbW9yZSBpbmZvOiBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vSUFNL2xhdGVzdC9Vc2VyR3VpZGUvaWRfcm9sZXNfY3JlYXRlX2Zvci11c2VyX2V4dGVybmFsaWQuaHRtbCIsInR5cGUiOiJzdHJpbmcifSwicm9sZUFSTiI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJyb2xlQVJOIl0sInR5cGUiOiJvYmplY3QifSwiY3JlZGVudGlhbHNTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJDcmVkZW50aWFsc1NlY3JldFJlZiBpcyB0aGUgQVdTIGFjY291bnQgY3JlZGVudGlhbHMgdG8gdXNlIGZvciBkZXByb3Zpc2lvbmluZyB0aGUgY2x1c3RlciIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyBUT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVnaW9uIjp7ImRlc2NyaXB0aW9uIjoiUmVnaW9uIGlzIHRoZSBBV1MgcmVnaW9uIGZvciB0aGlzIGRlcHJvdmlzaW9uaW5nIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsicmVnaW9uIl0sInR5cGUiOiJvYmplY3QifSwiYXp1cmUiOnsiZGVzY3JpcHRpb24iOiJBenVyZSBjb250YWlucyBBenVyZS1zcGVjaWZpYyBkZXByb3Zpc2lvbiBzZXR0aW5ncyIsInByb3BlcnRpZXMiOnsiY3JlZGVudGlhbHNTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJDcmVkZW50aWFsc1NlY3JldFJlZiBpcyB0aGUgQXp1cmUgYWNjb3VudCBjcmVkZW50aWFscyB0byB1c2UgZm9yIGRlcHJvdmlzaW9uaW5nIHRoZSBjbHVzdGVyIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJnY3AiOnsiZGVzY3JpcHRpb24iOiJHQ1AgY29udGFpbnMgR0NQLXNwZWNpZmljIGRlcHJvdmlzaW9uIHNldHRpbmdzIiwicHJvcGVydGllcyI6eyJjcmVkZW50aWFsc1NlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IkNyZWRlbnRpYWxzU2VjcmV0UmVmIGlzIHRoZSBHQ1AgYWNjb3VudCBjcmVkZW50aWFscyB0byB1c2UgZm9yIGRlcHJvdmlzaW9uaW5nIHRoZSBjbHVzdGVyIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJyZWdpb24iOnsiZGVzY3JpcHRpb24iOiJSZWdpb24gaXMgdGhlIEdDUCByZWdpb24gZm9yIHRoaXMgZGVwcm92aXNpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJyZWdpb24iXSwidHlwZSI6Im9iamVjdCJ9LCJvcGVuc3RhY2siOnsiZGVzY3JpcHRpb24iOiJPcGVuU3RhY2sgY29udGFpbnMgT3BlblN0YWNrLXNwZWNpZmljIGRlcHJvdmlzaW9uIHNldHRpbmdzIiwicHJvcGVydGllcyI6eyJjZXJ0aWZpY2F0ZXNTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJDZXJ0aWZpY2F0ZXNTZWNyZXRSZWYgcmVmZXJzIHRvIGEgc2VjcmV0IHRoYXQgY29udGFpbnMgQ0EgY2VydGlmaWNhdGVzIG5lY2Vzc2FyeSBmb3IgY29tbXVuaWNhdGluZyB3aXRoIHRoZSBPcGVuU3RhY2suIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjbG91ZCI6eyJkZXNjcmlwdGlvbiI6IkNsb3VkIGlzIHRoZSBzZWNpb24gaW4gdGhlIGNsb3Vkcy55YW1sIHNlY3JldCBiZWxvdyB0byB1c2UgZm9yIGF1dGgvY29ubmVjdGl2aXR5LiIsInR5cGUiOiJzdHJpbmcifSwiY3JlZGVudGlhbHNTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJDcmVkZW50aWFsc1NlY3JldFJlZiBpcyB0aGUgT3BlblN0YWNrIGFjY291bnQgY3JlZGVudGlhbHMgdG8gdXNlIGZvciBkZXByb3Zpc2lvbmluZyB0aGUgY2x1c3RlciIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyBUT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsb3VkIl0sInR5cGUiOiJvYmplY3QifSwib3ZpcnQiOnsiZGVzY3JpcHRpb24iOiJPdmlydCBjb250YWlucyBvVmlydC1zcGVjaWZpYyBkZXByb3Zpc2lvbiBzZXR0aW5ncyIsInByb3BlcnRpZXMiOnsiY2VydGlmaWNhdGVzU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiQ2VydGlmaWNhdGVzU2VjcmV0UmVmIHJlZmVycyB0byBhIHNlY3JldCB0aGF0IGNvbnRhaW5zIHRoZSBvVmlydCBDQSBjZXJ0aWZpY2F0ZXMgbmVjZXNzYXJ5IGZvciBjb21tdW5pY2F0aW5nIHdpdGggdGhlIG9WaXJ0LiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyBUT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY2x1c3RlcklEIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG9WaXJ0IGNsdXN0ZXIgSUQiLCJ0eXBlIjoic3RyaW5nIn0sImNyZWRlbnRpYWxzU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiQ3JlZGVudGlhbHNTZWNyZXRSZWYgaXMgdGhlIG9WaXJ0IGFjY291bnQgY3JlZGVudGlhbHMgdG8gdXNlIGZvciBkZXByb3Zpc2lvbmluZyB0aGUgY2x1c3RlciBzZWNyZXQgZmllbGRzOiBvdmlydF91cmwsIG92aXJ0X3VzZXJuYW1lLCBvdmlydF9wYXNzd29yZCwgb3ZpcnRfY2FfYnVuZGxlIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiY2VydGlmaWNhdGVzU2VjcmV0UmVmIiwiY2x1c3RlcklEIiwiY3JlZGVudGlhbHNTZWNyZXRSZWYiXSwidHlwZSI6Im9iamVjdCJ9LCJ2c3BoZXJlIjp7ImRlc2NyaXB0aW9uIjoiVlNwaGVyZSBjb250YWlucyBWTVdhcmUgdlNwaGVyZS1zcGVjaWZpYyBkZXByb3Zpc2lvbiBzZXR0aW5ncyIsInByb3BlcnRpZXMiOnsiY2VydGlmaWNhdGVzU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiQ2VydGlmaWNhdGVzU2VjcmV0UmVmIHJlZmVycyB0byBhIHNlY3JldCB0aGF0IGNvbnRhaW5zIHRoZSB2U3BoZXJlIENBIGNlcnRpZmljYXRlcyBuZWNlc3NhcnkgZm9yIGNvbW11bmljYXRpbmcgd2l0aCB0aGUgVkNlbnRlci4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImNyZWRlbnRpYWxzU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiQ3JlZGVudGlhbHNTZWNyZXRSZWYgaXMgdGhlIHZTcGhlcmUgYWNjb3VudCBjcmVkZW50aWFscyB0byB1c2UgZm9yIGRlcHJvdmlzaW9uaW5nIHRoZSBjbHVzdGVyIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ2Q2VudGVyIjp7ImRlc2NyaXB0aW9uIjoiVkNlbnRlciBpcyB0aGUgdlNwaGVyZSB2Q2VudGVyIGhvc3RuYW1lLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNlcnRpZmljYXRlc1NlY3JldFJlZiIsImNyZWRlbnRpYWxzU2VjcmV0UmVmIiwidkNlbnRlciJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJpbmZyYUlEIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlckRlcHJvdmlzaW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENsdXN0ZXJEZXByb3Zpc2lvbiIsInByb3BlcnRpZXMiOnsiY29tcGxldGVkIjp7ImRlc2NyaXB0aW9uIjoiQ29tcGxldGVkIGlzIHRydWUgd2hlbiB0aGUgdW5pbnN0YWxsIGhhcyBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5IiwidHlwZSI6ImJvb2xlYW4ifSwiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgaW5jbHVkZXMgbW9yZSBkZXRhaWxlZCBzdGF0dXMgZm9yIHRoZSBjbHVzdGVyIGRlcHJvdmlzaW9uIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyRGVwcm92aXNpb25Db25kaXRpb24gY29udGFpbnMgZGV0YWlscyBmb3IgdGhlIGN1cnJlbnQgY29uZGl0aW9uIG9mIGEgQ2x1c3RlckRlcHJvdmlzaW9uIiwicHJvcGVydGllcyI6eyJsYXN0UHJvYmVUaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFByb2JlVGltZSBpcyB0aGUgbGFzdCB0aW1lIHdlIHByb2JlZCB0aGUgY29uZGl0aW9uLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyBhIGh1bWFuLXJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IGxhc3QgdHJhbnNpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6IlJlYXNvbiBpcyBhIHVuaXF1ZSwgb25lLXdvcmQsIENhbWVsQ2FzZSByZWFzb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgaXMgdGhlIHR5cGUgb2YgdGhlIGNvbmRpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNsdXN0ZXJpbWFnZXNldHMuaGl2ZS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImhpdmUub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6IkNsdXN0ZXJJbWFnZVNldCIsImxpc3RLaW5kIjoiQ2x1c3RlckltYWdlU2V0TGlzdCIsInBsdXJhbCI6ImNsdXN0ZXJpbWFnZXNldHMiLCJzaG9ydE5hbWVzIjpbImltZ3NldCJdLCJzaW5ndWxhciI6ImNsdXN0ZXJpbWFnZXNldCJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLnJlbGVhc2VJbWFnZSIsIm5hbWUiOiJSZWxlYXNlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJJbWFnZVNldCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgY2x1c3RlcmltYWdlc2V0cyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJJbWFnZVNldFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDbHVzdGVySW1hZ2VTZXQiLCJwcm9wZXJ0aWVzIjp7InJlbGVhc2VJbWFnZSI6eyJkZXNjcmlwdGlvbiI6IlJlbGVhc2VJbWFnZSBpcyB0aGUgaW1hZ2UgdGhhdCBjb250YWlucyB0aGUgcGF5bG9hZCB0byB1c2Ugd2hlbiBpbnN0YWxsaW5nIGEgY2x1c3Rlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJyZWxlYXNlSW1hZ2UiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVySW1hZ2VTZXRTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQ2x1c3RlckltYWdlU2V0IiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyYWN0cy5oaXZlLm9wZW5zaGlmdC5pby9jbHVzdGVyaW5zdGFsbCI6ImZhbHNlIn0sIm5hbWUiOiJjbHVzdGVycHJvdmlzaW9ucy5oaXZlLm9wZW5zaGlmdC5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoiaGl2ZS5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiQ2x1c3RlclByb3Zpc2lvbiIsImxpc3RLaW5kIjoiQ2x1c3RlclByb3Zpc2lvbkxpc3QiLCJwbHVyYWwiOiJjbHVzdGVycHJvdmlzaW9ucyIsInNpbmd1bGFyIjoiY2x1c3RlcnByb3Zpc2lvbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLmNsdXN0ZXJEZXBsb3ltZW50UmVmLm5hbWUiLCJuYW1lIjoiQ2x1c3RlckRlcGxveW1lbnQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLnN0YWdlIiwibmFtZSI6IlN0YWdlIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5pbmZyYUlEIiwibmFtZSI6IkluZnJhSUQiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlclByb3Zpc2lvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgY2x1c3RlcnByb3Zpc2lvbnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyUHJvdmlzaW9uU3BlYyBkZWZpbmVzIHRoZSByZXN1bHRzIG9mIHByb3Zpc2lvbmluZyBhIGNsdXN0ZXIuIiwicHJvcGVydGllcyI6eyJhZG1pbkt1YmVjb25maWdTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBZG1pbkt1YmVjb25maWdTZWNyZXRSZWYgcmVmZXJlbmNlcyB0aGUgc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGFkbWluIGt1YmVjb25maWcgZm9yIHRoaXMgY2x1c3Rlci4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImFkbWluUGFzc3dvcmRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBZG1pblBhc3N3b3JkU2VjcmV0UmVmIHJlZmVyZW5jZXMgdGhlIHNlY3JldCBjb250YWluaW5nIHRoZSBhZG1pbiB1c2VybmFtZS9wYXNzd29yZCB3aGljaCBjYW4gYmUgdXNlZCB0byBsb2dpbiB0byB0aGlzIGNsdXN0ZXIuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJhdHRlbXB0Ijp7ImRlc2NyaXB0aW9uIjoiQXR0ZW1wdCBpcyB3aGljaCBhdHRlbXB0IG51bWJlciBvZiB0aGUgY2x1c3RlciBkZXBsb3ltZW50IHRoYXQgdGhpcyBDbHVzdGVyUHJvdmlzaW9uIGlzIiwidHlwZSI6ImludGVnZXIifSwiY2x1c3RlckRlcGxveW1lbnRSZWYiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyRGVwbG95bWVudFJlZiByZWZlcmVuY2VzIHRoZSBjbHVzdGVyIGRlcGxveW1lbnQgcHJvdmlzaW9uZWQuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjbHVzdGVySUQiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVySUQgaXMgYSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBjbHVzdGVyIGdlbmVyYXRlZCBkdXJpbmcgaW5zdGFsbGF0aW9uLiBVc2VkIGZvciByZXBvcnRpbmcgbWV0cmljcyBhbW9uZyBvdGhlciBwbGFjZXMuIiwidHlwZSI6InN0cmluZyJ9LCJpbmZyYUlEIjp7ImRlc2NyaXB0aW9uIjoiSW5mcmFJRCBpcyBhbiBpZGVudGlmaWVyIGZvciB0aGlzIGNsdXN0ZXIgZ2VuZXJhdGVkIGR1cmluZyBpbnN0YWxsYXRpb24gYW5kIHVzZWQgZm9yIHRhZ2dpbmcvbmFtaW5nIHJlc291cmNlcyBpbiBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9LCJpbnN0YWxsTG9nIjp7ImRlc2NyaXB0aW9uIjoiSW5zdGFsbExvZyBpcyB0aGUgbG9nIGZyb20gdGhlIGluc3RhbGxlci4iLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7ImRlc2NyaXB0aW9uIjoiTWV0YWRhdGEgaXMgdGhlIG1ldGFkYXRhLmpzb24gZ2VuZXJhdGVkIGJ5IHRoZSBpbnN0YWxsZXIsIHByb3ZpZGluZyBtZXRhZGF0YSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY2x1c3RlciBjcmVhdGVkLiIsInR5cGUiOiJvYmplY3QifSwicHJldkNsdXN0ZXJJRCI6eyJkZXNjcmlwdGlvbiI6IlByZXZDbHVzdGVySUQgaXMgdGhlIGNsdXN0ZXIgSUQgb2YgdGhlIHByZXZpb3VzIGZhaWxlZCBwcm92aXNpb24gYXR0ZW1wdC4iLCJ0eXBlIjoic3RyaW5nIn0sInByZXZJbmZyYUlEIjp7ImRlc2NyaXB0aW9uIjoiUHJldkluZnJhSUQgaXMgdGhlIGluZnJhIElEIG9mIHRoZSBwcmV2aW91cyBmYWlsZWQgcHJvdmlzaW9uIGF0dGVtcHQuIiwidHlwZSI6InN0cmluZyJ9LCJzdGFnZSI6eyJkZXNjcmlwdGlvbiI6IlN0YWdlIGlzIHRoZSBzdGFnZSBvZiBwcm92aXNpb25pbmcgdGhhdCB0aGUgY2x1c3RlciBkZXBsb3ltZW50IGhhcyByZWFjaGVkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImF0dGVtcHQiLCJjbHVzdGVyRGVwbG95bWVudFJlZiIsInBvZFNwZWMiLCJzdGFnZSJdLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlclByb3Zpc2lvblN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDbHVzdGVyUHJvdmlzaW9uLiIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgaW5jbHVkZXMgbW9yZSBkZXRhaWxlZCBzdGF0dXMgZm9yIHRoZSBjbHVzdGVyIHByb3Zpc2lvbiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlclByb3Zpc2lvbkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciB0aGUgY3VycmVudCBjb25kaXRpb24gb2YgYSBjbHVzdGVyIHByb3Zpc2lvbiIsInByb3BlcnRpZXMiOnsibGFzdFByb2JlVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQcm9iZVRpbWUgaXMgdGhlIGxhc3QgdGltZSB3ZSBwcm9iZWQgdGhlIGNvbmRpdGlvbi4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgYSBodW1hbi1yZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCBsYXN0IHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJSZWFzb24gaXMgYSB1bmlxdWUsIG9uZS13b3JkLCBDYW1lbENhc2UgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIGlzIHRoZSBzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGlzIHRoZSB0eXBlIG9mIHRoZSBjb25kaXRpb24uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJqb2JSZWYiOnsiZGVzY3JpcHRpb24iOiJKb2JSZWYgaXMgdGhlIHJlZmVyZW5jZSB0byB0aGUgam9iIHBlcmZvcm1pbmcgdGhlIHByb3Zpc2lvbi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNsdXN0ZXJyZWxvY2F0ZXMuaGl2ZS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImhpdmUub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6IkNsdXN0ZXJSZWxvY2F0ZSIsImxpc3RLaW5kIjoiQ2x1c3RlclJlbG9jYXRlTGlzdCIsInBsdXJhbCI6ImNsdXN0ZXJyZWxvY2F0ZXMiLCJzaW5ndWxhciI6ImNsdXN0ZXJyZWxvY2F0ZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLmNsdXN0ZXJEZXBsb3ltZW50U2VsZWN0b3IiLCJuYW1lIjoiU2VsZWN0b3IiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlclJlbG9jYXRlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBDbHVzdGVyUmVsb2NhdGVzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlclJlbG9jYXRlU3BlYyBkZWZpbmVzIHRoZSByZWxvY2F0aW9uIG9mIGNsdXN0ZXJzIGZyb20gb25lIEhpdmUgaW5zdGFuY2UgdG8gYW5vdGhlci4iLCJwcm9wZXJ0aWVzIjp7ImNsdXN0ZXJEZXBsb3ltZW50U2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyRGVwbG95bWVudFNlbGVjdG9yIGlzIGEgTGFiZWxTZWxlY3RvciBpbmRpY2F0aW5nIHdoaWNoIGNsdXN0ZXJzIHdpbGwgYmUgcmVsb2NhdGVkLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwia3ViZWNvbmZpZ1NlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6Ikt1YmVjb25maWdTZWNyZXRSZWYgaXMgYSByZWZlcmVuY2UgdG8gdGhlIHNlY3JldCBjb250YWluaW5nIHRoZSBrdWJlY29uZmlnIGZvciB0aGUgZGVzdGluYXRpb24gSGl2ZSBpbnN0YW5jZS4gVGhlIGt1YmVjb25maWcgbXVzdCBiZSBpbiBhIGRhdGEgZmllbGQgd2hlcmUgdGhlIGtleSBpcyBcImt1YmVjb25maWdcIi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIGlzIHRoZSBuYW1lIG9mIHRoZSBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2UgaXMgdGhlIG5hbWVzcGFjZSB3aGVyZSB0aGUgc2VjcmV0IGxpdmVzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJuYW1lc3BhY2UiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiY2x1c3RlckRlcGxveW1lbnRTZWxlY3RvciIsImt1YmVjb25maWdTZWNyZXRSZWYiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyUmVsb2NhdGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQ2x1c3RlclJlbG9jYXRlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNsdXN0ZXJzdGF0ZXMuaGl2ZS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImhpdmUub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6IkNsdXN0ZXJTdGF0ZSIsImxpc3RLaW5kIjoiQ2x1c3RlclN0YXRlTGlzdCIsInBsdXJhbCI6ImNsdXN0ZXJzdGF0ZXMiLCJzaW5ndWxhciI6ImNsdXN0ZXJzdGF0ZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJTdGF0ZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgY2x1c3RlcnN0YXRlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJTdGF0ZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDbHVzdGVyU3RhdGUiLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJTdGF0ZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDbHVzdGVyU3RhdGUiLCJwcm9wZXJ0aWVzIjp7ImNsdXN0ZXJPcGVyYXRvcnMiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyT3BlcmF0b3JzIGNvbnRhaW5zIHRoZSBzdGF0ZSBmb3IgZXZlcnkgY2x1c3RlciBvcGVyYXRvciBpbiB0aGUgdGFyZ2V0IGNsdXN0ZXIiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJPcGVyYXRvclN0YXRlIHN1bW1hcml6ZXMgdGhlIHN0YXR1cyBvZiBhIHNpbmdsZSBjbHVzdGVyIG9wZXJhdG9yIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBpcyB0aGUgc2V0IG9mIGNvbmRpdGlvbnMgaW4gdGhlIHN0YXR1cyBvZiB0aGUgY2x1c3RlciBvcGVyYXRvciBvbiB0aGUgdGFyZ2V0IGNsdXN0ZXIiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJPcGVyYXRvclN0YXR1c0NvbmRpdGlvbiByZXByZXNlbnRzIHRoZSBzdGF0ZSBvZiB0aGUgb3BlcmF0b3IncyBtYW5hZ2VkIGFuZCBtb25pdG9yZWQgY29tcG9uZW50cy4iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Imxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgdGltZSBvZiB0aGUgbGFzdCB1cGRhdGUgdG8gdGhlIGN1cnJlbnQgc3RhdHVzIHByb3BlcnR5LiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgcHJvdmlkZXMgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBjb25kaXRpb24uIFRoaXMgaXMgb25seSB0byBiZSBjb25zdW1lZCBieSBodW1hbnMuICBJdCBtYXkgY29udGFpbiBMaW5lIEZlZWQgY2hhcmFjdGVycyAoVSswMDBBKSwgd2hpY2ggc2hvdWxkIGJlIHJlbmRlcmVkIGFzIG5ldyBsaW5lcy4iLCJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBpcyB0aGUgQ2FtZWxDYXNlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGN1cnJlbnQgc3RhdHVzLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiBUcnVlLCBGYWxzZSwgVW5rbm93bi4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIHNwZWNpZmllcyB0aGUgYXNwZWN0IHJlcG9ydGVkIGJ5IHRoaXMgY29uZGl0aW9uLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIGNsdXN0ZXIgb3BlcmF0b3IiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImxhc3RVcGRhdGVkIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFVwZGF0ZWQgaXMgdGhlIGxhc3QgdGltZSB0aGF0IG9wZXJhdG9yIHN0YXRlIHdhcyB1cGRhdGVkIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1hY2hpbmVwb29sbmFtZWxlYXNlcy5oaXZlLm9wZW5zaGlmdC5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoiaGl2ZS5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiTWFjaGluZVBvb2xOYW1lTGVhc2UiLCJsaXN0S2luZCI6Ik1hY2hpbmVQb29sTmFtZUxlYXNlTGlzdCIsInBsdXJhbCI6Im1hY2hpbmVwb29sbmFtZWxlYXNlcyIsInNpbmd1bGFyIjoibWFjaGluZXBvb2xuYW1lbGVhc2UifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIubWV0YWRhdGEubGFiZWxzLmhpdmVcXC5vcGVuc2hpZnRcXC5pby9tYWNoaW5lLXBvb2wtbmFtZSIsIm5hbWUiOiJNYWNoaW5lUG9vbCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmxhYmVscy5oaXZlXFwub3BlbnNoaWZ0XFwuaW8vY2x1c3Rlci1kZXBsb3ltZW50LW5hbWUiLCJuYW1lIjoiQ2x1c3RlciIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZVBvb2xOYW1lTGVhc2UgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIE1hY2hpbmVQb29sTmFtZUxlYXNlcyBBUEkuIFRoaXMgcmVzb3VyY2UgaXMgbW9zdGx5IGVtcHR5IGFzIHdlJ3JlIHByaW1hcmlseSByZWx5aW5nIG9uIHRoZSBuYW1lIHRvIGRldGVybWluZSBpZiBhIGxlYXNlIGlzIGF2YWlsYWJsZS4gTm90ZSB0aGF0IG5vdCBhbGwgY2xvdWQgcHJvdmlkZXJzIHJlcXVpcmUgdGhlIHVzZSBvZiBhIGxlYXNlIGZvciBuYW1pbmcsIGF0IHByZXNlbnQgdGhpcyBpcyBvbmx5IHJlcXVpcmVkIGZvciBHQ1Agd2hlcmUgd2UncmUgZXh0cmVtZWx5IHJlc3RyaWN0ZWQgb24gbmFtZSBsZW5ndGhzLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZVBvb2xOYW1lTGVhc2VTcGVjIGlzIGEgbWluaW1hbCByZXNvdXJjZSBmb3Igb2J0YWluaW5nIHVuaXF1ZSBtYWNoaW5lIHBvb2wgbmFtZXMgb2YgYSBsaW1pdGVkIGxlbmd0aC4iLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVQb29sTmFtZUxlYXNlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE1hY2hpbmVQb29sTmFtZUxlYXNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6InN5bmNzZXRzLmhpdmUub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJoaXZlLm9wZW5zaGlmdC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTeW5jU2V0IiwibGlzdEtpbmQiOiJTeW5jU2V0TGlzdCIsInBsdXJhbCI6InN5bmNzZXRzIiwic2hvcnROYW1lcyI6WyJzcyJdLCJzaW5ndWxhciI6InN5bmNzZXQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJTeW5jU2V0IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBTeW5jU2V0IEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU3luY1NldFNwZWMgZGVmaW5lcyB0aGUgU3luY1NldENvbW1vblNwZWMgcmVzb3VyY2VzIGFuZCBwYXRjaGVzIHRvIHN5bmMgYWxvbmcgd2l0aCBDbHVzdGVyRGVwbG95bWVudFJlZnMgaW5kaWNhdGluZyB3aGljaCBjbHVzdGVycyB0aGUgU3luY1NldCBhcHBsaWVzIHRvIGluIHRoZSBTeW5jU2V0J3MgbmFtZXNwYWNlLiIsInByb3BlcnRpZXMiOnsiYXBwbHlCZWhhdmlvciI6eyJkZXNjcmlwdGlvbiI6IkFwcGx5QmVoYXZpb3IgaW5kaWNhdGVzIGhvdyByZXNvdXJjZXMgaW4gdGhpcyBzeW5jc2V0IHdpbGwgYmUgYXBwbGllZCB0byB0aGUgdGFyZ2V0IGNsdXN0ZXIuIFRoZSBkZWZhdWx0IHZhbHVlIG9mIFwiQXBwbHlcIiBpbmRpY2F0ZXMgdGhhdCByZXNvdXJjZXMgc2hvdWxkIGJlIGFwcGxpZWQgdXNpbmcgdGhlICdvYyBhcHBseScgY29tbWFuZC4gSWYgbm8gdmFsdWUgaXMgc2V0LCBcIkFwcGx5XCIgaXMgYXNzdW1lZC4gQSB2YWx1ZSBvZiBcIkNyZWF0ZU9ubHlcIiBpbmRpY2F0ZXMgdGhhdCB0aGUgcmVzb3VyY2Ugd2lsbCBvbmx5IGJlIGNyZWF0ZWQgaWYgaXQgZG9lcyBub3QgYWxyZWFkeSBleGlzdCBpbiB0aGUgdGFyZ2V0IGNsdXN0ZXIuIE90aGVyd2lzZSwgaXQgd2lsbCBiZSBsZWZ0IGFsb25lLiBBIHZhbHVlIG9mIFwiQ3JlYXRlT3JVcGRhdGVcIiBpbmRpY2F0ZXMgdGhhdCB0aGUgcmVzb3VyY2Ugd2lsbCBiZSBjcmVhdGVkL3VwZGF0ZWQgd2l0aG91dCB0aGUgdXNlIG9mIHRoZSAnb2MgYXBwbHknIGNvbW1hbmQsIGFsbG93aW5nIGxhcmdlciByZXNvdXJjZXMgdG8gYmUgc3luY2VkLCBidXQgbG9zaW5nIHNvbWUgZnVuY3Rpb25hbGl0eSBvZiB0aGUgJ29jIGFwcGx5JyBjb21tYW5kIHN1Y2ggYXMgdGhlIGFiaWxpdHkgdG8gcmVtb3ZlIGFubm90YXRpb25zLCBsYWJlbHMsIGFuZCBvdGhlciBtYXAgZW50cmllcyBpbiBnZW5lcmFsLiIsImVudW0iOlsiIiwiQXBwbHkiLCJDcmVhdGVPbmx5IiwiQ3JlYXRlT3JVcGRhdGUiXSwidHlwZSI6InN0cmluZyJ9LCJjbHVzdGVyRGVwbG95bWVudFJlZnMiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyRGVwbG95bWVudFJlZnMgaXMgdGhlIGxpc3Qgb2YgTG9jYWxPYmplY3RSZWZlcmVuY2UgaW5kaWNhdGluZyB3aGljaCBjbHVzdGVycyB0aGUgU3luY1NldCBhcHBsaWVzIHRvIGluIHRoZSBTeW5jU2V0J3MgbmFtZXNwYWNlLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTG9jYWxPYmplY3RSZWZlcmVuY2UgY29udGFpbnMgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGxldCB5b3UgbG9jYXRlIHRoZSByZWZlcmVuY2VkIG9iamVjdCBpbnNpZGUgdGhlIHNhbWUgbmFtZXNwYWNlLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyBUT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInBhdGNoZXMiOnsiZGVzY3JpcHRpb24iOiJQYXRjaGVzIGlzIHRoZSBsaXN0IG9mIHBhdGNoZXMgdG8gYXBwbHkuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJTeW5jT2JqZWN0UGF0Y2ggcmVwcmVzZW50cyBhIHBhdGNoIHRvIGJlIGFwcGxpZWQgdG8gYSBzcGVjaWZpYyBvYmplY3QiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGlzIHRoZSBHcm91cCBhbmQgVmVyc2lvbiBvZiB0aGUgb2JqZWN0IHRvIGJlIHBhdGNoZWQuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyB0aGUgS2luZCBvZiB0aGUgb2JqZWN0IHRvIGJlIHBhdGNoZWQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgb2JqZWN0IHRvIGJlIHBhdGNoZWQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2UgaXMgdGhlIE5hbWVzcGFjZSBpbiB3aGljaCB0aGUgb2JqZWN0IHRvIHBhdGNoIGV4aXN0cy4gRGVmYXVsdHMgdG8gdGhlIFN5bmNTZXQncyBOYW1lc3BhY2UuIiwidHlwZSI6InN0cmluZyJ9LCJwYXRjaCI6eyJkZXNjcmlwdGlvbiI6IlBhdGNoIGlzIHRoZSBwYXRjaCB0byBhcHBseS4iLCJ0eXBlIjoic3RyaW5nIn0sInBhdGNoVHlwZSI6eyJkZXNjcmlwdGlvbiI6IlBhdGNoVHlwZSBpbmRpY2F0ZXMgdGhlIFBhdGNoVHlwZSBhcyBcInN0cmF0ZWdpY1wiIChkZWZhdWx0KSwgXCJqc29uXCIsIG9yIFwibWVyZ2VcIi4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhcGlWZXJzaW9uIiwia2luZCIsIm5hbWUiLCJwYXRjaCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXNvdXJjZUFwcGx5TW9kZSI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlQXBwbHlNb2RlIGluZGljYXRlcyBpZiB0aGUgUmVzb3VyY2UgYXBwbHkgbW9kZSBpcyBcIlVwc2VydFwiIChkZWZhdWx0KSBvciBcIlN5bmNcIi4gQXBwbHlNb2RlIFwiVXBzZXJ0XCIgaW5kaWNhdGVzIGNyZWF0ZSBhbmQgdXBkYXRlLiBBcHBseU1vZGUgXCJTeW5jXCIgaW5kaWNhdGVzIGNyZWF0ZSwgdXBkYXRlIGFuZCBkZWxldGUuIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZXMgaXMgdGhlIGxpc3Qgb2Ygb2JqZWN0cyB0byBzeW5jIGZyb20gUmF3RXh0ZW5zaW9uIGRlZmluaXRpb25zLiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtZW1iZWRkZWQtcmVzb3VyY2UiOnRydWUsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJzZWNyZXRNYXBwaW5ncyI6eyJkZXNjcmlwdGlvbiI6IlNlY3JldHMgaXMgdGhlIGxpc3Qgb2Ygc2VjcmV0cyB0byBzeW5jIGFsb25nIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBkZXN0aW5hdGlvbnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJTZWNyZXRNYXBwaW5nIGRlZmluZXMgYSBzb3VyY2UgYW5kIGRlc3RpbmF0aW9uIGZvciBhIHNlY3JldCB0byBiZSBzeW5jZWQgYnkgYSBTeW5jU2V0IiwicHJvcGVydGllcyI6eyJzb3VyY2VSZWYiOnsiZGVzY3JpcHRpb24iOiJTb3VyY2VSZWYgc3BlY2lmaWVzIHRoZSBuYW1lIGFuZCBuYW1lc3BhY2Ugb2YgYSBzZWNyZXQgb24gdGhlIG1hbmFnZW1lbnQgY2x1c3RlciIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIGlzIHRoZSBuYW1lc3BhY2Ugd2hlcmUgdGhlIHNlY3JldCBsaXZlcy4gSWYgbm90IHByZXNlbnQgZm9yIHRoZSBzb3VyY2Ugc2VjcmV0IHJlZmVyZW5jZSwgaXQgaXMgYXNzdW1lZCB0byBiZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgdGhlIHN5bmNzZXQgd2l0aCB0aGUgcmVmZXJlbmNlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJUYXJnZXRSZWYgc3BlY2lmaWVzIHRoZSB0YXJnZXQgbmFtZSBhbmQgbmFtZXNwYWNlIG9mIHRoZSBzZWNyZXQgb24gdGhlIHRhcmdldCBjbHVzdGVyIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2UgaXMgdGhlIG5hbWVzcGFjZSB3aGVyZSB0aGUgc2VjcmV0IGxpdmVzLiBJZiBub3QgcHJlc2VudCBmb3IgdGhlIHNvdXJjZSBzZWNyZXQgcmVmZXJlbmNlLCBpdCBpcyBhc3N1bWVkIHRvIGJlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB0aGUgc3luY3NldCB3aXRoIHRoZSByZWZlcmVuY2UuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzb3VyY2VSZWYiLCJ0YXJnZXRSZWYiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImNsdXN0ZXJEZXBsb3ltZW50UmVmcyJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN5bmNTZXRTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgYSBTeW5jU2V0IiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNsdXN0ZXJzeW5jbGVhc2VzLmhpdmVpbnRlcm5hbC5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImhpdmVpbnRlcm5hbC5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiQ2x1c3RlclN5bmNMZWFzZSIsImxpc3RLaW5kIjoiQ2x1c3RlclN5bmNMZWFzZUxpc3QiLCJwbHVyYWwiOiJjbHVzdGVyc3luY2xlYXNlcyIsInNob3J0TmFtZXMiOlsiY3NsIl0sInNpbmd1bGFyIjoiY2x1c3RlcnN5bmNsZWFzZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJTeW5jTGVhc2UgaXMgYSByZWNvcmQgb2YgdGhlIGxhc3QgdGltZSB0aGF0IFN5bmNTZXRzIGFuZCBTZWxlY3RvclN5bmNTZXRzIHdlcmUgYXBwbGllZCB0byBhIGNsdXN0ZXIuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyU3luY0xlYXNlU3BlYyBpcyB0aGUgc3BlY2lmaWNhdGlvbiBvZiBhIENsdXN0ZXJTeW5jTGVhc2UuIiwicHJvcGVydGllcyI6eyJyZW5ld1RpbWUiOnsiZGVzY3JpcHRpb24iOiJSZW5ld1RpbWUgaXMgdGhlIHRpbWUgd2hlbiBTeW5jU2V0cyBhbmQgU2VsZWN0b3JTeW5jU2V0cyB3ZXJlIGxhc3QgYXBwbGllZCB0byB0aGUgY2x1c3Rlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJyZW5ld1RpbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyYWN0cy5oaXZlLm9wZW5zaGlmdC5pby9jbHVzdGVyaW5zdGFsbCI6InRydWUifSwibmFtZSI6ImZha2VjbHVzdGVyaW5zdGFsbHMuaGl2ZWludGVybmFsLm9wZW5zaGlmdC5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoiaGl2ZWludGVybmFsLm9wZW5zaGlmdC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJGYWtlQ2x1c3Rlckluc3RhbGwiLCJsaXN0S2luZCI6IkZha2VDbHVzdGVySW5zdGFsbExpc3QiLCJwbHVyYWwiOiJmYWtlY2x1c3Rlcmluc3RhbGxzIiwic2luZ3VsYXIiOiJmYWtlY2x1c3Rlcmluc3RhbGwifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJGYWtlQ2x1c3Rlckluc3RhbGwgcmVwcmVzZW50cyBhIGZha2UgcmVxdWVzdCB0byBwcm92aXNpb24gYW4gYWdlbnQgYmFzZWQgY2x1c3Rlci4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkZha2VDbHVzdGVySW5zdGFsbFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiB0aGUgRmFrZUNsdXN0ZXJJbnN0YWxsLiIsInByb3BlcnRpZXMiOnsiY2x1c3RlckRlcGxveW1lbnRSZWYiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyRGVwbG95bWVudFJlZiBpcyBhIHJlZmVyZW5jZSB0byB0aGUgQ2x1c3RlckRlcGxveW1lbnQgYXNzb2NpYXRlZCB3aXRoIHRoaXMgQWdlbnRDbHVzdGVySW5zdGFsbC4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImNsdXN0ZXJNZXRhZGF0YSI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJNZXRhZGF0YSBjb250YWlucyBtZXRhZGF0YSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgaW5zdGFsbGVkIGNsdXN0ZXIuIEl0IHNob3VsZCBiZSBwb3B1bGF0ZWQgb25jZSB0aGUgY2x1c3RlciBpbnN0YWxsIGlzIGNvbXBsZXRlZC4gKGl0IGNhbiBiZSBwb3B1bGF0ZWQgc29vbmVyIGlmIGRlc2lyZWQsIGJ1dCBIaXZlIHdpbGwgbm90IGNvcHkgYmFjayB0byBDbHVzdGVyRGVwbG95bWVudCB1bnRpbCB0aGUgSW5zdGFsbGVkIGNvbmRpdGlvbiBnb2VzIFRydWUuIiwicHJvcGVydGllcyI6eyJhZG1pbkt1YmVjb25maWdTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBZG1pbkt1YmVjb25maWdTZWNyZXRSZWYgcmVmZXJlbmNlcyB0aGUgc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGFkbWluIGt1YmVjb25maWcgZm9yIHRoaXMgY2x1c3Rlci4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImFkbWluUGFzc3dvcmRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBZG1pblBhc3N3b3JkU2VjcmV0UmVmIHJlZmVyZW5jZXMgdGhlIHNlY3JldCBjb250YWluaW5nIHRoZSBhZG1pbiB1c2VybmFtZS9wYXNzd29yZCB3aGljaCBjYW4gYmUgdXNlZCB0byBsb2dpbiB0byB0aGlzIGNsdXN0ZXIuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjbHVzdGVySUQiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVySUQgaXMgYSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBjbHVzdGVyIGdlbmVyYXRlZCBkdXJpbmcgaW5zdGFsbGF0aW9uLiBVc2VkIGZvciByZXBvcnRpbmcgbWV0cmljcyBhbW9uZyBvdGhlciBwbGFjZXMuIiwidHlwZSI6InN0cmluZyJ9LCJpbmZyYUlEIjp7ImRlc2NyaXB0aW9uIjoiSW5mcmFJRCBpcyBhbiBpZGVudGlmaWVyIGZvciB0aGlzIGNsdXN0ZXIgZ2VuZXJhdGVkIGR1cmluZyBpbnN0YWxsYXRpb24gYW5kIHVzZWQgZm9yIHRhZ2dpbmcvbmFtaW5nIHJlc291cmNlcyBpbiBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYWRtaW5LdWJlY29uZmlnU2VjcmV0UmVmIiwiY2x1c3RlcklEIiwiaW5mcmFJRCJdLCJ0eXBlIjoib2JqZWN0In0sImltYWdlU2V0UmVmIjp7ImRlc2NyaXB0aW9uIjoiSW1hZ2VTZXRSZWYgaXMgYSByZWZlcmVuY2UgdG8gYSBDbHVzdGVySW1hZ2VTZXQuIFRoZSByZWxlYXNlIGltYWdlIHNwZWNpZmllZCBpbiB0aGUgQ2x1c3RlckltYWdlU2V0IHdpbGwgYmUgdXNlZCB0byBpbnN0YWxsIHRoZSBjbHVzdGVyLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIENsdXN0ZXJJbWFnZVNldCB0aGF0IHRoaXMgcmVmZXJzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJjbHVzdGVyRGVwbG95bWVudFJlZiIsImltYWdlU2V0UmVmIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiRmFrZUNsdXN0ZXJJbnN0YWxsU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIHRoZSBGYWtlQ2x1c3Rlckluc3RhbGwuIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBpbmNsdWRlcyBtb3JlIGRldGFpbGVkIHN0YXR1cyBmb3IgdGhlIGNsdXN0ZXIgaW5zdGFsbC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJJbnN0YWxsQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIHRoZSBjdXJyZW50IGNvbmRpdGlvbiBvZiBhIGNsdXN0ZXIgaW5zdGFsbC4iLCJwcm9wZXJ0aWVzIjp7Imxhc3RQcm9iZVRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0UHJvYmVUaW1lIGlzIHRoZSBsYXN0IHRpbWUgd2UgcHJvYmVkIHRoZSBjb25kaXRpb24uIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGlzIGEgaHVtYW4tcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgbGFzdCB0cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiUmVhc29uIGlzIGEgdW5pcXVlLCBvbmUtd29yZCwgQ2FtZWxDYXNlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIHRoZSBjb25kaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBpcyB0aGUgdHlwZSBvZiB0aGUgY29uZGl0aW9uLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
relatedImages:
  - image: quay.io/openshift-community-operators/hive-operator@sha256:804b3e83c1afa7b899c1939b922fc21d0dfdb54b0ed8b7952bd1a18f4dbbc839
    name: ""
  - image: quay.io/openshift-hive/hive:v1.1.13
    name: ""
schema: olm.bundle
