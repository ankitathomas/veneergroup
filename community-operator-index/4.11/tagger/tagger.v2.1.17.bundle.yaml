image: quay.io/openshift-community-operators/tagger@sha256:76370f19d3295a9e1e0a1782c43f1f8786df95a867a1a498dd32d9fd309dd006
name: tagger.v2.1.17
package: tagger
properties:
  - type: olm.gvk
    value:
      group: tagger.dev
      kind: Tag
      version: v1beta1
  - type: olm.package
    value:
      packageName: tagger
      version: 2.1.17
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiZG9ja2VyLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjgwODIsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6ODA4Mn1dLCJzZWxlY3RvciI6eyJhcHAiOiJ0YWdnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcyJ9LCJzcGVjIjp7InBvcnRzIjpbeyJwb3J0Ijo4MDkwLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjgwOTB9XSwic2VsZWN0b3IiOnsiYXBwIjoidGFnZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7fSwia2luZCI6IlNlY3JldCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtaXJyb3ItcmVnaXN0cnktY29uZmlnIn19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibXV0YXRpbmctd2ViaG9va3MifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6ODA4MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo4MDgwfV0sInNlbGVjdG9yIjp7ImFwcCI6InRhZ2dlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoicXVheS13ZWJob29rcyJ9LCJzcGVjIjp7InBvcnRzIjpbeyJwb3J0Ijo4MDgxLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjgwODF9XSwic2VsZWN0b3IiOnsiYXBwIjoidGFnZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0YWdzLnRhZ2dlci5kZXYifSwic3BlYyI6eyJncm91cCI6InRhZ2dlci5kZXYiLCJuYW1lcyI6eyJraW5kIjoiVGFnIiwibGlzdEtpbmQiOiJUYWdMaXN0IiwicGx1cmFsIjoidGFncyIsInNpbmd1bGFyIjoidGFnIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBnZW5lcmF0aW9uIiwianNvblBhdGgiOiIuc3BlYy5nZW5lcmF0aW9uIiwibmFtZSI6ImdlbmVyYXRpb24iLCJ0eXBlIjoiaW50ZWdlciJ9LHsiZGVzY3JpcHRpb24iOiJNaXJyb3JpbmciLCJqc29uUGF0aCI6Ii5zcGVjLm1pcnJvciIsIm5hbWUiOiJtaXJyb3IiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsiZGVzY3JpcHRpb24iOiJDdXJyZW50IGltYWdlIHNvdXJjZSIsImpzb25QYXRoIjoiLnNwZWMuZnJvbSIsIm5hbWUiOiJmcm9tIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYmV0YTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsic3BlYyI6eyJwcm9wZXJ0aWVzIjp7ImZyb20iOnsidHlwZSI6InN0cmluZyJ9LCJnZW5lcmF0aW9uIjp7InR5cGUiOiJpbnRlZ2VyIn0sIm1pcnJvciI6eyJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsicHJvcGVydGllcyI6eyJnZW5lcmF0aW9uIjp7InR5cGUiOiJpbnRlZ2VyIn0sImxhc3RJbXBvcnRBdHRlbXB0Ijp7InByb3BlcnRpZXMiOnsicmVhc29uIjp7InR5cGUiOiJzdHJpbmcifSwic3VjY2VlZCI6eyJ0eXBlIjoiYm9vbGVhbiJ9LCJ3aGVuIjp7Im51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInJlZmVyZW5jZXMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJmcm9tIjp7InR5cGUiOiJzdHJpbmcifSwiZ2VuZXJhdGlvbiI6eyJ0eXBlIjoiaW50ZWdlciJ9LCJpbWFnZVJlZmVyZW5jZSI6eyJ0eXBlIjoic3RyaW5nIn0sImltcG9ydGVkQXQiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJhdXRvbW91bnRTZXJ2aWNlQWNjb3VudFRva2VuIjp0cnVlLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6InRhZ2dlciJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoidGFnaW8tZXh0ZXJuYWwifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6ODA4MywidGFyZ2V0UG9ydCI6ODA4M31dLCJzZWxlY3RvciI6eyJhcHAiOiJ0YWdnZXIifSwidHlwZSI6IkxvYWRCYWxhbmNlciJ9LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoidGFnaW8ifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6ODA4MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo4MDgzfV0sInNlbGVjdG9yIjp7ImFwcCI6InRhZ2dlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
  - image: quay.io/openshift-community-operators/tagger@sha256:76370f19d3295a9e1e0a1782c43f1f8786df95a867a1a498dd32d9fd309dd006
    name: ""
  - image: quay.io/tagger/operator:v2.1.17
    name: ""
schema: olm.bundle
