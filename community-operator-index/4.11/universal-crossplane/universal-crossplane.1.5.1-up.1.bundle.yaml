image: quay.io/openshift-community-operators/universal-crossplane@sha256:b3104adb471083de96d49fa53f663dcf0e3e7ff5e3573bb1422aa6045277bea0
name: universal-crossplane.1.5.1-up.1
package: universal-crossplane
properties:
  - type: olm.gvk
    value:
      group: apiextensions.crossplane.io
      kind: CompositeResourceDefinition
      version: v1
  - type: olm.gvk
    value:
      group: apiextensions.crossplane.io
      kind: CompositeResourceDefinition
      version: v1beta1
  - type: olm.gvk
    value:
      group: apiextensions.crossplane.io
      kind: Composition
      version: v1
  - type: olm.gvk
    value:
      group: apiextensions.crossplane.io
      kind: Composition
      version: v1beta1
  - type: olm.gvk
    value:
      group: apiextensions.crossplane.io
      kind: CompositionRevision
      version: v1alpha1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: Configuration
      version: v1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: Configuration
      version: v1beta1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: ConfigurationRevision
      version: v1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: ConfigurationRevision
      version: v1beta1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: ControllerConfig
      version: v1alpha1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: Lock
      version: v1alpha1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: Lock
      version: v1beta1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: Provider
      version: v1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: Provider
      version: v1beta1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: ProviderRevision
      version: v1
  - type: olm.gvk
    value:
      group: pkg.crossplane.io
      kind: ProviderRevision
      version: v1beta1
  - type: olm.package
    value:
      packageName: universal-crossplane
      version: 1.5.1-up.1
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMiJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNvbXBvc2l0ZXJlc291cmNlZGVmaW5pdGlvbnMuYXBpZXh0ZW5zaW9ucy5jcm9zc3BsYW5lLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJhcGlleHRlbnNpb25zLmNyb3NzcGxhbmUuaW8iLCJuYW1lcyI6eyJjYXRlZ29yaWVzIjpbImNyb3NzcGxhbmUiXSwia2luZCI6IkNvbXBvc2l0ZVJlc291cmNlRGVmaW5pdGlvbiIsImxpc3RLaW5kIjoiQ29tcG9zaXRlUmVzb3VyY2VEZWZpbml0aW9uTGlzdCIsInBsdXJhbCI6ImNvbXBvc2l0ZXJlc291cmNlZGVmaW5pdGlvbnMiLCJzaG9ydE5hbWVzIjpbInhyZCIsInhyZHMiXSwic2luZ3VsYXIiOiJjb21wb3NpdGVyZXNvdXJjZWRlZmluaXRpb24ifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLmNvbmRpdGlvbnNbPyhALnR5cGU9PSdFc3RhYmxpc2hlZCcpXS5zdGF0dXMiLCJuYW1lIjoiRVNUQUJMSVNIRUQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuY29uZGl0aW9uc1s/KEAudHlwZT09J09mZmVyZWQnKV0uc3RhdHVzIiwibmFtZSI6Ik9GRkVSRUQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBR0UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkFuIENvbXBvc2l0ZVJlc291cmNlRGVmaW5pdGlvbiBkZWZpbmVzIGEgbmV3IGtpbmQgb2YgY29tcG9zaXRlIGluZnJhc3RydWN0dXJlIHJlc291cmNlLiBUaGUgbmV3IHJlc291cmNlIGlzIGNvbXBvc2VkIG9mIG90aGVyIGNvbXBvc2l0ZSBvciBtYW5hZ2VkIGluZnJhc3RydWN0dXJlIHJlc291cmNlcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvbXBvc2l0ZVJlc291cmNlRGVmaW5pdGlvblNwZWMgc3BlY2lmaWVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSBkZWZpbml0aW9uLiIsInByb3BlcnRpZXMiOnsiY2xhaW1OYW1lcyI6eyJkZXNjcmlwdGlvbiI6IkNsYWltTmFtZXMgc3BlY2lmaWVzIHRoZSBuYW1lcyBvZiBhbiBvcHRpb25hbCBjb21wb3NpdGUgcmVzb3VyY2UgY2xhaW0uIFdoZW4gY2xhaW0gbmFtZXMgYXJlIHNwZWNpZmllZCBDcm9zc3BsYW5lIHdpbGwgY3JlYXRlIGEgbmFtZXNwYWNlZCAnY29tcG9zaXRlIHJlc291cmNlIGNsYWltJyBDUkQgdGhhdCBjb3JyZXNwb25kcyB0byB0aGUgZGVmaW5lZCBjb21wb3NpdGUgcmVzb3VyY2UuIFRoaXMgY29tcG9zaXRlIHJlc291cmNlIGNsYWltIGFjdHMgYXMgYSBuYW1lc3BhY2VkIHByb3h5IGZvciB0aGUgY29tcG9zaXRlIHJlc291cmNlOyBjcmVhdGluZywgdXBkYXRpbmcsIG9yIGRlbGV0aW5nIHRoZSBjbGFpbSB3aWxsIGNyZWF0ZSwgdXBkYXRlLCBvciBkZWxldGUgYSBjb3JyZXNwb25kaW5nIGNvbXBvc2l0ZSByZXNvdXJjZS4gWW91IG1heSBhZGQgY2xhaW0gbmFtZXMgdG8gYW4gZXhpc3RpbmcgQ29tcG9zaXRlUmVzb3VyY2VEZWZpbml0aW9uLCBidXQgdGhleSBjYW5ub3QgYmUgY2hhbmdlZCBvciByZW1vdmVkIG9uY2UgdGhleSBoYXZlIGJlZW4gc2V0LiIsInByb3BlcnRpZXMiOnsiY2F0ZWdvcmllcyI6eyJkZXNjcmlwdGlvbiI6ImNhdGVnb3JpZXMgaXMgYSBsaXN0IG9mIGdyb3VwZWQgcmVzb3VyY2VzIHRoaXMgY3VzdG9tIHJlc291cmNlIGJlbG9uZ3MgdG8gKGUuZy4gJ2FsbCcpLiBUaGlzIGlzIHB1Ymxpc2hlZCBpbiBBUEkgZGlzY292ZXJ5IGRvY3VtZW50cywgYW5kIHVzZWQgYnkgY2xpZW50cyB0byBzdXBwb3J0IGludm9jYXRpb25zIGxpa2UgYGt1YmVjdGwgZ2V0IGFsbGAuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6ImtpbmQgaXMgdGhlIHNlcmlhbGl6ZWQga2luZCBvZiB0aGUgcmVzb3VyY2UuIEl0IGlzIG5vcm1hbGx5IENhbWVsQ2FzZSBhbmQgc2luZ3VsYXIuIEN1c3RvbSByZXNvdXJjZSBpbnN0YW5jZXMgd2lsbCB1c2UgdGhpcyB2YWx1ZSBhcyB0aGUgYGtpbmRgIGF0dHJpYnV0ZSBpbiBBUEkgY2FsbHMuIiwidHlwZSI6InN0cmluZyJ9LCJsaXN0S2luZCI6eyJkZXNjcmlwdGlvbiI6Imxpc3RLaW5kIGlzIHRoZSBzZXJpYWxpemVkIGtpbmQgb2YgdGhlIGxpc3QgZm9yIHRoaXMgcmVzb3VyY2UuIERlZmF1bHRzIHRvIFwiYGtpbmRgTGlzdFwiLiIsInR5cGUiOiJzdHJpbmcifSwicGx1cmFsIjp7ImRlc2NyaXB0aW9uIjoicGx1cmFsIGlzIHRoZSBwbHVyYWwgbmFtZSBvZiB0aGUgcmVzb3VyY2UgdG8gc2VydmUuIFRoZSBjdXN0b20gcmVzb3VyY2VzIGFyZSBzZXJ2ZWQgdW5kZXIgYC9hcGlzL1x1MDAzY2dyb3VwXHUwMDNlL1x1MDAzY3ZlcnNpb25cdTAwM2UvLi4uL1x1MDAzY3BsdXJhbFx1MDAzZWAuIE11c3QgbWF0Y2ggdGhlIG5hbWUgb2YgdGhlIEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbiAoaW4gdGhlIGZvcm0gYFx1MDAzY25hbWVzLnBsdXJhbFx1MDAzZS5cdTAwM2Nncm91cFx1MDAzZWApLiBNdXN0IGJlIGFsbCBsb3dlcmNhc2UuIiwidHlwZSI6InN0cmluZyJ9LCJzaG9ydE5hbWVzIjp7ImRlc2NyaXB0aW9uIjoic2hvcnROYW1lcyBhcmUgc2hvcnQgbmFtZXMgZm9yIHRoZSByZXNvdXJjZSwgZXhwb3NlZCBpbiBBUEkgZGlzY292ZXJ5IGRvY3VtZW50cywgYW5kIHVzZWQgYnkgY2xpZW50cyB0byBzdXBwb3J0IGludm9jYXRpb25zIGxpa2UgYGt1YmVjdGwgZ2V0IFx1MDAzY3Nob3J0bmFtZVx1MDAzZWAuIEl0IG11c3QgYmUgYWxsIGxvd2VyY2FzZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJzaW5ndWxhciI6eyJkZXNjcmlwdGlvbiI6InNpbmd1bGFyIGlzIHRoZSBzaW5ndWxhciBuYW1lIG9mIHRoZSByZXNvdXJjZS4gSXQgbXVzdCBiZSBhbGwgbG93ZXJjYXNlLiBEZWZhdWx0cyB0byBsb3dlcmNhc2VkIGBraW5kYC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJraW5kIiwicGx1cmFsIl0sInR5cGUiOiJvYmplY3QifSwiY29ubmVjdGlvblNlY3JldEtleXMiOnsiZGVzY3JpcHRpb24iOiJDb25uZWN0aW9uU2VjcmV0S2V5cyBpcyB0aGUgbGlzdCBvZiBrZXlzIHRoYXQgd2lsbCBiZSBleHBvc2VkIHRvIHRoZSBlbmQgdXNlciBvZiB0aGUgZGVmaW5lZCBraW5kLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImRlZmF1bHRDb21wb3NpdGlvblJlZiI6eyJkZXNjcmlwdGlvbiI6IkRlZmF1bHRDb21wb3NpdGlvblJlZiByZWZlcnMgdG8gdGhlIENvbXBvc2l0aW9uIHJlc291cmNlIHRoYXQgd2lsbCBiZSB1c2VkIGluIGNhc2Ugbm8gY29tcG9zaXRpb24gc2VsZWN0b3IgaXMgZ2l2ZW4uIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbmNlZCBvYmplY3QuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImVuZm9yY2VkQ29tcG9zaXRpb25SZWYiOnsiZGVzY3JpcHRpb24iOiJFbmZvcmNlZENvbXBvc2l0aW9uUmVmIHJlZmVycyB0byB0aGUgQ29tcG9zaXRpb24gcmVzb3VyY2UgdGhhdCB3aWxsIGJlIHVzZWQgYnkgYWxsIGNvbXBvc2l0ZSBpbnN0YW5jZXMgd2hvc2Ugc2NoZW1hIGlzIGRlZmluZWQgYnkgdGhpcyBkZWZpbml0aW9uLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW5jZWQgb2JqZWN0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJncm91cCI6eyJkZXNjcmlwdGlvbiI6Ikdyb3VwIHNwZWNpZmllcyB0aGUgQVBJIGdyb3VwIG9mIHRoZSBkZWZpbmVkIGNvbXBvc2l0ZSByZXNvdXJjZS4gQ29tcG9zaXRlIHJlc291cmNlcyBhcmUgc2VydmVkIHVuZGVyIGAvYXBpcy9cdTAwM2Nncm91cFx1MDAzZS8uLi5gLiBNdXN0IG1hdGNoIHRoZSBuYW1lIG9mIHRoZSBYUkQgKGluIHRoZSBmb3JtIGBcdTAwM2NuYW1lcy5wbHVyYWxcdTAwM2UuXHUwMDNjZ3JvdXBcdTAwM2VgKS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXMgc3BlY2lmaWVzIHRoZSByZXNvdXJjZSBhbmQga2luZCBuYW1lcyBvZiB0aGUgZGVmaW5lZCBjb21wb3NpdGUgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJjYXRlZ29yaWVzIjp7ImRlc2NyaXB0aW9uIjoiY2F0ZWdvcmllcyBpcyBhIGxpc3Qgb2YgZ3JvdXBlZCByZXNvdXJjZXMgdGhpcyBjdXN0b20gcmVzb3VyY2UgYmVsb25ncyB0byAoZS5nLiAnYWxsJykuIFRoaXMgaXMgcHVibGlzaGVkIGluIEFQSSBkaXNjb3ZlcnkgZG9jdW1lbnRzLCBhbmQgdXNlZCBieSBjbGllbnRzIHRvIHN1cHBvcnQgaW52b2NhdGlvbnMgbGlrZSBga3ViZWN0bCBnZXQgYWxsYC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoia2luZCBpcyB0aGUgc2VyaWFsaXplZCBraW5kIG9mIHRoZSByZXNvdXJjZS4gSXQgaXMgbm9ybWFsbHkgQ2FtZWxDYXNlIGFuZCBzaW5ndWxhci4gQ3VzdG9tIHJlc291cmNlIGluc3RhbmNlcyB3aWxsIHVzZSB0aGlzIHZhbHVlIGFzIHRoZSBga2luZGAgYXR0cmlidXRlIGluIEFQSSBjYWxscy4iLCJ0eXBlIjoic3RyaW5nIn0sImxpc3RLaW5kIjp7ImRlc2NyaXB0aW9uIjoibGlzdEtpbmQgaXMgdGhlIHNlcmlhbGl6ZWQga2luZCBvZiB0aGUgbGlzdCBmb3IgdGhpcyByZXNvdXJjZS4gRGVmYXVsdHMgdG8gXCJga2luZGBMaXN0XCIuIiwidHlwZSI6InN0cmluZyJ9LCJwbHVyYWwiOnsiZGVzY3JpcHRpb24iOiJwbHVyYWwgaXMgdGhlIHBsdXJhbCBuYW1lIG9mIHRoZSByZXNvdXJjZSB0byBzZXJ2ZS4gVGhlIGN1c3RvbSByZXNvdXJjZXMgYXJlIHNlcnZlZCB1bmRlciBgL2FwaXMvXHUwMDNjZ3JvdXBcdTAwM2UvXHUwMDNjdmVyc2lvblx1MDAzZS8uLi4vXHUwMDNjcGx1cmFsXHUwMDNlYC4gTXVzdCBtYXRjaCB0aGUgbmFtZSBvZiB0aGUgQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIChpbiB0aGUgZm9ybSBgXHUwMDNjbmFtZXMucGx1cmFsXHUwMDNlLlx1MDAzY2dyb3VwXHUwMDNlYCkuIE11c3QgYmUgYWxsIGxvd2VyY2FzZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNob3J0TmFtZXMiOnsiZGVzY3JpcHRpb24iOiJzaG9ydE5hbWVzIGFyZSBzaG9ydCBuYW1lcyBmb3IgdGhlIHJlc291cmNlLCBleHBvc2VkIGluIEFQSSBkaXNjb3ZlcnkgZG9jdW1lbnRzLCBhbmQgdXNlZCBieSBjbGllbnRzIHRvIHN1cHBvcnQgaW52b2NhdGlvbnMgbGlrZSBga3ViZWN0bCBnZXQgXHUwMDNjc2hvcnRuYW1lXHUwMDNlYC4gSXQgbXVzdCBiZSBhbGwgbG93ZXJjYXNlLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInNpbmd1bGFyIjp7ImRlc2NyaXB0aW9uIjoic2luZ3VsYXIgaXMgdGhlIHNpbmd1bGFyIG5hbWUgb2YgdGhlIHJlc291cmNlLiBJdCBtdXN0IGJlIGFsbCBsb3dlcmNhc2UuIERlZmF1bHRzIHRvIGxvd2VyY2FzZWQgYGtpbmRgLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJwbHVyYWwiXSwidHlwZSI6Im9iamVjdCJ9LCJ2ZXJzaW9ucyI6eyJkZXNjcmlwdGlvbiI6IlZlcnNpb25zIGlzIHRoZSBsaXN0IG9mIGFsbCBBUEkgdmVyc2lvbnMgb2YgdGhlIGRlZmluZWQgY29tcG9zaXRlIHJlc291cmNlLiBWZXJzaW9uIG5hbWVzIGFyZSB1c2VkIHRvIGNvbXB1dGUgdGhlIG9yZGVyIGluIHdoaWNoIHNlcnZlZCB2ZXJzaW9ucyBhcmUgbGlzdGVkIGluIEFQSSBkaXNjb3ZlcnkuIElmIHRoZSB2ZXJzaW9uIHN0cmluZyBpcyBcImt1YmUtbGlrZVwiLCBpdCB3aWxsIHNvcnQgYWJvdmUgbm9uIFwia3ViZS1saWtlXCIgdmVyc2lvbiBzdHJpbmdzLCB3aGljaCBhcmUgb3JkZXJlZCBsZXhpY29ncmFwaGljYWxseS4gXCJLdWJlLWxpa2VcIiB2ZXJzaW9ucyBzdGFydCB3aXRoIGEgXCJ2XCIsIHRoZW4gYXJlIGZvbGxvd2VkIGJ5IGEgbnVtYmVyICh0aGUgbWFqb3IgdmVyc2lvbiksIHRoZW4gb3B0aW9uYWxseSB0aGUgc3RyaW5nIFwiYWxwaGFcIiBvciBcImJldGFcIiBhbmQgYW5vdGhlciBudW1iZXIgKHRoZSBtaW5vciB2ZXJzaW9uKS4gVGhlc2UgYXJlIHNvcnRlZCBmaXJzdCBieSBHQSBcdTAwM2UgYmV0YSBcdTAwM2UgYWxwaGEgKHdoZXJlIEdBIGlzIGEgdmVyc2lvbiB3aXRoIG5vIHN1ZmZpeCBzdWNoIGFzIGJldGEgb3IgYWxwaGEpLCBhbmQgdGhlbiBieSBjb21wYXJpbmcgbWFqb3IgdmVyc2lvbiwgdGhlbiBtaW5vciB2ZXJzaW9uLiBBbiBleGFtcGxlIHNvcnRlZCBsaXN0IG9mIHZlcnNpb25zOiB2MTAsIHYyLCB2MSwgdjExYmV0YTIsIHYxMGJldGEzLCB2M2JldGExLCB2MTJhbHBoYTEsIHYxMWFscGhhMiwgZm9vMSwgZm9vMTAuIE5vdGUgdGhhdCBhbGwgdmVyc2lvbnMgbXVzdCBoYXZlIGlkZW50aWNhbCBzY2hlbWFzOyBDcm9zc3BsYW5lIGRvZXMgbm90IGN1cnJlbnRseSBzdXBwb3J0IGNvbnZlcnNpb24gYmV0d2VlbiBkaWZmZXJlbnQgdmVyc2lvbiBzY2hlbWFzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29tcG9zaXRlUmVzb3VyY2VEZWZpbml0aW9uVmVyc2lvbiBkZXNjcmliZXMgYSB2ZXJzaW9uIG9mIGFuIFhSLiIsInByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjp7ImRlc2NyaXB0aW9uIjoiQWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIHNwZWNpZmllcyBhZGRpdGlvbmFsIGNvbHVtbnMgcmV0dXJuZWQgaW4gVGFibGUgb3V0cHV0LiBJZiBubyBjb2x1bW5zIGFyZSBzcGVjaWZpZWQsIGEgc2luZ2xlIGNvbHVtbiBkaXNwbGF5aW5nIHRoZSBhZ2Ugb2YgdGhlIGN1c3RvbSByZXNvdXJjZSBpcyB1c2VkLiBTZWUgdGhlIGZvbGxvd2luZyBsaW5rIGZvciBkZXRhaWxzOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9yZWZlcmVuY2UvdXNpbmctYXBpL2FwaS1jb25jZXB0cy8jcmVjZWl2aW5nLXJlc291cmNlcy1hcy10YWJsZXMiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkN1c3RvbVJlc291cmNlQ29sdW1uRGVmaW5pdGlvbiBzcGVjaWZpZXMgYSBjb2x1bW4gZm9yIHNlcnZlciBzaWRlIHByaW50aW5nLiIsInByb3BlcnRpZXMiOnsiZGVzY3JpcHRpb24iOnsiZGVzY3JpcHRpb24iOiJkZXNjcmlwdGlvbiBpcyBhIGh1bWFuIHJlYWRhYmxlIGRlc2NyaXB0aW9uIG9mIHRoaXMgY29sdW1uLiIsInR5cGUiOiJzdHJpbmcifSwiZm9ybWF0Ijp7ImRlc2NyaXB0aW9uIjoiZm9ybWF0IGlzIGFuIG9wdGlvbmFsIE9wZW5BUEkgdHlwZSBkZWZpbml0aW9uIGZvciB0aGlzIGNvbHVtbi4gVGhlICduYW1lJyBmb3JtYXQgaXMgYXBwbGllZCB0byB0aGUgcHJpbWFyeSBpZGVudGlmaWVyIGNvbHVtbiB0byBhc3Npc3QgaW4gY2xpZW50cyBpZGVudGlmeWluZyBjb2x1bW4gaXMgdGhlIHJlc291cmNlIG5hbWUuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vT0FJL09wZW5BUEktU3BlY2lmaWNhdGlvbi9ibG9iL21hc3Rlci92ZXJzaW9ucy8yLjAubWQjZGF0YS10eXBlcyBmb3IgZGV0YWlscy4iLCJ0eXBlIjoic3RyaW5nIn0sImpzb25QYXRoIjp7ImRlc2NyaXB0aW9uIjoianNvblBhdGggaXMgYSBzaW1wbGUgSlNPTiBwYXRoIChpLmUuIHdpdGggYXJyYXkgbm90YXRpb24pIHdoaWNoIGlzIGV2YWx1YXRlZCBhZ2FpbnN0IGVhY2ggY3VzdG9tIHJlc291cmNlIHRvIHByb2R1Y2UgdGhlIHZhbHVlIGZvciB0aGlzIGNvbHVtbi4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIGlzIGEgaHVtYW4gcmVhZGFibGUgbmFtZSBmb3IgdGhlIGNvbHVtbi4iLCJ0eXBlIjoic3RyaW5nIn0sInByaW9yaXR5Ijp7ImRlc2NyaXB0aW9uIjoicHJpb3JpdHkgaXMgYW4gaW50ZWdlciBkZWZpbmluZyB0aGUgcmVsYXRpdmUgaW1wb3J0YW5jZSBvZiB0aGlzIGNvbHVtbiBjb21wYXJlZCB0byBvdGhlcnMuIExvd2VyIG51bWJlcnMgYXJlIGNvbnNpZGVyZWQgaGlnaGVyIHByaW9yaXR5LiBDb2x1bW5zIHRoYXQgbWF5IGJlIG9taXR0ZWQgaW4gbGltaXRlZCBzcGFjZSBzY2VuYXJpb3Mgc2hvdWxkIGJlIGdpdmVuIGEgcHJpb3JpdHkgZ3JlYXRlciB0aGFuIDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBpcyBhbiBPcGVuQVBJIHR5cGUgZGVmaW5pdGlvbiBmb3IgdGhpcyBjb2x1bW4uIFNlZSBodHRwczovL2dpdGh1Yi5jb20vT0FJL09wZW5BUEktU3BlY2lmaWNhdGlvbi9ibG9iL21hc3Rlci92ZXJzaW9ucy8yLjAubWQjZGF0YS10eXBlcyBmb3IgZGV0YWlscy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJqc29uUGF0aCIsIm5hbWUiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoaXMgdmVyc2lvbiwgZS5nLiDigJx2MeKAnSwg4oCcdjJiZXRhMeKAnSwgZXRjLiBDb21wb3NpdGUgcmVzb3VyY2VzIGFyZSBzZXJ2ZWQgdW5kZXIgdGhpcyB2ZXJzaW9uIGF0IGAvYXBpcy9cdTAwM2Nncm91cFx1MDAzZS9cdTAwM2N2ZXJzaW9uXHUwMDNlLy4uLmAgaWYgYHNlcnZlZGAgaXMgdHJ1ZS4iLCJ0eXBlIjoic3RyaW5nIn0sInJlZmVyZW5jZWFibGUiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2VhYmxlIHNwZWNpZmllcyB0aGF0IHRoaXMgdmVyc2lvbiBtYXkgYmUgcmVmZXJlbmNlZCBieSBhIENvbXBvc2l0aW9uIGluIG9yZGVyIHRvIGNvbmZpZ3VyZSB3aGljaCByZXNvdXJjZXMgYW4gWFIgbWF5IGJlIGNvbXBvc2VkIG9mLiBFeGFjdGx5IG9uZSB2ZXJzaW9uIG11c3QgYmUgbWFya2VkIGFzIHJlZmVyZW5jZWFibGU7IGFsbCBDb21wb3NpdGlvbnMgbXVzdCB0YXJnZXQgb25seSB0aGUgcmVmZXJlbmNlYWJsZSB2ZXJzaW9uLiBUaGUgcmVmZXJlbmNlYWJsZSB2ZXJzaW9uIG11c3QgYmUgc2VydmVkLiIsInR5cGUiOiJib29sZWFuIn0sInNjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVtYSBkZXNjcmliZXMgdGhlIHNjaGVtYSB1c2VkIGZvciB2YWxpZGF0aW9uLCBwcnVuaW5nLCBhbmQgZGVmYXVsdGluZyBvZiB0aGlzIHZlcnNpb24gb2YgdGhlIGRlZmluZWQgY29tcG9zaXRlIHJlc291cmNlLiBGaWVsZHMgcmVxdWlyZWQgYnkgYWxsIGNvbXBvc2l0ZSByZXNvdXJjZXMgd2lsbCBiZSBpbmplY3RlZCBpbnRvIHRoaXMgc2NoZW1hIGF1dG9tYXRpY2FsbHksIGFuZCB3aWxsIG92ZXJyaWRlIGVxdWl2YWxlbnRseSBuYW1lZCBmaWVsZHMgaW4gdGhpcyBzY2hlbWEuIE9taXR0aW5nIHRoaXMgc2NoZW1hIHJlc3VsdHMgaW4gYSBzY2hlbWEgdGhhdCBjb250YWlucyBvbmx5IHRoZSBmaWVsZHMgcmVxdWlyZWQgYnkgYWxsIGNvbXBvc2l0ZSByZXNvdXJjZXMuIiwicHJvcGVydGllcyI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJPcGVuQVBJVjNTY2hlbWEgaXMgdGhlIE9wZW5BUEkgdjMgc2NoZW1hIHRvIHVzZSBmb3IgdmFsaWRhdGlvbiBhbmQgcHJ1bmluZy4iLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwic2VydmVkIjp7ImRlc2NyaXB0aW9uIjoiU2VydmVkIHNwZWNpZmllcyB0aGF0IHRoaXMgdmVyc2lvbiBzaG91bGQgYmUgc2VydmVkIHZpYSBSRVNUIEFQSXMuIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJyZWZlcmVuY2VhYmxlIiwic2VydmVkIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJncm91cCIsIm5hbWVzIiwidmVyc2lvbnMiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDb21wb3NpdGVSZXNvdXJjZURlZmluaXRpb25TdGF0dXMgc2hvd3MgdGhlIG9ic2VydmVkIHN0YXRlIG9mIHRoZSBkZWZpbml0aW9uLiIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgb2YgdGhlIHJlc291cmNlLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBDb25kaXRpb24gdGhhdCBtYXkgYXBwbHkgdG8gYSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoaXMgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLCBpZiBhbnkuIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJBIFJlYXNvbiBmb3IgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhpcyBjb25kaXRpb247IGlzIGl0IGN1cnJlbnRseSBUcnVlLCBGYWxzZSwgb3IgVW5rbm93bj8iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoaXMgY29uZGl0aW9uLiBBdCBtb3N0IG9uZSBvZiBlYWNoIGNvbmRpdGlvbiB0eXBlIG1heSBhcHBseSB0byBhIHJlc291cmNlIGF0IGFueSBwb2ludCBpbiB0aW1lLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiY29udHJvbGxlcnMiOnsiZGVzY3JpcHRpb24iOiJDb250cm9sbGVycyByZXByZXNlbnRzIHRoZSBzdGF0dXMgb2YgdGhlIGNvbnRyb2xsZXJzIHRoYXQgcG93ZXIgdGhpcyBjb21wb3NpdGUgcmVzb3VyY2UgZGVmaW5pdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNvbXBvc2l0ZVJlc291cmNlQ2xhaW1UeXBlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIENvbXBvc2l0ZVJlc291cmNlQ2xhaW1UeXBlUmVmIGlzIHRoZSB0eXBlIG9mIGNvbXBvc2l0ZSByZXNvdXJjZSBjbGFpbSB0aGF0IENyb3NzcGxhbmUgaXMgY3VycmVudGx5IHJlY29uY2lsaW5nIGZvciB0aGlzIGRlZmluaXRpb24uIEl0cyB2ZXJzaW9uIHdpbGwgZXZlbnR1YWxseSBiZWNvbWUgY29uc2lzdGVudCB3aXRoIHRoZSBkZWZpbml0aW9uJ3MgcmVmZXJlbmNlYWJsZSB2ZXJzaW9uLiBOb3RlIHRoYXQgY2xpZW50cyBtYXkgaW50ZXJhY3Qgd2l0aCBhbnkgc2VydmVkIHR5cGU7IHRoaXMgaXMgc2ltcGx5IHRoZSB0eXBlIHRoYXQgQ3Jvc3NwbGFuZSBpbnRlcmFjdHMgd2l0aC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIG9mIHRoZSB0eXBlLiIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2YgdGhlIHR5cGUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXBpVmVyc2lvbiIsImtpbmQiXSwidHlwZSI6Im9iamVjdCJ9LCJjb21wb3NpdGVSZXNvdXJjZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgQ29tcG9zaXRlUmVzb3VyY2VUeXBlUmVmIGlzIHRoZSB0eXBlIG9mIGNvbXBvc2l0ZSByZXNvdXJjZSB0aGF0IENyb3NzcGxhbmUgaXMgY3VycmVudGx5IHJlY29uY2lsaW5nIGZvciB0aGlzIGRlZmluaXRpb24uIEl0cyB2ZXJzaW9uIHdpbGwgZXZlbnR1YWxseSBiZWNvbWUgY29uc2lzdGVudCB3aXRoIHRoZSBkZWZpbml0aW9uJ3MgcmVmZXJlbmNlYWJsZSB2ZXJzaW9uLiBOb3RlIHRoYXQgY2xpZW50cyBtYXkgaW50ZXJhY3Qgd2l0aCBhbnkgc2VydmVkIHR5cGU7IHRoaXMgaXMgc2ltcGx5IHRoZSB0eXBlIHRoYXQgQ3Jvc3NwbGFuZSBpbnRlcmFjdHMgd2l0aC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIG9mIHRoZSB0eXBlLiIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2YgdGhlIHR5cGUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXBpVmVyc2lvbiIsImtpbmQiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19LHsiYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuY29uZGl0aW9uc1s/KEAudHlwZT09J0VzdGFibGlzaGVkJyldLnN0YXR1cyIsIm5hbWUiOiJFU1RBQkxJU0hFRCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5jb25kaXRpb25zWz8oQC50eXBlPT0nT2ZmZXJlZCcpXS5zdGF0dXMiLCJuYW1lIjoiT0ZGRVJFRCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFHRSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjFiZXRhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJBbiBDb21wb3NpdGVSZXNvdXJjZURlZmluaXRpb24gZGVmaW5lcyBhIG5ldyBraW5kIG9mIGNvbXBvc2l0ZSBpbmZyYXN0cnVjdHVyZSByZXNvdXJjZS4gVGhlIG5ldyByZXNvdXJjZSBpcyBjb21wb3NlZCBvZiBvdGhlciBjb21wb3NpdGUgb3IgbWFuYWdlZCBpbmZyYXN0cnVjdHVyZSByZXNvdXJjZXMuIFtERVBSRUNBVEVEXTogUGxlYXNlIHVzZSB0aGUgaWRlbnRpY2FsIHYxIEFQSSBpbnN0ZWFkLiBUaGUgdjFiZXRhMSBBUEkgaXMgc2NoZWR1bGVkIHRvIGJlIHJlbW92ZWQgaW4gQ3Jvc3NwbGFuZSB2MS42LiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ29tcG9zaXRlUmVzb3VyY2VEZWZpbml0aW9uU3BlYyBzcGVjaWZpZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIGRlZmluaXRpb24uIiwicHJvcGVydGllcyI6eyJjbGFpbU5hbWVzIjp7ImRlc2NyaXB0aW9uIjoiQ2xhaW1OYW1lcyBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIGFuIG9wdGlvbmFsIGNvbXBvc2l0ZSByZXNvdXJjZSBjbGFpbS4gV2hlbiBjbGFpbSBuYW1lcyBhcmUgc3BlY2lmaWVkIENyb3NzcGxhbmUgd2lsbCBjcmVhdGUgYSBuYW1lc3BhY2VkICdjb21wb3NpdGUgcmVzb3VyY2UgY2xhaW0nIENSRCB0aGF0IGNvcnJlc3BvbmRzIHRvIHRoZSBkZWZpbmVkIGNvbXBvc2l0ZSByZXNvdXJjZS4gVGhpcyBjb21wb3NpdGUgcmVzb3VyY2UgY2xhaW0gYWN0cyBhcyBhIG5hbWVzcGFjZWQgcHJveHkgZm9yIHRoZSBjb21wb3NpdGUgcmVzb3VyY2U7IGNyZWF0aW5nLCB1cGRhdGluZywgb3IgZGVsZXRpbmcgdGhlIGNsYWltIHdpbGwgY3JlYXRlLCB1cGRhdGUsIG9yIGRlbGV0ZSBhIGNvcnJlc3BvbmRpbmcgY29tcG9zaXRlIHJlc291cmNlLiBZb3UgbWF5IGFkZCBjbGFpbSBuYW1lcyB0byBhbiBleGlzdGluZyBDb21wb3NpdGVSZXNvdXJjZURlZmluaXRpb24sIGJ1dCB0aGV5IGNhbm5vdCBiZSBjaGFuZ2VkIG9yIHJlbW92ZWQgb25jZSB0aGV5IGhhdmUgYmVlbiBzZXQuIiwicHJvcGVydGllcyI6eyJjYXRlZ29yaWVzIjp7ImRlc2NyaXB0aW9uIjoiY2F0ZWdvcmllcyBpcyBhIGxpc3Qgb2YgZ3JvdXBlZCByZXNvdXJjZXMgdGhpcyBjdXN0b20gcmVzb3VyY2UgYmVsb25ncyB0byAoZS5nLiAnYWxsJykuIFRoaXMgaXMgcHVibGlzaGVkIGluIEFQSSBkaXNjb3ZlcnkgZG9jdW1lbnRzLCBhbmQgdXNlZCBieSBjbGllbnRzIHRvIHN1cHBvcnQgaW52b2NhdGlvbnMgbGlrZSBga3ViZWN0bCBnZXQgYWxsYC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoia2luZCBpcyB0aGUgc2VyaWFsaXplZCBraW5kIG9mIHRoZSByZXNvdXJjZS4gSXQgaXMgbm9ybWFsbHkgQ2FtZWxDYXNlIGFuZCBzaW5ndWxhci4gQ3VzdG9tIHJlc291cmNlIGluc3RhbmNlcyB3aWxsIHVzZSB0aGlzIHZhbHVlIGFzIHRoZSBga2luZGAgYXR0cmlidXRlIGluIEFQSSBjYWxscy4iLCJ0eXBlIjoic3RyaW5nIn0sImxpc3RLaW5kIjp7ImRlc2NyaXB0aW9uIjoibGlzdEtpbmQgaXMgdGhlIHNlcmlhbGl6ZWQga2luZCBvZiB0aGUgbGlzdCBmb3IgdGhpcyByZXNvdXJjZS4gRGVmYXVsdHMgdG8gXCJga2luZGBMaXN0XCIuIiwidHlwZSI6InN0cmluZyJ9LCJwbHVyYWwiOnsiZGVzY3JpcHRpb24iOiJwbHVyYWwgaXMgdGhlIHBsdXJhbCBuYW1lIG9mIHRoZSByZXNvdXJjZSB0byBzZXJ2ZS4gVGhlIGN1c3RvbSByZXNvdXJjZXMgYXJlIHNlcnZlZCB1bmRlciBgL2FwaXMvXHUwMDNjZ3JvdXBcdTAwM2UvXHUwMDNjdmVyc2lvblx1MDAzZS8uLi4vXHUwMDNjcGx1cmFsXHUwMDNlYC4gTXVzdCBtYXRjaCB0aGUgbmFtZSBvZiB0aGUgQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIChpbiB0aGUgZm9ybSBgXHUwMDNjbmFtZXMucGx1cmFsXHUwMDNlLlx1MDAzY2dyb3VwXHUwMDNlYCkuIE11c3QgYmUgYWxsIGxvd2VyY2FzZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNob3J0TmFtZXMiOnsiZGVzY3JpcHRpb24iOiJzaG9ydE5hbWVzIGFyZSBzaG9ydCBuYW1lcyBmb3IgdGhlIHJlc291cmNlLCBleHBvc2VkIGluIEFQSSBkaXNjb3ZlcnkgZG9jdW1lbnRzLCBhbmQgdXNlZCBieSBjbGllbnRzIHRvIHN1cHBvcnQgaW52b2NhdGlvbnMgbGlrZSBga3ViZWN0bCBnZXQgXHUwMDNjc2hvcnRuYW1lXHUwMDNlYC4gSXQgbXVzdCBiZSBhbGwgbG93ZXJjYXNlLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInNpbmd1bGFyIjp7ImRlc2NyaXB0aW9uIjoic2luZ3VsYXIgaXMgdGhlIHNpbmd1bGFyIG5hbWUgb2YgdGhlIHJlc291cmNlLiBJdCBtdXN0IGJlIGFsbCBsb3dlcmNhc2UuIERlZmF1bHRzIHRvIGxvd2VyY2FzZWQgYGtpbmRgLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJwbHVyYWwiXSwidHlwZSI6Im9iamVjdCJ9LCJjb25uZWN0aW9uU2VjcmV0S2V5cyI6eyJkZXNjcmlwdGlvbiI6IkNvbm5lY3Rpb25TZWNyZXRLZXlzIGlzIHRoZSBsaXN0IG9mIGtleXMgdGhhdCB3aWxsIGJlIGV4cG9zZWQgdG8gdGhlIGVuZCB1c2VyIG9mIHRoZSBkZWZpbmVkIGtpbmQuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZGVmYXVsdENvbXBvc2l0aW9uUmVmIjp7ImRlc2NyaXB0aW9uIjoiRGVmYXVsdENvbXBvc2l0aW9uUmVmIHJlZmVycyB0byB0aGUgQ29tcG9zaXRpb24gcmVzb3VyY2UgdGhhdCB3aWxsIGJlIHVzZWQgaW4gY2FzZSBubyBjb21wb3NpdGlvbiBzZWxlY3RvciBpcyBnaXZlbi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVuY2VkIG9iamVjdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiZW5mb3JjZWRDb21wb3NpdGlvblJlZiI6eyJkZXNjcmlwdGlvbiI6IkVuZm9yY2VkQ29tcG9zaXRpb25SZWYgcmVmZXJzIHRvIHRoZSBDb21wb3NpdGlvbiByZXNvdXJjZSB0aGF0IHdpbGwgYmUgdXNlZCBieSBhbGwgY29tcG9zaXRlIGluc3RhbmNlcyB3aG9zZSBzY2hlbWEgaXMgZGVmaW5lZCBieSB0aGlzIGRlZmluaXRpb24uIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbmNlZCBvYmplY3QuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiR3JvdXAgc3BlY2lmaWVzIHRoZSBBUEkgZ3JvdXAgb2YgdGhlIGRlZmluZWQgY29tcG9zaXRlIHJlc291cmNlLiBDb21wb3NpdGUgcmVzb3VyY2VzIGFyZSBzZXJ2ZWQgdW5kZXIgYC9hcGlzL1x1MDAzY2dyb3VwXHUwMDNlLy4uLmAuIE11c3QgbWF0Y2ggdGhlIG5hbWUgb2YgdGhlIFhSRCAoaW4gdGhlIGZvcm0gYFx1MDAzY25hbWVzLnBsdXJhbFx1MDAzZS5cdTAwM2Nncm91cFx1MDAzZWApLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lcyBzcGVjaWZpZXMgdGhlIHJlc291cmNlIGFuZCBraW5kIG5hbWVzIG9mIHRoZSBkZWZpbmVkIGNvbXBvc2l0ZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImNhdGVnb3JpZXMiOnsiZGVzY3JpcHRpb24iOiJjYXRlZ29yaWVzIGlzIGEgbGlzdCBvZiBncm91cGVkIHJlc291cmNlcyB0aGlzIGN1c3RvbSByZXNvdXJjZSBiZWxvbmdzIHRvIChlLmcuICdhbGwnKS4gVGhpcyBpcyBwdWJsaXNoZWQgaW4gQVBJIGRpc2NvdmVyeSBkb2N1bWVudHMsIGFuZCB1c2VkIGJ5IGNsaWVudHMgdG8gc3VwcG9ydCBpbnZvY2F0aW9ucyBsaWtlIGBrdWJlY3RsIGdldCBhbGxgLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJraW5kIGlzIHRoZSBzZXJpYWxpemVkIGtpbmQgb2YgdGhlIHJlc291cmNlLiBJdCBpcyBub3JtYWxseSBDYW1lbENhc2UgYW5kIHNpbmd1bGFyLiBDdXN0b20gcmVzb3VyY2UgaW5zdGFuY2VzIHdpbGwgdXNlIHRoaXMgdmFsdWUgYXMgdGhlIGBraW5kYCBhdHRyaWJ1dGUgaW4gQVBJIGNhbGxzLiIsInR5cGUiOiJzdHJpbmcifSwibGlzdEtpbmQiOnsiZGVzY3JpcHRpb24iOiJsaXN0S2luZCBpcyB0aGUgc2VyaWFsaXplZCBraW5kIG9mIHRoZSBsaXN0IGZvciB0aGlzIHJlc291cmNlLiBEZWZhdWx0cyB0byBcImBraW5kYExpc3RcIi4iLCJ0eXBlIjoic3RyaW5nIn0sInBsdXJhbCI6eyJkZXNjcmlwdGlvbiI6InBsdXJhbCBpcyB0aGUgcGx1cmFsIG5hbWUgb2YgdGhlIHJlc291cmNlIHRvIHNlcnZlLiBUaGUgY3VzdG9tIHJlc291cmNlcyBhcmUgc2VydmVkIHVuZGVyIGAvYXBpcy9cdTAwM2Nncm91cFx1MDAzZS9cdTAwM2N2ZXJzaW9uXHUwMDNlLy4uLi9cdTAwM2NwbHVyYWxcdTAwM2VgLiBNdXN0IG1hdGNoIHRoZSBuYW1lIG9mIHRoZSBDdXN0b21SZXNvdXJjZURlZmluaXRpb24gKGluIHRoZSBmb3JtIGBcdTAwM2NuYW1lcy5wbHVyYWxcdTAwM2UuXHUwMDNjZ3JvdXBcdTAwM2VgKS4gTXVzdCBiZSBhbGwgbG93ZXJjYXNlLiIsInR5cGUiOiJzdHJpbmcifSwic2hvcnROYW1lcyI6eyJkZXNjcmlwdGlvbiI6InNob3J0TmFtZXMgYXJlIHNob3J0IG5hbWVzIGZvciB0aGUgcmVzb3VyY2UsIGV4cG9zZWQgaW4gQVBJIGRpc2NvdmVyeSBkb2N1bWVudHMsIGFuZCB1c2VkIGJ5IGNsaWVudHMgdG8gc3VwcG9ydCBpbnZvY2F0aW9ucyBsaWtlIGBrdWJlY3RsIGdldCBcdTAwM2NzaG9ydG5hbWVcdTAwM2VgLiBJdCBtdXN0IGJlIGFsbCBsb3dlcmNhc2UuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwic2luZ3VsYXIiOnsiZGVzY3JpcHRpb24iOiJzaW5ndWxhciBpcyB0aGUgc2luZ3VsYXIgbmFtZSBvZiB0aGUgcmVzb3VyY2UuIEl0IG11c3QgYmUgYWxsIGxvd2VyY2FzZS4gRGVmYXVsdHMgdG8gbG93ZXJjYXNlZCBga2luZGAuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsInBsdXJhbCJdLCJ0eXBlIjoib2JqZWN0In0sInZlcnNpb25zIjp7ImRlc2NyaXB0aW9uIjoiVmVyc2lvbnMgaXMgdGhlIGxpc3Qgb2YgYWxsIEFQSSB2ZXJzaW9ucyBvZiB0aGUgZGVmaW5lZCBjb21wb3NpdGUgcmVzb3VyY2UuIFZlcnNpb24gbmFtZXMgYXJlIHVzZWQgdG8gY29tcHV0ZSB0aGUgb3JkZXIgaW4gd2hpY2ggc2VydmVkIHZlcnNpb25zIGFyZSBsaXN0ZWQgaW4gQVBJIGRpc2NvdmVyeS4gSWYgdGhlIHZlcnNpb24gc3RyaW5nIGlzIFwia3ViZS1saWtlXCIsIGl0IHdpbGwgc29ydCBhYm92ZSBub24gXCJrdWJlLWxpa2VcIiB2ZXJzaW9uIHN0cmluZ3MsIHdoaWNoIGFyZSBvcmRlcmVkIGxleGljb2dyYXBoaWNhbGx5LiBcIkt1YmUtbGlrZVwiIHZlcnNpb25zIHN0YXJ0IHdpdGggYSBcInZcIiwgdGhlbiBhcmUgZm9sbG93ZWQgYnkgYSBudW1iZXIgKHRoZSBtYWpvciB2ZXJzaW9uKSwgdGhlbiBvcHRpb25hbGx5IHRoZSBzdHJpbmcgXCJhbHBoYVwiIG9yIFwiYmV0YVwiIGFuZCBhbm90aGVyIG51bWJlciAodGhlIG1pbm9yIHZlcnNpb24pLiBUaGVzZSBhcmUgc29ydGVkIGZpcnN0IGJ5IEdBIFx1MDAzZSBiZXRhIFx1MDAzZSBhbHBoYSAod2hlcmUgR0EgaXMgYSB2ZXJzaW9uIHdpdGggbm8gc3VmZml4IHN1Y2ggYXMgYmV0YSBvciBhbHBoYSksIGFuZCB0aGVuIGJ5IGNvbXBhcmluZyBtYWpvciB2ZXJzaW9uLCB0aGVuIG1pbm9yIHZlcnNpb24uIEFuIGV4YW1wbGUgc29ydGVkIGxpc3Qgb2YgdmVyc2lvbnM6IHYxMCwgdjIsIHYxLCB2MTFiZXRhMiwgdjEwYmV0YTMsIHYzYmV0YTEsIHYxMmFscGhhMSwgdjExYWxwaGEyLCBmb28xLCBmb28xMC4gTm90ZSB0aGF0IGFsbCB2ZXJzaW9ucyBtdXN0IGhhdmUgaWRlbnRpY2FsIHNjaGVtYXM7IENyb3NzcGxhbmUgZG9lcyBub3QgY3VycmVudGx5IHN1cHBvcnQgY29udmVyc2lvbiBiZXR3ZWVuIGRpZmZlcmVudCB2ZXJzaW9uIHNjaGVtYXMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDb21wb3NpdGVSZXNvdXJjZURlZmluaXRpb25WZXJzaW9uIGRlc2NyaWJlcyBhIHZlcnNpb24gb2YgYW4gWFIuIiwicHJvcGVydGllcyI6eyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOnsiZGVzY3JpcHRpb24iOiJBZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMgc3BlY2lmaWVzIGFkZGl0aW9uYWwgY29sdW1ucyByZXR1cm5lZCBpbiBUYWJsZSBvdXRwdXQuIElmIG5vIGNvbHVtbnMgYXJlIHNwZWNpZmllZCwgYSBzaW5nbGUgY29sdW1uIGRpc3BsYXlpbmcgdGhlIGFnZSBvZiB0aGUgY3VzdG9tIHJlc291cmNlIGlzIHVzZWQuIFNlZSB0aGUgZm9sbG93aW5nIGxpbmsgZm9yIGRldGFpbHM6IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL3JlZmVyZW5jZS91c2luZy1hcGkvYXBpLWNvbmNlcHRzLyNyZWNlaXZpbmctcmVzb3VyY2VzLWFzLXRhYmxlcyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ3VzdG9tUmVzb3VyY2VDb2x1bW5EZWZpbml0aW9uIHNwZWNpZmllcyBhIGNvbHVtbiBmb3Igc2VydmVyIHNpZGUgcHJpbnRpbmcuIiwicHJvcGVydGllcyI6eyJkZXNjcmlwdGlvbiI6eyJkZXNjcmlwdGlvbiI6ImRlc2NyaXB0aW9uIGlzIGEgaHVtYW4gcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhpcyBjb2x1bW4uIiwidHlwZSI6InN0cmluZyJ9LCJmb3JtYXQiOnsiZGVzY3JpcHRpb24iOiJmb3JtYXQgaXMgYW4gb3B0aW9uYWwgT3BlbkFQSSB0eXBlIGRlZmluaXRpb24gZm9yIHRoaXMgY29sdW1uLiBUaGUgJ25hbWUnIGZvcm1hdCBpcyBhcHBsaWVkIHRvIHRoZSBwcmltYXJ5IGlkZW50aWZpZXIgY29sdW1uIHRvIGFzc2lzdCBpbiBjbGllbnRzIGlkZW50aWZ5aW5nIGNvbHVtbiBpcyB0aGUgcmVzb3VyY2UgbmFtZS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9PQUkvT3BlbkFQSS1TcGVjaWZpY2F0aW9uL2Jsb2IvbWFzdGVyL3ZlcnNpb25zLzIuMC5tZCNkYXRhLXR5cGVzIGZvciBkZXRhaWxzLiIsInR5cGUiOiJzdHJpbmcifSwianNvblBhdGgiOnsiZGVzY3JpcHRpb24iOiJqc29uUGF0aCBpcyBhIHNpbXBsZSBKU09OIHBhdGggKGkuZS4gd2l0aCBhcnJheSBub3RhdGlvbikgd2hpY2ggaXMgZXZhbHVhdGVkIGFnYWluc3QgZWFjaCBjdXN0b20gcmVzb3VyY2UgdG8gcHJvZHVjZSB0aGUgdmFsdWUgZm9yIHRoaXMgY29sdW1uLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgYSBodW1hbiByZWFkYWJsZSBuYW1lIGZvciB0aGUgY29sdW1uLiIsInR5cGUiOiJzdHJpbmcifSwicHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJwcmlvcml0eSBpcyBhbiBpbnRlZ2VyIGRlZmluaW5nIHRoZSByZWxhdGl2ZSBpbXBvcnRhbmNlIG9mIHRoaXMgY29sdW1uIGNvbXBhcmVkIHRvIG90aGVycy4gTG93ZXIgbnVtYmVycyBhcmUgY29uc2lkZXJlZCBoaWdoZXIgcHJpb3JpdHkuIENvbHVtbnMgdGhhdCBtYXkgYmUgb21pdHRlZCBpbiBsaW1pdGVkIHNwYWNlIHNjZW5hcmlvcyBzaG91bGQgYmUgZ2l2ZW4gYSBwcmlvcml0eSBncmVhdGVyIHRoYW4gMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIGlzIGFuIE9wZW5BUEkgdHlwZSBkZWZpbml0aW9uIGZvciB0aGlzIGNvbHVtbi4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9PQUkvT3BlbkFQSS1TcGVjaWZpY2F0aW9uL2Jsb2IvbWFzdGVyL3ZlcnNpb25zLzIuMC5tZCNkYXRhLXR5cGVzIGZvciBkZXRhaWxzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImpzb25QYXRoIiwibmFtZSIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhpcyB2ZXJzaW9uLCBlLmcuIOKAnHYx4oCdLCDigJx2MmJldGEx4oCdLCBldGMuIENvbXBvc2l0ZSByZXNvdXJjZXMgYXJlIHNlcnZlZCB1bmRlciB0aGlzIHZlcnNpb24gYXQgYC9hcGlzL1x1MDAzY2dyb3VwXHUwMDNlL1x1MDAzY3ZlcnNpb25cdTAwM2UvLi4uYCBpZiBgc2VydmVkYCBpcyB0cnVlLiIsInR5cGUiOiJzdHJpbmcifSwicmVmZXJlbmNlYWJsZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZWFibGUgc3BlY2lmaWVzIHRoYXQgdGhpcyB2ZXJzaW9uIG1heSBiZSByZWZlcmVuY2VkIGJ5IGEgQ29tcG9zaXRpb24gaW4gb3JkZXIgdG8gY29uZmlndXJlIHdoaWNoIHJlc291cmNlcyBhbiBYUiBtYXkgYmUgY29tcG9zZWQgb2YuIEV4YWN0bHkgb25lIHZlcnNpb24gbXVzdCBiZSBtYXJrZWQgYXMgcmVmZXJlbmNlYWJsZTsgYWxsIENvbXBvc2l0aW9ucyBtdXN0IHRhcmdldCBvbmx5IHRoZSByZWZlcmVuY2VhYmxlIHZlcnNpb24uIFRoZSByZWZlcmVuY2VhYmxlIHZlcnNpb24gbXVzdCBiZSBzZXJ2ZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwic2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiU2NoZW1hIGRlc2NyaWJlcyB0aGUgc2NoZW1hIHVzZWQgZm9yIHZhbGlkYXRpb24sIHBydW5pbmcsIGFuZCBkZWZhdWx0aW5nIG9mIHRoaXMgdmVyc2lvbiBvZiB0aGUgZGVmaW5lZCBjb21wb3NpdGUgcmVzb3VyY2UuIEZpZWxkcyByZXF1aXJlZCBieSBhbGwgY29tcG9zaXRlIHJlc291cmNlcyB3aWxsIGJlIGluamVjdGVkIGludG8gdGhpcyBzY2hlbWEgYXV0b21hdGljYWxseSwgYW5kIHdpbGwgb3ZlcnJpZGUgZXF1aXZhbGVudGx5IG5hbWVkIGZpZWxkcyBpbiB0aGlzIHNjaGVtYS4gT21pdHRpbmcgdGhpcyBzY2hlbWEgcmVzdWx0cyBpbiBhIHNjaGVtYSB0aGF0IGNvbnRhaW5zIG9ubHkgdGhlIGZpZWxkcyByZXF1aXJlZCBieSBhbGwgY29tcG9zaXRlIHJlc291cmNlcy4iLCJwcm9wZXJ0aWVzIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik9wZW5BUElWM1NjaGVtYSBpcyB0aGUgT3BlbkFQSSB2MyBzY2hlbWEgdG8gdXNlIGZvciB2YWxpZGF0aW9uIGFuZCBwcnVuaW5nLiIsInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJzZXJ2ZWQiOnsiZGVzY3JpcHRpb24iOiJTZXJ2ZWQgc3BlY2lmaWVzIHRoYXQgdGhpcyB2ZXJzaW9uIHNob3VsZCBiZSBzZXJ2ZWQgdmlhIFJFU1QgQVBJcy4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwicmVxdWlyZWQiOlsibmFtZSIsInJlZmVyZW5jZWFibGUiLCJzZXJ2ZWQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImdyb3VwIiwibmFtZXMiLCJ2ZXJzaW9ucyJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNvbXBvc2l0ZVJlc291cmNlRGVmaW5pdGlvblN0YXR1cyBzaG93cyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgdGhlIGRlZmluaXRpb24uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBvZiB0aGUgcmVzb3VyY2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIENvbmRpdGlvbiB0aGF0IG1heSBhcHBseSB0byBhIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkEgTWVzc2FnZSBjb250YWluaW5nIGRldGFpbHMgYWJvdXQgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIsIGlmIGFueS4iLCJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6IkEgUmVhc29uIGZvciB0aGlzIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbiBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGlzIGNvbmRpdGlvbjsgaXMgaXQgY3VycmVudGx5IFRydWUsIEZhbHNlLCBvciBVbmtub3duPyIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhpcyBjb25kaXRpb24uIEF0IG1vc3Qgb25lIG9mIGVhY2ggY29uZGl0aW9uIHR5cGUgbWF5IGFwcGx5IHRvIGEgcmVzb3VyY2UgYXQgYW55IHBvaW50IGluIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJjb250cm9sbGVycyI6eyJkZXNjcmlwdGlvbiI6IkNvbnRyb2xsZXJzIHJlcHJlc2VudHMgdGhlIHN0YXR1cyBvZiB0aGUgY29udHJvbGxlcnMgdGhhdCBwb3dlciB0aGlzIGNvbXBvc2l0ZSByZXNvdXJjZSBkZWZpbml0aW9uLiIsInByb3BlcnRpZXMiOnsiY29tcG9zaXRlUmVzb3VyY2VDbGFpbVR5cGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgQ29tcG9zaXRlUmVzb3VyY2VDbGFpbVR5cGVSZWYgaXMgdGhlIHR5cGUgb2YgY29tcG9zaXRlIHJlc291cmNlIGNsYWltIHRoYXQgQ3Jvc3NwbGFuZSBpcyBjdXJyZW50bHkgcmVjb25jaWxpbmcgZm9yIHRoaXMgZGVmaW5pdGlvbi4gSXRzIHZlcnNpb24gd2lsbCBldmVudHVhbGx5IGJlY29tZSBjb25zaXN0ZW50IHdpdGggdGhlIGRlZmluaXRpb24ncyByZWZlcmVuY2VhYmxlIHZlcnNpb24uIE5vdGUgdGhhdCBjbGllbnRzIG1heSBpbnRlcmFjdCB3aXRoIGFueSBzZXJ2ZWQgdHlwZTsgdGhpcyBpcyBzaW1wbHkgdGhlIHR5cGUgdGhhdCBDcm9zc3BsYW5lIGludGVyYWN0cyB3aXRoLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gb2YgdGhlIHR5cGUuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiB0aGUgdHlwZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhcGlWZXJzaW9uIiwia2luZCJdLCJ0eXBlIjoib2JqZWN0In0sImNvbXBvc2l0ZVJlc291cmNlVHlwZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBDb21wb3NpdGVSZXNvdXJjZVR5cGVSZWYgaXMgdGhlIHR5cGUgb2YgY29tcG9zaXRlIHJlc291cmNlIHRoYXQgQ3Jvc3NwbGFuZSBpcyBjdXJyZW50bHkgcmVjb25jaWxpbmcgZm9yIHRoaXMgZGVmaW5pdGlvbi4gSXRzIHZlcnNpb24gd2lsbCBldmVudHVhbGx5IGJlY29tZSBjb25zaXN0ZW50IHdpdGggdGhlIGRlZmluaXRpb24ncyByZWZlcmVuY2VhYmxlIHZlcnNpb24uIE5vdGUgdGhhdCBjbGllbnRzIG1heSBpbnRlcmFjdCB3aXRoIGFueSBzZXJ2ZWQgdHlwZTsgdGhpcyBpcyBzaW1wbHkgdGhlIHR5cGUgdGhhdCBDcm9zc3BsYW5lIGludGVyYWN0cyB3aXRoLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gb2YgdGhlIHR5cGUuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiB0aGUgdHlwZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhcGlWZXJzaW9uIiwia2luZCJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMiJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNvbmZpZ3VyYXRpb25zLnBrZy5jcm9zc3BsYW5lLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJwa2cuY3Jvc3NwbGFuZS5pbyIsIm5hbWVzIjp7ImNhdGVnb3JpZXMiOlsiY3Jvc3NwbGFuZSIsInBrZyJdLCJraW5kIjoiQ29uZmlndXJhdGlvbiIsImxpc3RLaW5kIjoiQ29uZmlndXJhdGlvbkxpc3QiLCJwbHVyYWwiOiJjb25maWd1cmF0aW9ucyIsInNpbmd1bGFyIjoiY29uZmlndXJhdGlvbiJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuY29uZGl0aW9uc1s/KEAudHlwZT09J0luc3RhbGxlZCcpXS5zdGF0dXMiLCJuYW1lIjoiSU5TVEFMTEVEIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmNvbmRpdGlvbnNbPyhALnR5cGU9PSdIZWFsdGh5JyldLnN0YXR1cyIsIm5hbWUiOiJIRUFMVEhZIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5wYWNrYWdlIiwibmFtZSI6IlBBQ0tBR0UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBR0UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvbmZpZ3VyYXRpb24gaXMgdGhlIENSRCB0eXBlIGZvciBhIHJlcXVlc3QgdG8gYWRkIGEgY29uZmlndXJhdGlvbiB0byBDcm9zc3BsYW5lLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlndXJhdGlvblNwZWMgc3BlY2lmaWVzIGRldGFpbHMgYWJvdXQgYSByZXF1ZXN0IHRvIGluc3RhbGwgYSBjb25maWd1cmF0aW9uIHRvIENyb3NzcGxhbmUuIiwicHJvcGVydGllcyI6eyJpZ25vcmVDcm9zc3BsYW5lQ29uc3RyYWludHMiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiSWdub3JlQ3Jvc3NwbGFuZUNvbnN0cmFpbnRzIGluZGljYXRlcyB0byB0aGUgcGFja2FnZSBtYW5hZ2VyIHdoZXRoZXIgdG8gaG9ub3IgQ3Jvc3NwbGFuZSB2ZXJzaW9uIGNvbnN0cmFpbnMgc3BlY2lmaWVkIGJ5IHRoZSBwYWNrYWdlLiBEZWZhdWx0IGlzIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sInBhY2thZ2UiOnsiZGVzY3JpcHRpb24iOiJQYWNrYWdlIGlzIHRoZSBuYW1lIG9mIHRoZSBwYWNrYWdlIHRoYXQgaXMgYmVpbmcgcmVxdWVzdGVkLiIsInR5cGUiOiJzdHJpbmcifSwicGFja2FnZVB1bGxQb2xpY3kiOnsiZGVmYXVsdCI6IklmTm90UHJlc2VudCIsImRlc2NyaXB0aW9uIjoiUGFja2FnZVB1bGxQb2xpY3kgZGVmaW5lcyB0aGUgcHVsbCBwb2xpY3kgZm9yIHRoZSBwYWNrYWdlLiBEZWZhdWx0IGlzIElmTm90UHJlc2VudC4iLCJ0eXBlIjoic3RyaW5nIn0sInBhY2thZ2VQdWxsU2VjcmV0cyI6eyJkZXNjcmlwdGlvbiI6IlBhY2thZ2VQdWxsU2VjcmV0cyBhcmUgbmFtZWQgc2VjcmV0cyBpbiB0aGUgc2FtZSBuYW1lc3BhY2UgdGhhdCBjYW4gYmUgdXNlZCB0byBmZXRjaCBwYWNrYWdlcyBmcm9tIHByaXZhdGUgcmVnaXN0cmllcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkxvY2FsT2JqZWN0UmVmZXJlbmNlIGNvbnRhaW5zIGVub3VnaCBpbmZvcm1hdGlvbiB0byBsZXQgeW91IGxvY2F0ZSB0aGUgcmVmZXJlbmNlZCBvYmplY3QgaW5zaWRlIHRoZSBzYW1lIG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXZpc2lvbkFjdGl2YXRpb25Qb2xpY3kiOnsiZGVmYXVsdCI6IkF1dG9tYXRpYyIsImRlc2NyaXB0aW9uIjoiUmV2aXNpb25BY3RpdmF0aW9uUG9saWN5IHNwZWNpZmllcyBob3cgdGhlIHBhY2thZ2UgY29udHJvbGxlciBzaG91bGQgdXBkYXRlIGZyb20gb25lIHJldmlzaW9uIHRvIHRoZSBuZXh0LiBPcHRpb25zIGFyZSBBdXRvbWF0aWMgb3IgTWFudWFsLiBEZWZhdWx0IGlzIEF1dG9tYXRpYy4iLCJ0eXBlIjoic3RyaW5nIn0sInJldmlzaW9uSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiUmV2aXNpb25IaXN0b3J5TGltaXQgZGljdGF0ZXMgaG93IHRoZSBwYWNrYWdlIGNvbnRyb2xsZXIgY2xlYW5zIHVwIG9sZCBpbmFjdGl2ZSBwYWNrYWdlIHJldmlzaW9ucy4gRGVmYXVsdHMgdG8gMS4gQ2FuIGJlIGRpc2FibGVkIGJ5IGV4cGxpY2l0bHkgc2V0dGluZyB0byAwLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwic2tpcERlcGVuZGVuY3lSZXNvbHV0aW9uIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNraXBEZXBlbmRlbmN5UmVzb2x1dGlvbiBpbmRpY2F0ZXMgdG8gdGhlIHBhY2thZ2UgbWFuYWdlciB3aGV0aGVyIHRvIHNraXAgcmVzb2x2aW5nIGRlcGVuZGVuY2llcyBmb3IgYSBwYWNrYWdlLiBTZXR0aW5nIHRoaXMgdmFsdWUgdG8gdHJ1ZSBtYXkgaGF2ZSB1bmludGVuZGVkIGNvbnNlcXVlbmNlcy4gRGVmYXVsdCBpcyBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwicmVxdWlyZWQiOlsicGFja2FnZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNvbmZpZ3VyYXRpb25TdGF0dXMgcmVwcmVzZW50cyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgYSBDb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgb2YgdGhlIHJlc291cmNlLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBDb25kaXRpb24gdGhhdCBtYXkgYXBwbHkgdG8gYSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoaXMgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLCBpZiBhbnkuIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJBIFJlYXNvbiBmb3IgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhpcyBjb25kaXRpb247IGlzIGl0IGN1cnJlbnRseSBUcnVlLCBGYWxzZSwgb3IgVW5rbm93bj8iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoaXMgY29uZGl0aW9uLiBBdCBtb3N0IG9uZSBvZiBlYWNoIGNvbmRpdGlvbiB0eXBlIG1heSBhcHBseSB0byBhIHJlc291cmNlIGF0IGFueSBwb2ludCBpbiB0aW1lLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiY3VycmVudElkZW50aWZpZXIiOnsiZGVzY3JpcHRpb24iOiJDdXJyZW50SWRlbnRpZmllciBpcyB0aGUgbW9zdCByZWNlbnQgcGFja2FnZSBzb3VyY2UgdGhhdCB3YXMgdXNlZCB0byBwcm9kdWNlIGEgcmV2aXNpb24uIFRoZSBwYWNrYWdlIG1hbmFnZXIgdXNlcyB0aGlzIGZpZWxkIHRvIGRldGVybWluZSB3aGV0aGVyIHRvIGNoZWNrIGZvciBwYWNrYWdlIHVwZGF0ZXMgZm9yIGEgZ2l2ZW4gc291cmNlIHdoZW4gcGFja2FnZVB1bGxQb2xpY3kgaXMgc2V0IHRvIElmTm90UHJlc2VudC4gTWFudWFsbHkgcmVtb3ZpbmcgdGhpcyBmaWVsZCB3aWxsIGNhdXNlIHRoZSBwYWNrYWdlIG1hbmFnZXIgdG8gY2hlY2sgdGhhdCB0aGUgY3VycmVudCByZXZpc2lvbiBpcyBjb3JyZWN0IGZvciB0aGUgZ2l2ZW4gcGFja2FnZSBzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJjdXJyZW50UmV2aXNpb24iOnsiZGVzY3JpcHRpb24iOiJDdXJyZW50UmV2aXNpb24gaXMgdGhlIG5hbWUgb2YgdGhlIGN1cnJlbnQgcGFja2FnZSByZXZpc2lvbi4gSXQgd2lsbCByZWZsZWN0IHRoZSBtb3N0IHVwIHRvIGRhdGUgcmV2aXNpb24sIHdoZXRoZXIgaXQgaGFzIGJlZW4gYWN0aXZhdGVkIG9yIG5vdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnN0YXR1cy5jb25kaXRpb25zWz8oQC50eXBlPT0nSW5zdGFsbGVkJyldLnN0YXR1cyIsIm5hbWUiOiJJTlNUQUxMRUQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuY29uZGl0aW9uc1s/KEAudHlwZT09J0hlYWx0aHknKV0uc3RhdHVzIiwibmFtZSI6IkhFQUxUSFkiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLnBhY2thZ2UiLCJuYW1lIjoiUEFDS0FHRSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFHRSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjFiZXRhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmF0aW9uIGlzIHRoZSBDUkQgdHlwZSBmb3IgYSByZXF1ZXN0IHRvIGFkZCBhIGNvbmZpZ3VyYXRpb24gdG8gQ3Jvc3NwbGFuZS4gW0RFUFJFQ0FURURdOiBQbGVhc2UgdXNlIHRoZSBpZGVudGljYWwgdjEgQVBJIGluc3RlYWQuIFRoZSB2MWJldGExIEFQSSBpcyBzY2hlZHVsZWQgdG8gYmUgcmVtb3ZlZCBpbiBDcm9zc3BsYW5lIHYxLjYuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmF0aW9uU3BlYyBzcGVjaWZpZXMgZGV0YWlscyBhYm91dCBhIHJlcXVlc3QgdG8gaW5zdGFsbCBhIGNvbmZpZ3VyYXRpb24gdG8gQ3Jvc3NwbGFuZS4iLCJwcm9wZXJ0aWVzIjp7Imlnbm9yZUNyb3NzcGxhbmVDb25zdHJhaW50cyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJJZ25vcmVDcm9zc3BsYW5lQ29uc3RyYWludHMgaW5kaWNhdGVzIHRvIHRoZSBwYWNrYWdlIG1hbmFnZXIgd2hldGhlciB0byBob25vciBDcm9zc3BsYW5lIHZlcnNpb24gY29uc3RyYWlucyBzcGVjaWZpZWQgYnkgdGhlIHBhY2thZ2UuIERlZmF1bHQgaXMgZmFsc2UuIiwidHlwZSI6ImJvb2xlYW4ifSwicGFja2FnZSI6eyJkZXNjcmlwdGlvbiI6IlBhY2thZ2UgaXMgdGhlIG5hbWUgb2YgdGhlIHBhY2thZ2UgdGhhdCBpcyBiZWluZyByZXF1ZXN0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJwYWNrYWdlUHVsbFBvbGljeSI6eyJkZWZhdWx0IjoiSWZOb3RQcmVzZW50IiwiZGVzY3JpcHRpb24iOiJQYWNrYWdlUHVsbFBvbGljeSBkZWZpbmVzIHRoZSBwdWxsIHBvbGljeSBmb3IgdGhlIHBhY2thZ2UuIERlZmF1bHQgaXMgSWZOb3RQcmVzZW50LiIsInR5cGUiOiJzdHJpbmcifSwicGFja2FnZVB1bGxTZWNyZXRzIjp7ImRlc2NyaXB0aW9uIjoiUGFja2FnZVB1bGxTZWNyZXRzIGFyZSBuYW1lZCBzZWNyZXRzIGluIHRoZSBzYW1lIG5hbWVzcGFjZSB0aGF0IGNhbiBiZSB1c2VkIHRvIGZldGNoIHBhY2thZ2VzIGZyb20gcHJpdmF0ZSByZWdpc3RyaWVzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTG9jYWxPYmplY3RSZWZlcmVuY2UgY29udGFpbnMgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGxldCB5b3UgbG9jYXRlIHRoZSByZWZlcmVuY2VkIG9iamVjdCBpbnNpZGUgdGhlIHNhbWUgbmFtZXNwYWNlLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyBUT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInJldmlzaW9uQWN0aXZhdGlvblBvbGljeSI6eyJkZWZhdWx0IjoiQXV0b21hdGljIiwiZGVzY3JpcHRpb24iOiJSZXZpc2lvbkFjdGl2YXRpb25Qb2xpY3kgc3BlY2lmaWVzIGhvdyB0aGUgcGFja2FnZSBjb250cm9sbGVyIHNob3VsZCB1cGRhdGUgZnJvbSBvbmUgcmV2aXNpb24gdG8gdGhlIG5leHQuIE9wdGlvbnMgYXJlIEF1dG9tYXRpYyBvciBNYW51YWwuIERlZmF1bHQgaXMgQXV0b21hdGljLiIsInR5cGUiOiJzdHJpbmcifSwicmV2aXNpb25IaXN0b3J5TGltaXQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJSZXZpc2lvbkhpc3RvcnlMaW1pdCBkaWN0YXRlcyBob3cgdGhlIHBhY2thZ2UgY29udHJvbGxlciBjbGVhbnMgdXAgb2xkIGluYWN0aXZlIHBhY2thZ2UgcmV2aXNpb25zLiBEZWZhdWx0cyB0byAxLiBDYW4gYmUgZGlzYWJsZWQgYnkgZXhwbGljaXRseSBzZXR0aW5nIHRvIDAuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJza2lwRGVwZW5kZW5jeVJlc29sdXRpb24iOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiU2tpcERlcGVuZGVuY3lSZXNvbHV0aW9uIGluZGljYXRlcyB0byB0aGUgcGFja2FnZSBtYW5hZ2VyIHdoZXRoZXIgdG8gc2tpcCByZXNvbHZpbmcgZGVwZW5kZW5jaWVzIGZvciBhIHBhY2thZ2UuIFNldHRpbmcgdGhpcyB2YWx1ZSB0byB0cnVlIG1heSBoYXZlIHVuaW50ZW5kZWQgY29uc2VxdWVuY2VzLiBEZWZhdWx0IGlzIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJwYWNrYWdlIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlndXJhdGlvblN0YXR1cyByZXByZXNlbnRzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBhIENvbmZpZ3VyYXRpb24uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBvZiB0aGUgcmVzb3VyY2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIENvbmRpdGlvbiB0aGF0IG1heSBhcHBseSB0byBhIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkEgTWVzc2FnZSBjb250YWluaW5nIGRldGFpbHMgYWJvdXQgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIsIGlmIGFueS4iLCJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6IkEgUmVhc29uIGZvciB0aGlzIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbiBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGlzIGNvbmRpdGlvbjsgaXMgaXQgY3VycmVudGx5IFRydWUsIEZhbHNlLCBvciBVbmtub3duPyIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhpcyBjb25kaXRpb24uIEF0IG1vc3Qgb25lIG9mIGVhY2ggY29uZGl0aW9uIHR5cGUgbWF5IGFwcGx5IHRvIGEgcmVzb3VyY2UgYXQgYW55IHBvaW50IGluIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJjdXJyZW50SWRlbnRpZmllciI6eyJkZXNjcmlwdGlvbiI6IkN1cnJlbnRJZGVudGlmaWVyIGlzIHRoZSBtb3N0IHJlY2VudCBwYWNrYWdlIHNvdXJjZSB0aGF0IHdhcyB1c2VkIHRvIHByb2R1Y2UgYSByZXZpc2lvbi4gVGhlIHBhY2thZ2UgbWFuYWdlciB1c2VzIHRoaXMgZmllbGQgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gY2hlY2sgZm9yIHBhY2thZ2UgdXBkYXRlcyBmb3IgYSBnaXZlbiBzb3VyY2Ugd2hlbiBwYWNrYWdlUHVsbFBvbGljeSBpcyBzZXQgdG8gSWZOb3RQcmVzZW50LiBNYW51YWxseSByZW1vdmluZyB0aGlzIGZpZWxkIHdpbGwgY2F1c2UgdGhlIHBhY2thZ2UgbWFuYWdlciB0byBjaGVjayB0aGF0IHRoZSBjdXJyZW50IHJldmlzaW9uIGlzIGNvcnJlY3QgZm9yIHRoZSBnaXZlbiBwYWNrYWdlIHNvdXJjZS4iLCJ0eXBlIjoic3RyaW5nIn0sImN1cnJlbnRSZXZpc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkN1cnJlbnRSZXZpc2lvbiBpcyB0aGUgbmFtZSBvZiB0aGUgY3VycmVudCBwYWNrYWdlIHJldmlzaW9uLiBJdCB3aWxsIHJlZmxlY3QgdGhlIG1vc3QgdXAgdG8gZGF0ZSByZXZpc2lvbiwgd2hldGhlciBpdCBoYXMgYmVlbiBhY3RpdmF0ZWQgb3Igbm90LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6ZmFsc2UsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhZ2dyZWdhdGlvblJ1bGUiOnsiY2x1c3RlclJvbGVTZWxlY3RvcnMiOlt7Im1hdGNoTGFiZWxzIjp7InJiYWMuY3Jvc3NwbGFuZS5pby9hZ2dyZWdhdGUtdG8tYWRtaW4iOiJ0cnVlIn19XX0sImFwaVZlcnNpb24iOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImNyb3NzcGxhbmUiLCJjaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIiwiaGVyaXRhZ2UiOiJIZWxtIiwicmVsZWFzZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIn0sIm5hbWUiOiJjcm9zc3BsYW5lLWFkbWluIn19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJuYW1lIjoiY3Jvc3NwbGFuZS1hZG1pbiJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm5hbWUiOiJjcm9zc3BsYW5lLWFkbWluIn0sInN1YmplY3RzIjpbeyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiR3JvdXAiLCJuYW1lIjoiY3Jvc3NwbGFuZTptYXN0ZXJzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhZ2dyZWdhdGlvblJ1bGUiOnsiY2x1c3RlclJvbGVTZWxlY3RvcnMiOlt7Im1hdGNoTGFiZWxzIjp7InJiYWMuY3Jvc3NwbGFuZS5pby9hZ2dyZWdhdGUtdG8tYnJvd3NlIjoidHJ1ZSJ9fV19LCJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJjcm9zc3BsYW5lIiwiY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSIsImhlcml0YWdlIjoiSGVsbSIsInJlbGVhc2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSJ9LCJuYW1lIjoiY3Jvc3NwbGFuZS1icm93c2UifX0=
  - type: olm.bundle.object
    value:
      data: eyJhZ2dyZWdhdGlvblJ1bGUiOnsiY2x1c3RlclJvbGVTZWxlY3RvcnMiOlt7Im1hdGNoTGFiZWxzIjp7InJiYWMuY3Jvc3NwbGFuZS5pby9hZ2dyZWdhdGUtdG8tZWRpdCI6InRydWUifX1dfSwiYXBpVmVyc2lvbiI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEiLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY3Jvc3NwbGFuZSIsImNoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEiLCJoZXJpdGFnZSI6IkhlbG0iLCJyZWxlYXNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUifSwibmFtZSI6ImNyb3NzcGxhbmUtZWRpdCJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiYWdlbnQiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6IkhlbG0iLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjAuMSIsImhlbG0uc2gvY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSJ9LCJuYW1lIjoiY3Jvc3NwbGFuZS1lZGl0In0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6ImNyb3NzcGxhbmUtZWRpdCJ9LCJzdWJqZWN0cyI6W3siYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6Ikdyb3VwIiwibmFtZSI6InVwYm91bmQ6ZWRpdCJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJjcm9zc3BsYW5lIiwiY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSIsImhlcml0YWdlIjoiSGVsbSIsInJlbGVhc2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSJ9LCJuYW1lIjoiY3Jvc3NwbGFuZS1yYmFjLW1hbmFnZXIifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImV2ZW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5hbWVzcGFjZXMiLCJzZXJ2aWNlYWNjb3VudHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwaWV4dGVuc2lvbnMuY3Jvc3NwbGFuZS5pbyJdLCJyZXNvdXJjZXMiOlsiY29tcG9zaXRlcmVzb3VyY2VkZWZpbml0aW9ucyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsicGtnLmNyb3NzcGxhbmUuaW8iXSwicmVzb3VyY2VzIjpbInByb3ZpZGVycmV2aXNpb25zIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhcGlleHRlbnNpb25zLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnJvbGVzIiwicm9sZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJlc2NhbGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJjbHVzdGVycm9sZXMiXSwidmVyYnMiOlsiYmluZCJdfSx7ImFwaUdyb3VwcyI6WyJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJjbHVzdGVycm9sZWJpbmRpbmdzIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsiIiwiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyIsImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0IiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJ3YXRjaCIsImRlbGV0ZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY3Jvc3NwbGFuZSIsImNoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEiLCJoZXJpdGFnZSI6IkhlbG0iLCJyZWxlYXNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUifSwibmFtZSI6ImNyb3NzcGxhbmUtcmJhYy1tYW5hZ2VyIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6ImNyb3NzcGxhbmUtcmJhYy1tYW5hZ2VyIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoicmJhYy1tYW5hZ2VyIiwibmFtZXNwYWNlIjoidXBib3VuZC1zeXN0ZW0ifV19
  - type: olm.bundle.object
    value:
      data: eyJhZ2dyZWdhdGlvblJ1bGUiOnsiY2x1c3RlclJvbGVTZWxlY3RvcnMiOlt7Im1hdGNoTGFiZWxzIjp7InJiYWMuY3Jvc3NwbGFuZS5pby9hZ2dyZWdhdGUtdG8tdmlldyI6InRydWUifX1dfSwiYXBpVmVyc2lvbiI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEiLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY3Jvc3NwbGFuZSIsImNoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEiLCJoZXJpdGFnZSI6IkhlbG0iLCJyZWxlYXNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUifSwibmFtZSI6ImNyb3NzcGxhbmUtdmlldyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiYWdlbnQiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6IkhlbG0iLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjAuMSIsImhlbG0uc2gvY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSJ9LCJuYW1lIjoiY3Jvc3NwbGFuZS12aWV3In0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6ImNyb3NzcGxhbmUtdmlldyJ9LCJzdWJqZWN0cyI6W3siYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6Ikdyb3VwIiwibmFtZSI6InVwYm91bmQ6dmlldyJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhZ2dyZWdhdGlvblJ1bGUiOnsiY2x1c3RlclJvbGVTZWxlY3RvcnMiOlt7Im1hdGNoTGFiZWxzIjp7InJiYWMuY3Jvc3NwbGFuZS5pby9hZ2dyZWdhdGUtdG8tY3Jvc3NwbGFuZSI6InRydWUifX1dfSwiYXBpVmVyc2lvbiI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEiLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY3Jvc3NwbGFuZSIsImNoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEiLCJoZXJpdGFnZSI6IkhlbG0iLCJyZWxlYXNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUifSwibmFtZSI6ImNyb3NzcGxhbmUifSwicnVsZXMiOltdfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY3Jvc3NwbGFuZSIsImNoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEiLCJoZXJpdGFnZSI6IkhlbG0iLCJyZWxlYXNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUifSwibmFtZSI6ImNyb3NzcGxhbmUifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoiY3Jvc3NwbGFuZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6ImNyb3NzcGxhbmUiLCJuYW1lc3BhY2UiOiJ1cGJvdW5kLXN5c3RlbSJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJpbWFnZVB1bGxTZWNyZXRzIjpbeyJuYW1lIjoiZG9ja2VyaHViIn1dLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY3Jvc3NwbGFuZSIsImNoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEiLCJoZXJpdGFnZSI6IkhlbG0iLCJyZWxlYXNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUifSwibmFtZSI6ImNyb3NzcGxhbmUifX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJhZ2VudCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIiwicmJhYy5jcm9zc3BsYW5lLmlvL2FnZ3JlZ2F0ZS10by1lZGl0IjoidHJ1ZSJ9LCJuYW1lIjoiY3Jvc3NwbGFuZTphZ2dyZWdhdGUtdG8tZWRpdCJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5hbWVzcGFjZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwaWV4dGVuc2lvbnMuazhzLmlvIl0sInJlc291cmNlcyI6WyJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhcGlleHRlbnNpb25zLmNyb3NzcGxhbmUuaW8iXSwicmVzb3VyY2VzIjpbIioiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJwa2cuY3Jvc3NwbGFuZS5pbyJdLCJyZXNvdXJjZXMiOlsicHJvdmlkZXJzIiwiY29uZmlndXJhdGlvbnMiLCJwcm92aWRlcnJldmlzaW9ucyIsImNvbmZpZ3VyYXRpb25yZXZpc2lvbnMiXSwidmVyYnMiOlsiKiJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJhZ2VudCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIiwicmJhYy5jcm9zc3BsYW5lLmlvL2FnZ3JlZ2F0ZS10by12aWV3IjoidHJ1ZSJ9LCJuYW1lIjoiY3Jvc3NwbGFuZTphZ2dyZWdhdGUtdG8tdmlldyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5hbWVzcGFjZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwaWV4dGVuc2lvbnMuazhzLmlvIl0sInJlc291cmNlcyI6WyJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhcGlleHRlbnNpb25zLmNyb3NzcGxhbmUuaW8iXSwicmVzb3VyY2VzIjpbIioiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInBrZy5jcm9zc3BsYW5lLmlvIl0sInJlc291cmNlcyI6WyJwcm92aWRlcnMiLCJjb25maWd1cmF0aW9ucyIsInByb3ZpZGVycmV2aXNpb25zIiwiY29uZmlndXJhdGlvbnJldmlzaW9ucyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhZ2dyZWdhdGlvblJ1bGUiOnsiY2x1c3RlclJvbGVTZWxlY3RvcnMiOlt7Im1hdGNoTGFiZWxzIjp7InJiYWMuY3Jvc3NwbGFuZS5pby9hZ2dyZWdhdGUtdG8tYWxsb3dlZC1wcm92aWRlci1wZXJtaXNzaW9ucyI6InRydWUifX1dfSwiYXBpVmVyc2lvbiI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEiLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY3Jvc3NwbGFuZSIsImNoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEiLCJoZXJpdGFnZSI6IkhlbG0iLCJyZWxlYXNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUifSwibmFtZSI6ImNyb3NzcGxhbmU6YWxsb3dlZC1wcm92aWRlci1wZXJtaXNzaW9ucyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJjcm9zc3BsYW5lIiwiY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSIsImNyb3NzcGxhbmUuaW8vc2NvcGUiOiJzeXN0ZW0iLCJoZXJpdGFnZSI6IkhlbG0iLCJyYmFjLmNyb3NzcGxhbmUuaW8vYWdncmVnYXRlLXRvLWNyb3NzcGxhbmUiOiJ0cnVlIiwicmVsZWFzZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIn0sIm5hbWUiOiJjcm9zc3BsYW5lOnN5c3RlbTphZ2dyZWdhdGUtdG8tY3Jvc3NwbGFuZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbImFwaWV4dGVuc2lvbnMuazhzLmlvIl0sInJlc291cmNlcyI6WyJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZWFjY291bnRzIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsiYXBpZXh0ZW5zaW9ucy5jcm9zc3BsYW5lLmlvIiwicGtnLmNyb3NzcGxhbmUuaW8iXSwicmVzb3VyY2VzIjpbIioiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJleHRlbnNpb25zIiwiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIiwiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyIsImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0IiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJ3YXRjaCIsImRlbGV0ZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMiJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImxvY2tzLnBrZy5jcm9zc3BsYW5lLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJwa2cuY3Jvc3NwbGFuZS5pbyIsIm5hbWVzIjp7ImtpbmQiOiJMb2NrIiwibGlzdEtpbmQiOiJMb2NrTGlzdCIsInBsdXJhbCI6ImxvY2tzIiwic2luZ3VsYXIiOiJsb2NrIn0sInNjb3BlIjoiQ2x1c3RlciIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFHRSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTG9jayBpcyB0aGUgQ1JEIHR5cGUgdGhhdCB0cmFja3MgcGFja2FnZSBkZXBlbmRlbmNpZXMuIFtERVBSRUNBVEVEXTogUGxlYXNlIHVzZSB0aGUgaWRlbnRpY2FsIHYxYmV0YTEgQVBJIGluc3RlYWQuIFRoZSB2MWFscGhhMSBBUEkgaXMgc2NoZWR1bGVkIHRvIGJlIHJlbW92ZWQgaW4gQ3Jvc3NwbGFuZSB2MS43LiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJwYWNrYWdlcyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkxvY2tQYWNrYWdlIGlzIGEgcGFja2FnZSB0aGF0IGlzIGluIHRoZSBsb2NrLiIsInByb3BlcnRpZXMiOnsiZGVwZW5kZW5jaWVzIjp7ImRlc2NyaXB0aW9uIjoiRGVwZW5kZW5jaWVzIGFyZSB0aGUgbGlzdCBvZiBkZXBlbmRlbmNpZXMgb2YgdGhpcyBwYWNrYWdlLiBUaGUgb3JkZXIgb2YgdGhlIGRlcGVuZGVuY2llcyB3aWxsIGRpY3RhdGUgdGhlIG9yZGVyIGluIHdoaWNoIHRoZXkgYXJlIHJlc29sdmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBEZXBlbmRlbmN5IGlzIGEgZGVwZW5kZW5jeSBvZiBhIHBhY2thZ2UgaW4gdGhlIGxvY2suIiwicHJvcGVydGllcyI6eyJjb25zdHJhaW50cyI6eyJkZXNjcmlwdGlvbiI6IkNvbnN0cmFpbnRzIGlzIGEgdmFsaWQgc2VtdmVyIHJhbmdlLCB3aGljaCB3aWxsIGJlIHVzZWQgdG8gc2VsZWN0IGEgdmFsaWQgZGVwZW5kZW5jeSB2ZXJzaW9uLiIsInR5cGUiOiJzdHJpbmcifSwicGFja2FnZSI6eyJkZXNjcmlwdGlvbiI6IlBhY2thZ2UgaXMgdGhlIE9DSSBpbWFnZSBuYW1lIHdpdGhvdXQgYSB0YWcgb3IgZGlnZXN0LiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgaXMgdGhlIHR5cGUgb2YgcGFja2FnZS4gQ2FuIGJlIGVpdGhlciBDb25maWd1cmF0aW9uIG9yIFByb3ZpZGVyLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNvbnN0cmFpbnRzIiwicGFja2FnZSIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgY29ycmVzcG9uZHMgdG8gdGhlIG5hbWUgb2YgdGhlIHBhY2thZ2UgcmV2aXNpb24gZm9yIHRoaXMgcGFja2FnZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZSBpcyB0aGUgT0NJIGltYWdlIG5hbWUgd2l0aG91dCBhIHRhZyBvciBkaWdlc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBpcyB0aGUgdHlwZSBvZiBwYWNrYWdlLiBDYW4gYmUgZWl0aGVyIENvbmZpZ3VyYXRpb24gb3IgUHJvdmlkZXIuIiwidHlwZSI6InN0cmluZyJ9LCJ2ZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiVmVyc2lvbiBpcyB0aGUgdGFnIG9yIGRpZ2VzdCBvZiB0aGUgT0NJIGltYWdlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImRlcGVuZGVuY2llcyIsIm5hbWUiLCJzb3VyY2UiLCJ0eXBlIiwidmVyc2lvbiJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fSx7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQUdFIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MWJldGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkxvY2sgaXMgdGhlIENSRCB0eXBlIHRoYXQgdHJhY2tzIHBhY2thZ2UgZGVwZW5kZW5jaWVzLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJwYWNrYWdlcyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkxvY2tQYWNrYWdlIGlzIGEgcGFja2FnZSB0aGF0IGlzIGluIHRoZSBsb2NrLiIsInByb3BlcnRpZXMiOnsiZGVwZW5kZW5jaWVzIjp7ImRlc2NyaXB0aW9uIjoiRGVwZW5kZW5jaWVzIGFyZSB0aGUgbGlzdCBvZiBkZXBlbmRlbmNpZXMgb2YgdGhpcyBwYWNrYWdlLiBUaGUgb3JkZXIgb2YgdGhlIGRlcGVuZGVuY2llcyB3aWxsIGRpY3RhdGUgdGhlIG9yZGVyIGluIHdoaWNoIHRoZXkgYXJlIHJlc29sdmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBEZXBlbmRlbmN5IGlzIGEgZGVwZW5kZW5jeSBvZiBhIHBhY2thZ2UgaW4gdGhlIGxvY2suIiwicHJvcGVydGllcyI6eyJjb25zdHJhaW50cyI6eyJkZXNjcmlwdGlvbiI6IkNvbnN0cmFpbnRzIGlzIGEgdmFsaWQgc2VtdmVyIHJhbmdlLCB3aGljaCB3aWxsIGJlIHVzZWQgdG8gc2VsZWN0IGEgdmFsaWQgZGVwZW5kZW5jeSB2ZXJzaW9uLiIsInR5cGUiOiJzdHJpbmcifSwicGFja2FnZSI6eyJkZXNjcmlwdGlvbiI6IlBhY2thZ2UgaXMgdGhlIE9DSSBpbWFnZSBuYW1lIHdpdGhvdXQgYSB0YWcgb3IgZGlnZXN0LiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgaXMgdGhlIHR5cGUgb2YgcGFja2FnZS4gQ2FuIGJlIGVpdGhlciBDb25maWd1cmF0aW9uIG9yIFByb3ZpZGVyLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNvbnN0cmFpbnRzIiwicGFja2FnZSIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgY29ycmVzcG9uZHMgdG8gdGhlIG5hbWUgb2YgdGhlIHBhY2thZ2UgcmV2aXNpb24gZm9yIHRoaXMgcGFja2FnZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZSBpcyB0aGUgT0NJIGltYWdlIG5hbWUgd2l0aG91dCBhIHRhZyBvciBkaWdlc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBpcyB0aGUgdHlwZSBvZiBwYWNrYWdlLiBDYW4gYmUgZWl0aGVyIENvbmZpZ3VyYXRpb24gb3IgUHJvdmlkZXIuIiwidHlwZSI6InN0cmluZyJ9LCJ2ZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiVmVyc2lvbiBpcyB0aGUgdGFnIG9yIGRpZ2VzdCBvZiB0aGUgT0NJIGltYWdlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImRlcGVuZGVuY2llcyIsIm5hbWUiLCJzb3VyY2UiLCJ0eXBlIiwidmVyc2lvbiJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY3Jvc3NwbGFuZSIsImNoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEiLCJoZXJpdGFnZSI6IkhlbG0iLCJyZWxlYXNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUifSwibmFtZSI6InJiYWMtbWFuYWdlciJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImFnZW50VmVyc2lvbiI6IjEuNS4xLXVwLjEiLCJjcm9zc3BsYW5lVmVyc2lvbiI6IjEuNS4xLXVwLjEiLCJ1eHBWZXJzaW9uIjoiMC4wLjEiLCJ4Z3FsVmVyc2lvbiI6IjAuMS41In0sImtpbmQiOiJDb25maWdNYXAiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiYm9vdHN0cmFwcGVyIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJIZWxtIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4wLjEiLCJoZWxtLnNoL2NoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEifSwibmFtZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJhZ2VudCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIn0sIm5hbWUiOiJ1cGJvdW5kLWFnZW50LWltcGVyc29uYXRvciJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZU5hbWVzIjpbInVwYm91bmQtY2xvdWQtaW1wZXJzb25hdG9yIl0sInJlc291cmNlcyI6WyJ1c2VycyJdLCJ2ZXJicyI6WyJpbXBlcnNvbmF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInVzZXJleHRyYXMvdXBib3VuZC1pZCJdLCJ2ZXJicyI6WyJpbXBlcnNvbmF0ZSJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VOYW1lcyI6WyJzeXN0ZW06YXV0aGVudGljYXRlZCIsInVwYm91bmQ6dmlldyIsInVwYm91bmQ6ZWRpdCJdLCJyZXNvdXJjZXMiOlsiZ3JvdXBzIl0sInZlcmJzIjpbImltcGVyc29uYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiYWdlbnQiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6IkhlbG0iLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjAuMSIsImhlbG0uc2gvY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSJ9LCJuYW1lIjoidXBib3VuZC1hZ2VudC1pbXBlcnNvbmF0b3IifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoidXBib3VuZC1hZ2VudC1pbXBlcnNvbmF0b3IifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJ1cGJvdW5kLWFnZW50IiwibmFtZXNwYWNlIjoidXBib3VuZC1zeXN0ZW0ifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6ImFnZW50IiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJIZWxtIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4wLjEiLCJoZWxtLnNoL2NoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEifSwibmFtZSI6InVwYm91bmQtYWdlbnQtc2VjcmV0In0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbIioiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJhZ2VudCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIn0sIm5hbWUiOiJ1cGJvdW5kLWFnZW50LXNlY3JldCJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6InVwYm91bmQtYWdlbnQtc2VjcmV0In0sInN1YmplY3RzIjpbeyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiR3JvdXAiLCJuYW1lIjoidXBib3VuZDplZGl0In1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VjcmV0IiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6ImFnZW50IiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJIZWxtIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4wLjEiLCJoZWxtLnNoL2NoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEifSwibmFtZSI6InVwYm91bmQtYWdlbnQtdGxzIn0sInR5cGUiOiJPcGFxdWUifQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6ImFnZW50IiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJIZWxtIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4wLjEiLCJoZWxtLnNoL2NoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEifSwibmFtZSI6InVwYm91bmQtYWdlbnQtdXhwLWNvbmZpZyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZU5hbWVzIjpbInVuaXZlcnNhbC1jcm9zc3BsYW5lLWNvbmZpZyJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJhZ2VudCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIn0sIm5hbWUiOiJ1cGJvdW5kLWFnZW50LXV4cC1jb25maWcifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJ1cGJvdW5kLWFnZW50LXV4cC1jb25maWcifSwic3ViamVjdHMiOlt7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJHcm91cCIsIm5hbWUiOiJ1cGJvdW5kOnZpZXcifSx7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJHcm91cCIsIm5hbWUiOiJ1cGJvdW5kOmVkaXQifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJhZ2VudCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIn0sIm5hbWUiOiJ1cGJvdW5kLWFnZW50In0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlTmFtZXMiOlsia3ViZS1zeXN0ZW0iXSwicmVzb3VyY2VzIjpbIm5hbWVzcGFjZXMiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiYWdlbnQiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6IkhlbG0iLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjAuMSIsImhlbG0uc2gvY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSJ9LCJuYW1lIjoidXBib3VuZC1hZ2VudCJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm5hbWUiOiJ1cGJvdW5kLWFnZW50In0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoidXBib3VuZC1hZ2VudCIsIm5hbWVzcGFjZSI6InVwYm91bmQtc3lzdGVtIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJhZ2VudCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIn0sIm5hbWUiOiJ1cGJvdW5kLWFnZW50In0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjY0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6NjQ0M31dLCJzZWxlY3RvciI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJhZ2VudCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSJ9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiYWdlbnQiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6IkhlbG0iLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjAuMSIsImhlbG0uc2gvY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSJ9LCJuYW1lIjoidXBib3VuZC1hZ2VudCJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJib290c3RyYXBwZXIiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6IkhlbG0iLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjAuMSIsImhlbG0uc2gvY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSJ9LCJuYW1lIjoidXBib3VuZC1ib290c3RyYXBwZXIifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VOYW1lcyI6WyJrdWJlLXN5c3RlbSJdLCJyZXNvdXJjZXMiOlsibmFtZXNwYWNlcyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJuYW1lc3BhY2VzIl0sInZlcmJzIjpbImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiYm9vdHN0cmFwcGVyIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJIZWxtIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4wLjEiLCJoZWxtLnNoL2NoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEifSwibmFtZSI6InVwYm91bmQtYm9vdHN0cmFwcGVyIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6InVwYm91bmQtYm9vdHN0cmFwcGVyIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoidXBib3VuZC1ib290c3RyYXBwZXIiLCJuYW1lc3BhY2UiOiJ1cGJvdW5kLXN5c3RlbSJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6ImJvb3RzdHJhcHBlciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIn0sIm5hbWUiOiJ1cGJvdW5kLWJvb3RzdHJhcHBlciJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VjcmV0cyJdLCJ2ZXJicyI6WyJ3YXRjaCIsImxpc3QiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlTmFtZXMiOlsidXhwLWNhIiwidXBib3VuZC1hZ2VudC1wdWJsaWMtY2VydHMiLCJ1cGJvdW5kLWFnZW50LXRscyIsInhncWwtdGxzIiwidXBib3VuZC1jb250cm9sLXBsYW5lLXRva2VuIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsInVwZGF0ZSIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRlcGxveW1lbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInVwZGF0ZSIsIndhdGNoIiwibGlzdCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJib290c3RyYXBwZXIiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6IkhlbG0iLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjAuMSIsImhlbG0uc2gvY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSJ9LCJuYW1lIjoidXBib3VuZC1ib290c3RyYXBwZXIifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJ1cGJvdW5kLWJvb3RzdHJhcHBlciJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InVwYm91bmQtYm9vdHN0cmFwcGVyIiwibmFtZXNwYWNlIjoidXBib3VuZC1zeXN0ZW0ifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiYm9vdHN0cmFwcGVyIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJIZWxtIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4wLjEiLCJoZWxtLnNoL2NoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEifSwibmFtZSI6InVwYm91bmQtYm9vdHN0cmFwcGVyIn19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VjcmV0IiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIn0sIm5hbWUiOiJ1eHAtY2EifSwidHlwZSI6Ik9wYXF1ZSJ9
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VjcmV0IiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6InhncWwiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6InVuaXZlcnNhbC1jcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6IkhlbG0iLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiIwLjAuMSIsImhlbG0uc2gvY2hhcnQiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZS0wLjAuMSJ9LCJuYW1lIjoieGdxbC10bHMifSwidHlwZSI6Ik9wYXF1ZSJ9
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJ4Z3FsIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ1bml2ZXJzYWwtY3Jvc3NwbGFuZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJIZWxtIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoiMC4wLjEiLCJoZWxtLnNoL2NoYXJ0IjoidW5pdmVyc2FsLWNyb3NzcGxhbmUtMC4wLjEifSwibmFtZSI6InhncWwifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoieGdxbCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY3Jvc3NwbGFuZSJ9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoieGdxbCIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoidW5pdmVyc2FsLWNyb3NzcGxhbmUiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5IjoiSGVsbSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjcm9zc3BsYW5lIiwiYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbiI6IjAuMC4xIiwiaGVsbS5zaC9jaGFydCI6InVuaXZlcnNhbC1jcm9zc3BsYW5lLTAuMC4xIn0sIm5hbWUiOiJ4Z3FsIn19
relatedImages:
  - image: quay.io/openshift-community-operators/universal-crossplane@sha256:b3104adb471083de96d49fa53f663dcf0e3e7ff5e3573bb1422aa6045277bea0
    name: ""
  - image: upbound/crossplane:v1.5.1-up.1
    name: ""
  - image: upbound/uxp-bootstrapper:v1.5.1-up.1
    name: ""
  - image: upbound/xgql:v0.1.5
    name: ""
schema: olm.bundle
