image: quay.io/openshift-community-operators/nexus-operator-m88i@sha256:46cd06d477b4d09dbfca7ca4434ea58f881314138ed744c6390033bd6fb7dc0f
name: nexus-operator.v0.6.0
package: nexus-operator-m88i
properties:
  - type: olm.gvk
    value:
      group: apps.m88i.io
      kind: Nexus
      version: v1alpha1
  - type: olm.package
    value:
      packageName: nexus-operator-m88i
      version: 0.6.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5leHVzLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7InBhdGgiOiIvbWV0cmljcyIsInBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoibmV4dXMtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV4dXMtb3BlcmF0b3ItbWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
    name: ""
  - image: quay.io/m88i/nexus-operator:0.6.0
    name: ""
  - image: quay.io/openshift-community-operators/nexus-operator-m88i@sha256:46cd06d477b4d09dbfca7ca4434ea58f881314138ed744c6390033bd6fb7dc0f
    name: ""
schema: olm.bundle
