image: quay.io/openshift-community-operators/global-load-balancer-operator@sha256:50771c320c8b7faea144f765535e89979f9f81e61d34c8dd2e86139fa68e222e
name: global-load-balancer-operator.v1.4.2
package: global-load-balancer-operator
properties:
  - type: olm.gvk
    value:
      group: externaldns.k8s.io
      kind: DNSEndpoint
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: GlobalDNSRecord
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: GlobalDNSZone
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: GlobalRouteDiscovery
      version: v1alpha1
  - type: olm.package
    value:
      packageName: global-load-balancer-operator
      version: 1.4.2
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYXBpLWFwcHJvdmVkLmt1YmVybmV0ZXMuaW8iOiJodHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy1zaWdzL2V4dGVybmFsLWRucy9wdWxsLzIwMDciLCJjb250cm9sbGVyLWdlbi5rdWJlYnVpbGRlci5pby92ZXJzaW9uIjoidjAuNS4wIn0sImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiZG5zZW5kcG9pbnRzLmV4dGVybmFsZG5zLms4cy5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoiZXh0ZXJuYWxkbnMuazhzLmlvIiwibmFtZXMiOnsia2luZCI6IkROU0VuZHBvaW50IiwibGlzdEtpbmQiOiJETlNFbmRwb2ludExpc3QiLCJwbHVyYWwiOiJkbnNlbmRwb2ludHMiLCJzaW5ndWxhciI6ImRuc2VuZHBvaW50In0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiRE5TRW5kcG9pbnRTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgRE5TRW5kcG9pbnQiLCJwcm9wZXJ0aWVzIjp7ImVuZHBvaW50cyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkVuZHBvaW50IGlzIGEgaGlnaC1sZXZlbCB3YXkgb2YgYSBjb25uZWN0aW9uIGJldHdlZW4gYSBzZXJ2aWNlIGFuZCBhbiBJUCIsInByb3BlcnRpZXMiOnsiZG5zTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBob3N0bmFtZSBvZiB0aGUgRE5TIHJlY29yZCIsInR5cGUiOiJzdHJpbmcifSwibGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJMYWJlbHMgc3RvcmVzIGxhYmVscyBkZWZpbmVkIGZvciB0aGUgRW5kcG9pbnQiLCJ0eXBlIjoib2JqZWN0In0sInByb3ZpZGVyU3BlY2lmaWMiOnsiZGVzY3JpcHRpb24iOiJQcm92aWRlclNwZWNpZmljIHN0b3JlcyBwcm92aWRlciBzcGVjaWZpYyBjb25maWciLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlByb3ZpZGVyU3BlY2lmaWNQcm9wZXJ0eSBob2xkcyB0aGUgbmFtZSBhbmQgdmFsdWUgb2YgYSBjb25maWd1cmF0aW9uIHdoaWNoIGlzIHNwZWNpZmljIHRvIGluZGl2aWR1YWwgRE5TIHByb3ZpZGVycyIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInJlY29yZFRUTCI6eyJkZXNjcmlwdGlvbiI6IlRUTCBmb3IgdGhlIHJlY29yZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVjb3JkVHlwZSI6eyJkZXNjcmlwdGlvbiI6IlJlY29yZFR5cGUgdHlwZSBvZiByZWNvcmQsIGUuZy4gQ05BTUUsIEEsIFNSViwgVFhUIGV0YyIsInR5cGUiOiJzdHJpbmcifSwic2V0SWRlbnRpZmllciI6eyJkZXNjcmlwdGlvbiI6IklkZW50aWZpZXIgdG8gZGlzdGluZ3Vpc2ggbXVsdGlwbGUgcmVjb3JkcyB3aXRoIHRoZSBzYW1lIG5hbWUgYW5kIHR5cGUgKGUuZy4gUm91dGU1MyByZWNvcmRzIHdpdGggcm91dGluZyBwb2xpY2llcyBvdGhlciB0aGFuICdzaW1wbGUnKSIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0cyI6eyJkZXNjcmlwdGlvbiI6IlRoZSB0YXJnZXRzIHRoZSBETlMgcmVjb3JkIHBvaW50cyB0byIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJETlNFbmRwb2ludFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBETlNFbmRwb2ludCIsInByb3BlcnRpZXMiOnsib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGdlbmVyYXRpb24gb2JzZXJ2ZWQgYnkgdGhlIGV4dGVybmFsLWRucyBjb250cm9sbGVyLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7Im9wZXJhdG9yIjoiZ2xvYmFsLWxvYWQtYmFsYW5jZXItb3BlcmF0b3IifSwibmFtZSI6Imdsb2JhbC1sb2FkLWJhbGFuY2VyLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoiZ2xvYmFsLWxvYWQtYmFsYW5jZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3MuZ2xvYmFsLWxvYWQtYmFsYW5jZXItb3BlcmF0b3Iuc3ZjIn19XSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsib3BlcmF0b3IiOiJnbG9iYWwtbG9hZC1iYWxhbmNlci1vcGVyYXRvciJ9fX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6Imdsb2JhbC1sb2FkLWJhbGFuY2VyLW9wZXJhdG9yLWNlcnRzIn0sImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsib3BlcmF0b3IiOiJnbG9iYWwtbG9hZC1iYWxhbmNlci1vcGVyYXRvciJ9LCJuYW1lIjoiZ2xvYmFsLWxvYWQtYmFsYW5jZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJvcGVyYXRvciI6Imdsb2JhbC1sb2FkLWJhbGFuY2VyLW9wZXJhdG9yIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogZGJjNWM3MmMucmVkaGF0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJnbG9iYWwtbG9hZC1iYWxhbmNlci1vcGVyYXRvci1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiZ2xvYmFsLWxvYWQtYmFsYW5jZXItb3BlcmF0b3ItbWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/openshift-community-operators/global-load-balancer-operator@sha256:50771c320c8b7faea144f765535e89979f9f81e61d34c8dd2e86139fa68e222e
    name: ""
  - image: quay.io/redhat-cop/global-load-balancer-operator@sha256:c0b6ac9b03571a74a56b28302d720e8aa4442233f7867d05ed365e022f7cb8f5
    name: quay.io/redhat-cop/global-load-balancer-operator
  - image: quay.io/redhat-cop/kube-rbac-proxy@sha256:c68135620167c41e3d9f6c1d2ca1eb8fa24312b86186d09b8010656b9d25fb47
    name: quay.io/redhat-cop/kube-rbac-proxy
schema: olm.bundle
