image: quay.io/openshift-community-operators/ibm-spectrum-scale-csi-operator@sha256:01d24dfa0d6b6146230459f8f7e74f2749d7fff3c4d75c40de386e014f9367d6
name: ibm-spectrum-scale-csi-operator.v2.6.0
package: ibm-spectrum-scale-csi-operator
properties:
  - type: olm.gvk
    value:
      group: csi.ibm.com
      kind: CSIScaleOperator
      version: v1
  - type: olm.package
    value:
      packageName: ibm-spectrum-scale-csi-operator
      version: 2.6.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/ibm-spectrum-scale/ibm-spectrum-scale-csi-operator@sha256:b62ad588fbc338090f405740fd8bceaf59b3267cdb532c60ae965643ccae4d5d
    name: ""
  - image: quay.io/openshift-community-operators/ibm-spectrum-scale-csi-operator@sha256:01d24dfa0d6b6146230459f8f7e74f2749d7fff3c4d75c40de386e014f9367d6
    name: ""
schema: olm.bundle
