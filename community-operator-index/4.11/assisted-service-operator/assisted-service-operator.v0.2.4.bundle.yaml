image: quay.io/openshift-community-operators/assisted-service-operator@sha256:cd13957368e89babae2da04b8c1f4f1d1537894ad37b799885f3558b4819330d
name: assisted-service-operator.v0.2.4
package: assisted-service-operator
properties:
  - type: olm.gvk
    value:
      group: agent-install.openshift.io
      kind: Agent
      version: v1beta1
  - type: olm.gvk
    value:
      group: agent-install.openshift.io
      kind: AgentServiceConfig
      version: v1beta1
  - type: olm.gvk
    value:
      group: agent-install.openshift.io
      kind: InfraEnv
      version: v1beta1
  - type: olm.gvk
    value:
      group: agent-install.openshift.io
      kind: NMStateConfig
      version: v1beta1
  - type: olm.gvk
    value:
      group: extensions.hive.openshift.io
      kind: AgentClusterInstall
      version: v1beta1
  - type: olm.package
    value:
      packageName: assisted-service-operator
      version: 0.2.4
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMiJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im5tc3RhdGVjb25maWdzLmFnZW50LWluc3RhbGwub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJhZ2VudC1pbnN0YWxsLm9wZW5zaGlmdC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJOTVN0YXRlQ29uZmlnIiwibGlzdEtpbmQiOiJOTVN0YXRlQ29uZmlnTGlzdCIsInBsdXJhbCI6Im5tc3RhdGVjb25maWdzIiwic2luZ3VsYXIiOiJubXN0YXRlY29uZmlnIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFiZXRhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsicHJvcGVydGllcyI6eyJjb25maWciOnsiZGVzY3JpcHRpb24iOiJ5YW1sIHRoYXQgY2FuIGJlIHByb2Nlc3NlZCBieSBubXN0YXRlLCB1c2luZyBjdXN0b20gbWFyc2hhbGluZy91bm1hcnNoYWxpbmcgdGhhdCB3aWxsIGFsbG93IHRvIHBvcHVsYXRlIG5tc3RhdGUgY29uZmlnIGFzIHBsYWluIHlhbWwuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sImludGVyZmFjZXMiOnsiZGVzY3JpcHRpb24iOiJJbnRlcmZhY2VzIGlzIGFuIGFycmF5IG9mIGludGVyZmFjZSBvYmplY3RzIGNvbnRhaW5pbmcgdGhlIG5hbWUgYW5kIE1BQyBhZGRyZXNzIGZvciBpbnRlcmZhY2VzIHRoYXQgYXJlIHJlZmVyZW5jZWQgaW4gdGhlIHJhdyBubXN0YXRlIGNvbmZpZyBZQU1MLiBJbnRlcmZhY2VzIGxpc3RlZCBoZXJlIHdpbGwgYmUgYXV0b21hdGljYWxseSByZW5hbWVkIGluIHRoZSBubXN0YXRlIGNvbmZpZyBZQU1MIHRvIG1hdGNoIHRoZSByZWFsIGRldmljZSBuYW1lIHRoYXQgaXMgb2JzZXJ2ZWQgdG8gaGF2ZSB0aGUgY29ycmVzcG9uZGluZyBNQUMgYWRkcmVzcy4gQXQgbGVhc3Qgb25lIGludGVyZmFjZSBtdXN0IGJlIGxpc3RlZCBzbyB0aGF0IGl0IGNhbiBiZSB1c2VkIHRvIGlkZW50aWZ5IHRoZSBjb3JyZWN0IGhvc3QsIHdoaWNoIGlzIGRvbmUgYnkgbWF0Y2hpbmcgYW55IE1BQyBhZGRyZXNzIGluIHRoaXMgbGlzdCB0byBhbnkgTUFDIGFkZHJlc3Mgb2JzZXJ2ZWQgb24gdGhlIGhvc3QuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJtYWNBZGRyZXNzIjp7ImRlc2NyaXB0aW9uIjoibWFjIGFkZHJlc3MgcHJlc2VudCBvbiB0aGUgaG9zdC4iLCJwYXR0ZXJuIjoiXihbMC05QS1GYS1mXXsyfVs6XSl7NX0oWzAtOUEtRmEtZl17Mn0pJCIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5pYyBuYW1lIHVzZWQgaW4gdGhlIHlhbWwsIHdoaWNoIHJlbGF0ZXMgMToxIHRvIHRoZSBtYWMgYWRkcmVzcy4gTmFtZSBpbiBSRVNUIEFQSTogbG9naWNhbE5JQ05hbWUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJtYWNBZGRyZXNzIiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/edge-infrastructure/assisted-image-service@sha256:b3a4057445ce82fdcc40cf6234be366b538a8c6427096e0308eb3d5d0e08f847
    name: image-service
  - image: quay.io/edge-infrastructure/assisted-installer-agent@sha256:cfdc7488e142c2d3c21d0aec58725e14fe8af798bb88346db6473106405af4a2
    name: agent
  - image: quay.io/edge-infrastructure/assisted-installer-controller@sha256:ac750125193e8dcacdacd7e4bdf8008f08be1d746bebb98e34433150acbf3989
    name: reporter
  - image: quay.io/edge-infrastructure/assisted-installer@sha256:0f60a050310cbd79dcdbe66a3f724ddd421723847d4f63b514b92e5cc52623e8
    name: installer
  - image: quay.io/edge-infrastructure/assisted-service@sha256:edb6f7e3c8c2904db17a606760cc07426e2d790d4d0787aee29abab50d1aed1f
    name: controller
  - image: quay.io/edge-infrastructure/postgresql-12-centos7@sha256:94727d70e0afbf4e167e078744f3a10ac9d82edc553d57b0ecbb5443264f07e1
    name: postgresql
  - image: quay.io/openshift-community-operators/assisted-service-operator@sha256:cd13957368e89babae2da04b8c1f4f1d1537894ad37b799885f3558b4819330d
    name: ""
schema: olm.bundle
