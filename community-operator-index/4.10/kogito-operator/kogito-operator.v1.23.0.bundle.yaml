image: quay.io/openshift-community-operators/kogito-operator@sha256:6c9650af2f1f4eee8c3c08bebcb42e43ca21ae9460aae9979ad747fc460bf6a6
name: kogito-operator.v1.23.0
package: kogito-operator
properties:
  - type: olm.gvk
    value:
      group: app.kiegroup.org
      kind: KogitoBuild
      version: v1beta1
  - type: olm.gvk
    value:
      group: app.kiegroup.org
      kind: KogitoInfra
      version: v1beta1
  - type: olm.gvk
    value:
      group: app.kiegroup.org
      kind: KogitoRuntime
      version: v1beta1
  - type: olm.gvk
    value:
      group: app.kiegroup.org
      kind: KogitoSupportingService
      version: v1beta1
  - type: olm.package
    value:
      packageName: kogito-operator
      version: 1.23.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImtvZ2l0b2luZnJhcy5hcHAua2llZ3JvdXAub3JnIn0sInNwZWMiOnsiZ3JvdXAiOiJhcHAua2llZ3JvdXAub3JnIiwibmFtZXMiOnsia2luZCI6IktvZ2l0b0luZnJhIiwibGlzdEtpbmQiOiJLb2dpdG9JbmZyYUxpc3QiLCJwbHVyYWwiOiJrb2dpdG9pbmZyYXMiLCJzaW5ndWxhciI6ImtvZ2l0b2luZnJhIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiVGhpcmQgUGFydHkgSW5mcmFzdHJ1Y3R1cmUgUmVzb3VyY2UiLCJqc29uUGF0aCI6Ii5zcGVjLnJlc291cmNlLm5hbWUiLCJuYW1lIjoiUmVzb3VyY2UgTmFtZSIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiS3ViZXJuZXRlcyBDUiBLaW5kIiwianNvblBhdGgiOiIuc3BlYy5yZXNvdXJjZS5raW5kIiwibmFtZSI6IktpbmQiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ikt1YmVybmV0ZXMgQ1IgQVBJIFZlcnNpb24iLCJqc29uUGF0aCI6Ii5zcGVjLnJlc291cmNlLmFwaVZlcnNpb24iLCJuYW1lIjoiQVBJIFZlcnNpb24iLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkdlbmVyYWwgU3RhdHVzIG9mIHRoaXMgcmVzb3VyY2UgYmluZCIsImpzb25QYXRoIjoiLnN0YXR1cy5jb25kaXRpb24uc3RhdHVzIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIHJlYXNvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5jb25kaXRpb24ucmVhc29uIiwibmFtZSI6IlJlYXNvbiIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWJldGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IktvZ2l0b0luZnJhIGlzIHRoZSByZXNvdXJjZSB0byBiaW5kIGEgQ3VzdG9tIFJlc291cmNlIChDUikgbm90IG1hbmFnZWQgYnkgS29naXRvIE9wZXJhdG9yIHRvIGEgZ2l2ZW4gZGVwbG95ZWQgS29naXRvIHNlcnZpY2UuIFxuIEl0IGhvbGRzIHRoZSByZWZlcmVuY2Ugb2YgYSBDUiBtYW5hZ2VkIGJ5IGFub3RoZXIgb3BlcmF0b3Igc3VjaCBhcyBTdHJpbXppLiBGb3IgZXhhbXBsZTogb25lIGNhbiBjcmVhdGUgYSBLYWZrYSBDUiB2aWEgU3RyaW16aSBhbmQgbGluayB0aGlzIHJlc291cmNlIHVzaW5nIEtvZ2l0b0luZnJhIHRvIGEgZ2l2ZW4gS29naXRvIHNlcnZpY2UgKGN1c3RvbSBvciBzdXBwb3J0aW5nLCBzdWNoIGFzIERhdGEgSW5kZXgpLiBcbiBQbGVhc2UgcmVmZXIgdG8gdGhlIEtvZ2l0byBPcGVyYXRvciBkb2N1bWVudGF0aW9uIChodHRwczovL2RvY3MuamJvc3Mub3JnL2tvZ2l0by9yZWxlYXNlL2xhdGVzdC9odG1sX3NpbmdsZS8pIGZvciBtb3JlIGluZm9ybWF0aW9uLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiS29naXRvSW5mcmFTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgS29naXRvSW5mcmEuIiwicHJvcGVydGllcyI6eyJjb25maWdNYXBFbnZGcm9tUmVmZXJlbmNlcyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2Ygc2VjcmV0IHRoYXQgc2hvdWxkIGJlIG1vdW50ZWQgdG8gdGhlIHNlcnZpY2VzIGFzIGVudnMiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwiY29uZmlnTWFwVm9sdW1lUmVmZXJlbmNlcyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgY29uZmlnbWFwIHRoYXQgc2hvdWxkIGJlIGFkZGVkIHRvIHRoZSBzZXJ2aWNlcyBib3VuZCB0byB0aGlzIGluZnJhIGluc3RhbmNlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJWb2x1bWVSZWZlcmVuY2UgcmVwcmVzZW50cyB0aGUgc291cmNlIG9mIGEgdm9sdW1lIHRvIG1vdW50LiIsInByb3BlcnRpZXMiOnsiZmlsZU1vZGUiOnsiZGVzY3JpcHRpb24iOiJQZXJtaXNzaW9uIG9uIHRoZSBmaWxlIG1vdW50ZWQgYXMgdm9sdW1lIG9uIGRlcGxveW1lbnQuIE11c3QgYmUgYW4gb2N0YWwgdmFsdWUgYmV0d2VlbiAwMDAwIGFuZCAwNzc3IG9yIGEgZGVjaW1hbCB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDUxMS4gWUFNTCBhY2NlcHRzIGJvdGggb2N0YWwgYW5kIGRlY2ltYWwgdmFsdWVzLCBKU09OIHJlcXVpcmVzIGRlY2ltYWwgdmFsdWVzIGZvciBtb2RlIGJpdHMuIERlZmF1bHRzIHRvIDA2NDQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJtb3VudFBhdGgiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHdpdGhpbiB0aGUgY29udGFpbmVyIGF0IHdoaWNoIHRoZSB2b2x1bWUgc2hvdWxkIGJlIG1vdW50ZWQuICBNdXN0IG5vdCBjb250YWluICc6Jy4gRGVmYXVsdCBtb3VudCBwYXRoIGlzIC9ob21lL2tvZ2l0by9jb25maWciLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGlzIG11c3QgbWF0Y2ggdGhlIE5hbWUgb2YgYSBDb25maWdNYXAuIiwidHlwZSI6InN0cmluZyJ9LCJvcHRpb25hbCI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZnkgd2hldGhlciB0aGUgU2VjcmV0IG9yIGl0cyBrZXlzIG11c3QgYmUgZGVmaW5lZCIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJlbnZzIjp7ImRlc2NyaXB0aW9uIjoiRW52aXJvbm1lbnQgdmFyaWFibGVzIHRvIGJlIGFkZGVkIHRvIHRoZSBydW50aW1lIGNvbnRhaW5lci4gS2V5cyBtdXN0IGJlIGEgQ19JREVOVElGSUVSLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiRW52VmFyIHJlcHJlc2VudHMgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUgcHJlc2VudCBpbiBhIENvbnRhaW5lci4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZS4gTXVzdCBiZSBhIENfSURFTlRJRklFUi4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiVmFyaWFibGUgcmVmZXJlbmNlcyAkKFZBUl9OQU1FKSBhcmUgZXhwYW5kZWQgdXNpbmcgdGhlIHByZXZpb3VzIGRlZmluZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzIGluIHRoZSBjb250YWluZXIgYW5kIGFueSBzZXJ2aWNlIGVudmlyb25tZW50IHZhcmlhYmxlcy4gSWYgYSB2YXJpYWJsZSBjYW5ub3QgYmUgcmVzb2x2ZWQsIHRoZSByZWZlcmVuY2UgaW4gdGhlIGlucHV0IHN0cmluZyB3aWxsIGJlIHVuY2hhbmdlZC4gVGhlICQoVkFSX05BTUUpIHN5bnRheCBjYW4gYmUgZXNjYXBlZCB3aXRoIGEgZG91YmxlICQkLCBpZTogJCQoVkFSX05BTUUpLiBFc2NhcGVkIHJlZmVyZW5jZXMgd2lsbCBuZXZlciBiZSBleHBhbmRlZCwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZSB2YXJpYWJsZSBleGlzdHMgb3Igbm90LiBEZWZhdWx0cyB0byBcIlwiLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVGcm9tIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlIGZvciB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUncyB2YWx1ZS4gQ2Fubm90IGJlIHVzZWQgaWYgdmFsdWUgaXMgbm90IGVtcHR5LiIsInByb3BlcnRpZXMiOnsiY29uZmlnTWFwS2V5UmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VsZWN0cyBhIGtleSBvZiBhIENvbmZpZ01hcC4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgdG8gc2VsZWN0LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyBUT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifSwib3B0aW9uYWwiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZ5IHdoZXRoZXIgdGhlIENvbmZpZ01hcCBvciBpdHMga2V5IG11c3QgYmUgZGVmaW5lZCIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJrZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJmaWVsZFJlZiI6eyJkZXNjcmlwdGlvbiI6IlNlbGVjdHMgYSBmaWVsZCBvZiB0aGUgcG9kOiBzdXBwb3J0cyBtZXRhZGF0YS5uYW1lLCBtZXRhZGF0YS5uYW1lc3BhY2UsIGBtZXRhZGF0YS5sYWJlbHNbJ1x1MDAzY0tFWVx1MDAzZSddYCwgYG1ldGFkYXRhLmFubm90YXRpb25zWydcdTAwM2NLRVlcdTAwM2UnXWAsIHNwZWMubm9kZU5hbWUsIHNwZWMuc2VydmljZUFjY291bnROYW1lLCBzdGF0dXMuaG9zdElQLCBzdGF0dXMucG9kSVAsIHN0YXR1cy5wb2RJUHMuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiVmVyc2lvbiBvZiB0aGUgc2NoZW1hIHRoZSBGaWVsZFBhdGggaXMgd3JpdHRlbiBpbiB0ZXJtcyBvZiwgZGVmYXVsdHMgdG8gXCJ2MVwiLiIsInR5cGUiOiJzdHJpbmcifSwiZmllbGRQYXRoIjp7ImRlc2NyaXB0aW9uIjoiUGF0aCBvZiB0aGUgZmllbGQgdG8gc2VsZWN0IGluIHRoZSBzcGVjaWZpZWQgQVBJIHZlcnNpb24uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiZmllbGRQYXRoIl0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VGaWVsZFJlZiI6eyJkZXNjcmlwdGlvbiI6IlNlbGVjdHMgYSByZXNvdXJjZSBvZiB0aGUgY29udGFpbmVyOiBvbmx5IHJlc291cmNlcyBsaW1pdHMgYW5kIHJlcXVlc3RzIChsaW1pdHMuY3B1LCBsaW1pdHMubWVtb3J5LCBsaW1pdHMuZXBoZW1lcmFsLXN0b3JhZ2UsIHJlcXVlc3RzLmNwdSwgcmVxdWVzdHMubWVtb3J5IGFuZCByZXF1ZXN0cy5lcGhlbWVyYWwtc3RvcmFnZSkgYXJlIGN1cnJlbnRseSBzdXBwb3J0ZWQuIiwicHJvcGVydGllcyI6eyJjb250YWluZXJOYW1lIjp7ImRlc2NyaXB0aW9uIjoiQ29udGFpbmVyIG5hbWU6IHJlcXVpcmVkIGZvciB2b2x1bWVzLCBvcHRpb25hbCBmb3IgZW52IHZhcnMiLCJ0eXBlIjoic3RyaW5nIn0sImRpdmlzb3IiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6IlNwZWNpZmllcyB0aGUgb3V0cHV0IGZvcm1hdCBvZiB0aGUgZXhwb3NlZCByZXNvdXJjZXMsIGRlZmF1bHRzIHRvIFwiMVwiIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJyZXNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlJlcXVpcmVkOiByZXNvdXJjZSB0byBzZWxlY3QiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJyZXNvdXJjZSJdLCJ0eXBlIjoib2JqZWN0In0sInNlY3JldEtleVJlZiI6eyJkZXNjcmlwdGlvbiI6IlNlbGVjdHMgYSBrZXkgb2YgYSBzZWNyZXQgaW4gdGhlIHBvZCdzIG5hbWVzcGFjZSIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgc2VjcmV0IHRvIHNlbGVjdCBmcm9tLiAgTXVzdCBiZSBhIHZhbGlkIHNlY3JldCBrZXkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9LCJvcHRpb25hbCI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZnkgd2hldGhlciB0aGUgU2VjcmV0IG9yIGl0cyBrZXkgbXVzdCBiZSBkZWZpbmVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJpbmZyYVByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIHByb3BlcnRpZXMgd2hpY2ggd291bGQgYmUgbmVlZGVkIHRvIHNldHVwIGNvcnJlY3QgcnVudGltZS9zZXJ2aWNlIGNvbmZpZ3VyYXRpb24sIGJhc2VkIG9uIHRoZSByZXNvdXJjZSB0eXBlLiBcbiBGb3IgZXhhbXBsZSwgTW9uZ29EQiB3aWxsIHJlcXVpcmUgYHVzZXJuYW1lYCBhbmQgYGRhdGFiYXNlYCBhcyBwcm9wZXJ0aWVzIGZvciBhIGNvcnJlY3Qgc2V0dXAsIGVsc2UgaXQgd2lsbCBmYWlsIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJyZXNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlIGZvciB0aGUgc2VydmljZS4gRXhhbXBsZTogSW5maW5pc3Bhbi9LYWZrYS9LZXljbG9hay4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlc2NyaWJlcyB0aGUgQVBJIFZlcnNpb24gb2YgcmVmZXJyZWQgS3ViZXJuZXRlcyByZXNvdXJjZSBmb3IgZXhhbXBsZSwgaW5maW5pc3Bhbi5vcmcvdjEiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGRlc2NyaWJlcyB0aGUga2luZCBvZiByZWZlcnJlZCBLdWJlcm5ldGVzIHJlc291cmNlIGZvciBleGFtcGxlLCBJbmZpbmlzcGFuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiByZWZlcnJlZCByZXNvdXJjZS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSB3aGVyZSByZWZlcnJlZCByZXNvdXJjZSBleGlzdHMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXBpVmVyc2lvbiIsImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic2VjcmV0RW52RnJvbVJlZmVyZW5jZXMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHNlY3JldCB0aGF0IHNob3VsZCBiZSBtb3VudGVkIHRvIHRoZSBzZXJ2aWNlcyBhcyBlbnZzIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInNlY3JldFZvbHVtZVJlZmVyZW5jZXMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHNlY3JldCB0aGF0IHNob3VsZCBiZSBtdW50ZWQgdG8gdGhlIHNlcnZpY2VzIGJvdW5kIHRvIHRoaXMgaW5mcmEgaW5zdGFuY2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZVJlZmVyZW5jZSByZXByZXNlbnRzIHRoZSBzb3VyY2Ugb2YgYSB2b2x1bWUgdG8gbW91bnQuIiwicHJvcGVydGllcyI6eyJmaWxlTW9kZSI6eyJkZXNjcmlwdGlvbiI6IlBlcm1pc3Npb24gb24gdGhlIGZpbGUgbW91bnRlZCBhcyB2b2x1bWUgb24gZGVwbG95bWVudC4gTXVzdCBiZSBhbiBvY3RhbCB2YWx1ZSBiZXR3ZWVuIDAwMDAgYW5kIDA3Nzcgb3IgYSBkZWNpbWFsIHZhbHVlIGJldHdlZW4gMCBhbmQgNTExLiBZQU1MIGFjY2VwdHMgYm90aCBvY3RhbCBhbmQgZGVjaW1hbCB2YWx1ZXMsIEpTT04gcmVxdWlyZXMgZGVjaW1hbCB2YWx1ZXMgZm9yIG1vZGUgYml0cy4gRGVmYXVsdHMgdG8gMDY0NC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sIm1vdW50UGF0aCI6eyJkZXNjcmlwdGlvbiI6IlBhdGggd2l0aGluIHRoZSBjb250YWluZXIgYXQgd2hpY2ggdGhlIHZvbHVtZSBzaG91bGQgYmUgbW91bnRlZC4gIE11c3Qgbm90IGNvbnRhaW4gJzonLiBEZWZhdWx0IG1vdW50IHBhdGggaXMgL2hvbWUva29naXRvL2NvbmZpZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgbXVzdCBtYXRjaCB0aGUgTmFtZSBvZiBhIENvbmZpZ01hcC4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wdGlvbmFsIjp7ImRlc2NyaXB0aW9uIjoiU3BlY2lmeSB3aGV0aGVyIHRoZSBTZWNyZXQgb3IgaXRzIGtleXMgbXVzdCBiZSBkZWZpbmVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IktvZ2l0b0luZnJhU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEtvZ2l0b0luZnJhLiIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6Ikhpc3Rvcnkgb2YgY29uZGl0aW9ucyBmb3IgdGhlIHJlc291cmNlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb24gY29udGFpbnMgZGV0YWlscyBmb3Igb25lIGFzcGVjdCBvZiB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGlzIEFQSSBSZXNvdXJjZS4gLS0tIFRoaXMgc3RydWN0IGlzIGludGVuZGVkIGZvciBkaXJlY3QgdXNlIGFzIGFuIGFycmF5IGF0IHRoZSBmaWVsZCBwYXRoIC5zdGF0dXMuY29uZGl0aW9ucy4gIEZvciBleGFtcGxlLCB0eXBlIEZvb1N0YXR1cyBzdHJ1Y3R7ICAgICAvLyBSZXByZXNlbnRzIHRoZSBvYnNlcnZhdGlvbnMgb2YgYSBmb28ncyBjdXJyZW50IHN0YXRlLiAgICAgLy8gS25vd24gLnN0YXR1cy5jb25kaXRpb25zLnR5cGUgYXJlOiBcIkF2YWlsYWJsZVwiLCBcIlByb2dyZXNzaW5nXCIsIGFuZCBcIkRlZ3JhZGVkXCIgICAgIC8vICtwYXRjaE1lcmdlS2V5PXR5cGUgICAgIC8vICtwYXRjaFN0cmF0ZWd5PW1lcmdlICAgICAvLyArbGlzdFR5cGU9bWFwICAgICAvLyArbGlzdE1hcEtleT10eXBlICAgICBDb25kaXRpb25zIFtdbWV0YXYxLkNvbmRpdGlvbiBganNvbjpcImNvbmRpdGlvbnMsb21pdGVtcHR5XCIgcGF0Y2hTdHJhdGVneTpcIm1lcmdlXCIgcGF0Y2hNZXJnZUtleTpcInR5cGVcIiBwcm90b2J1ZjpcImJ5dGVzLDEscmVwLG5hbWU9Y29uZGl0aW9uc1wiYCBcbiAgICAgLy8gb3RoZXIgZmllbGRzIH0iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Imxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiBUaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uIFRoaXMgbWF5IGJlIGFuIGVtcHR5IHN0cmluZy4iLCJtYXhMZW5ndGgiOjMyNzY4LCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiByZXByZXNlbnRzIHRoZSAubWV0YWRhdGEuZ2VuZXJhdGlvbiB0aGF0IHRoZSBjb25kaXRpb24gd2FzIHNldCBiYXNlZCB1cG9uLiBGb3IgaW5zdGFuY2UsIGlmIC5tZXRhZGF0YS5nZW5lcmF0aW9uIGlzIGN1cnJlbnRseSAxMiwgYnV0IHRoZSAuc3RhdHVzLmNvbmRpdGlvbnNbeF0ub2JzZXJ2ZWRHZW5lcmF0aW9uIGlzIDksIHRoZSBjb25kaXRpb24gaXMgb3V0IG9mIGRhdGUgd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4gUHJvZHVjZXJzIG9mIHNwZWNpZmljIGNvbmRpdGlvbiB0eXBlcyBtYXkgZGVmaW5lIGV4cGVjdGVkIHZhbHVlcyBhbmQgbWVhbmluZ3MgZm9yIHRoaXMgZmllbGQsIGFuZCB3aGV0aGVyIHRoZSB2YWx1ZXMgYXJlIGNvbnNpZGVyZWQgYSBndWFyYW50ZWVkIEFQSS4gVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuIFRoaXMgZmllbGQgbWF5IG5vdCBiZSBlbXB0eS4iLCJtYXhMZW5ndGgiOjEwMjQsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bQS1aYS16XShbQS1aYS16MC05Xyw6XSpbQS1aYS16MC05X10pPyQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwiZW51bSI6WyJUcnVlIiwiRmFsc2UiLCJVbmtub3duIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgY29uZGl0aW9uIGluIENhbWVsQ2FzZSBvciBpbiBmb28uZXhhbXBsZS5jb20vQ2FtZWxDYXNlLiAtLS0gTWFueSAuY29uZGl0aW9uLnR5cGUgdmFsdWVzIGFyZSBjb25zaXN0ZW50IGFjcm9zcyByZXNvdXJjZXMgbGlrZSBBdmFpbGFibGUsIGJ1dCBiZWNhdXNlIGFyYml0cmFyeSBjb25kaXRpb25zIGNhbiBiZSB1c2VmdWwgKHNlZSAubm9kZS5zdGF0dXMuY29uZGl0aW9ucyksIHRoZSBhYmlsaXR5IHRvIGRlY29uZmxpY3QgaXMgaW1wb3J0YW50LiBUaGUgcmVnZXggaXQgbWF0Y2hlcyBpcyAoZG5zMTEyM1N1YmRvbWFpbkZtdC8pPyhxdWFsaWZpZWROYW1lRm10KSIsIm1heExlbmd0aCI6MzE2LCJwYXR0ZXJuIjoiXihbYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPyhcXC5bYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPykqLyk/KChbQS1aYS16MC05XVstQS1aYS16MC05Xy5dKik/W0EtWmEtejAtOV0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJjb25maWdNYXBFbnZGcm9tUmVmZXJlbmNlcyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgQ29uZmlnbWFwIHRoYXQgc2hvdWxkIGJlIG1vdW50ZWQgdG8gdGhlIHNlcnZpY2VzIGFzIGVudnMiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwiY29uZmlnTWFwVm9sdW1lUmVmZXJlbmNlcyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgY29uZmlnbWFwIHRoYXQgc2hvdWxkIGJlIGFkZGVkIGFzIHZvbHVtZSBtb3VudCB0byB0aGlzIGluZnJhIGluc3RhbmNlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJWb2x1bWVSZWZlcmVuY2UgcmVwcmVzZW50cyB0aGUgc291cmNlIG9mIGEgdm9sdW1lIHRvIG1vdW50LiIsInByb3BlcnRpZXMiOnsiZmlsZU1vZGUiOnsiZGVzY3JpcHRpb24iOiJQZXJtaXNzaW9uIG9uIHRoZSBmaWxlIG1vdW50ZWQgYXMgdm9sdW1lIG9uIGRlcGxveW1lbnQuIE11c3QgYmUgYW4gb2N0YWwgdmFsdWUgYmV0d2VlbiAwMDAwIGFuZCAwNzc3IG9yIGEgZGVjaW1hbCB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDUxMS4gWUFNTCBhY2NlcHRzIGJvdGggb2N0YWwgYW5kIGRlY2ltYWwgdmFsdWVzLCBKU09OIHJlcXVpcmVzIGRlY2ltYWwgdmFsdWVzIGZvciBtb2RlIGJpdHMuIERlZmF1bHRzIHRvIDA2NDQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJtb3VudFBhdGgiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHdpdGhpbiB0aGUgY29udGFpbmVyIGF0IHdoaWNoIHRoZSB2b2x1bWUgc2hvdWxkIGJlIG1vdW50ZWQuICBNdXN0IG5vdCBjb250YWluICc6Jy4gRGVmYXVsdCBtb3VudCBwYXRoIGlzIC9ob21lL2tvZ2l0by9jb25maWciLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGlzIG11c3QgbWF0Y2ggdGhlIE5hbWUgb2YgYSBDb25maWdNYXAuIiwidHlwZSI6InN0cmluZyJ9LCJvcHRpb25hbCI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZnkgd2hldGhlciB0aGUgU2VjcmV0IG9yIGl0cyBrZXlzIG11c3QgYmUgZGVmaW5lZCIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJlbnYiOnsiZGVzY3JpcHRpb24iOiJFbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gYmUgYWRkZWQgdG8gdGhlIHJ1bnRpbWUgY29udGFpbmVyLiBLZXlzIG11c3QgYmUgYSBDX0lERU5USUZJRVIuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJFbnZWYXIgcmVwcmVzZW50cyBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZSBwcmVzZW50IGluIGEgQ29udGFpbmVyLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlLiBNdXN0IGJlIGEgQ19JREVOVElGSUVSLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYXJpYWJsZSByZWZlcmVuY2VzICQoVkFSX05BTUUpIGFyZSBleHBhbmRlZCB1c2luZyB0aGUgcHJldmlvdXMgZGVmaW5lZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaW4gdGhlIGNvbnRhaW5lciBhbmQgYW55IHNlcnZpY2UgZW52aXJvbm1lbnQgdmFyaWFibGVzLiBJZiBhIHZhcmlhYmxlIGNhbm5vdCBiZSByZXNvbHZlZCwgdGhlIHJlZmVyZW5jZSBpbiB0aGUgaW5wdXQgc3RyaW5nIHdpbGwgYmUgdW5jaGFuZ2VkLiBUaGUgJChWQVJfTkFNRSkgc3ludGF4IGNhbiBiZSBlc2NhcGVkIHdpdGggYSBkb3VibGUgJCQsIGllOiAkJChWQVJfTkFNRSkuIEVzY2FwZWQgcmVmZXJlbmNlcyB3aWxsIG5ldmVyIGJlIGV4cGFuZGVkLCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhlIHZhcmlhYmxlIGV4aXN0cyBvciBub3QuIERlZmF1bHRzIHRvIFwiXCIuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZUZyb20iOnsiZGVzY3JpcHRpb24iOiJTb3VyY2UgZm9yIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSdzIHZhbHVlLiBDYW5ub3QgYmUgdXNlZCBpZiB2YWx1ZSBpcyBub3QgZW1wdHkuIiwicHJvcGVydGllcyI6eyJjb25maWdNYXBLZXlSZWYiOnsiZGVzY3JpcHRpb24iOiJTZWxlY3RzIGEga2V5IG9mIGEgQ29uZmlnTWFwLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSB0byBzZWxlY3QuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9LCJvcHRpb25hbCI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZnkgd2hldGhlciB0aGUgQ29uZmlnTWFwIG9yIGl0cyBrZXkgbXVzdCBiZSBkZWZpbmVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In0sImZpZWxkUmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VsZWN0cyBhIGZpZWxkIG9mIHRoZSBwb2Q6IHN1cHBvcnRzIG1ldGFkYXRhLm5hbWUsIG1ldGFkYXRhLm5hbWVzcGFjZSwgYG1ldGFkYXRhLmxhYmVsc1snXHUwMDNjS0VZXHUwMDNlJ11gLCBgbWV0YWRhdGEuYW5ub3RhdGlvbnNbJ1x1MDAzY0tFWVx1MDAzZSddYCwgc3BlYy5ub2RlTmFtZSwgc3BlYy5zZXJ2aWNlQWNjb3VudE5hbWUsIHN0YXR1cy5ob3N0SVAsIHN0YXR1cy5wb2RJUCwgc3RhdHVzLnBvZElQcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJWZXJzaW9uIG9mIHRoZSBzY2hlbWEgdGhlIEZpZWxkUGF0aCBpcyB3cml0dGVuIGluIHRlcm1zIG9mLCBkZWZhdWx0cyB0byBcInYxXCIuIiwidHlwZSI6InN0cmluZyJ9LCJmaWVsZFBhdGgiOnsiZGVzY3JpcHRpb24iOiJQYXRoIG9mIHRoZSBmaWVsZCB0byBzZWxlY3QgaW4gdGhlIHNwZWNpZmllZCBBUEkgdmVyc2lvbi4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJmaWVsZFBhdGgiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZUZpZWxkUmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VsZWN0cyBhIHJlc291cmNlIG9mIHRoZSBjb250YWluZXI6IG9ubHkgcmVzb3VyY2VzIGxpbWl0cyBhbmQgcmVxdWVzdHMgKGxpbWl0cy5jcHUsIGxpbWl0cy5tZW1vcnksIGxpbWl0cy5lcGhlbWVyYWwtc3RvcmFnZSwgcmVxdWVzdHMuY3B1LCByZXF1ZXN0cy5tZW1vcnkgYW5kIHJlcXVlc3RzLmVwaGVtZXJhbC1zdG9yYWdlKSBhcmUgY3VycmVudGx5IHN1cHBvcnRlZC4iLCJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDb250YWluZXIgbmFtZTogcmVxdWlyZWQgZm9yIHZvbHVtZXMsIG9wdGlvbmFsIGZvciBlbnYgdmFycyIsInR5cGUiOiJzdHJpbmcifSwiZGl2aXNvciI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIHRoZSBvdXRwdXQgZm9ybWF0IG9mIHRoZSBleHBvc2VkIHJlc291cmNlcywgZGVmYXVsdHMgdG8gXCIxXCIiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQ6IHJlc291cmNlIHRvIHNlbGVjdCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInJlc291cmNlIl0sInR5cGUiOiJvYmplY3QifSwic2VjcmV0S2V5UmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VsZWN0cyBhIGtleSBvZiBhIHNlY3JldCBpbiB0aGUgcG9kJ3MgbmFtZXNwYWNlIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBzZWNyZXQgdG8gc2VsZWN0IGZyb20uICBNdXN0IGJlIGEgdmFsaWQgc2VjcmV0IGtleS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn0sIm9wdGlvbmFsIjp7ImRlc2NyaXB0aW9uIjoiU3BlY2lmeSB3aGV0aGVyIHRoZSBTZWNyZXQgb3IgaXRzIGtleSBtdXN0IGJlIGRlZmluZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9fSwicmVxdWlyZWQiOlsia2V5Il0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInNlY3JldEVudkZyb21SZWZlcmVuY2VzIjp7ImRlc2NyaXB0aW9uIjoiTGlzdCBvZiBzZWNyZXQgdGhhdCBzaG91bGQgYmUgbW91bnRlZCB0byB0aGUgc2VydmljZXMgYXMgZW52cyIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJzZWNyZXRWb2x1bWVSZWZlcmVuY2VzIjp7ImRlc2NyaXB0aW9uIjoiTGlzdCBvZiBzZWNyZXQgdGhhdCBzaG91bGQgYmUgYWRkZWQgYXMgdm9sdW1lIG1vdW50IHRvIHRoaXMgaW5mcmEgaW5zdGFuY2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZVJlZmVyZW5jZSByZXByZXNlbnRzIHRoZSBzb3VyY2Ugb2YgYSB2b2x1bWUgdG8gbW91bnQuIiwicHJvcGVydGllcyI6eyJmaWxlTW9kZSI6eyJkZXNjcmlwdGlvbiI6IlBlcm1pc3Npb24gb24gdGhlIGZpbGUgbW91bnRlZCBhcyB2b2x1bWUgb24gZGVwbG95bWVudC4gTXVzdCBiZSBhbiBvY3RhbCB2YWx1ZSBiZXR3ZWVuIDAwMDAgYW5kIDA3Nzcgb3IgYSBkZWNpbWFsIHZhbHVlIGJldHdlZW4gMCBhbmQgNTExLiBZQU1MIGFjY2VwdHMgYm90aCBvY3RhbCBhbmQgZGVjaW1hbCB2YWx1ZXMsIEpTT04gcmVxdWlyZXMgZGVjaW1hbCB2YWx1ZXMgZm9yIG1vZGUgYml0cy4gRGVmYXVsdHMgdG8gMDY0NC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sIm1vdW50UGF0aCI6eyJkZXNjcmlwdGlvbiI6IlBhdGggd2l0aGluIHRoZSBjb250YWluZXIgYXQgd2hpY2ggdGhlIHZvbHVtZSBzaG91bGQgYmUgbW91bnRlZC4gIE11c3Qgbm90IGNvbnRhaW4gJzonLiBEZWZhdWx0IG1vdW50IHBhdGggaXMgL2hvbWUva29naXRvL2NvbmZpZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgbXVzdCBtYXRjaCB0aGUgTmFtZSBvZiBhIENvbmZpZ01hcC4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wdGlvbmFsIjp7ImRlc2NyaXB0aW9uIjoiU3BlY2lmeSB3aGV0aGVyIHRoZSBTZWNyZXQgb3IgaXRzIGtleXMgbXVzdCBiZSBkZWZpbmVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJjb25kaXRpb25zIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoia29naXRvLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogZDE3MzFlOTgua2llZ3JvdXAub3JnXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJrb2dpdG8tb3BlcmF0b3ItbWFuYWdlci1jb25maWcifX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoia29naXRvLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
    name: ""
  - image: quay.io/kiegroup/kogito-operator:1.23.0
    name: ""
  - image: quay.io/openshift-community-operators/kogito-operator@sha256:6c9650af2f1f4eee8c3c08bebcb42e43ca21ae9460aae9979ad747fc460bf6a6
    name: ""
schema: olm.bundle
