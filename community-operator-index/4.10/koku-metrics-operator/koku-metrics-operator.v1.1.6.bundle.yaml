image: quay.io/openshift-community-operators/koku-metrics-operator@sha256:20fb90b60a13fd08beb75e954c4e8cf82e8a26b63ef1f5d727c02c42b2e7ff72
name: koku-metrics-operator.v1.1.6
package: koku-metrics-operator
properties:
  - type: olm.gvk
    value:
      group: koku-metrics-cfg.openshift.io
      kind: KokuMetricsConfig
      version: v1beta1
  - type: olm.package
    value:
      packageName: koku-metrics-operator
      version: 1.1.6
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/openshift-community-operators/koku-metrics-operator@sha256:20fb90b60a13fd08beb75e954c4e8cf82e8a26b63ef1f5d727c02c42b2e7ff72
    name: ""
  - image: quay.io/project-koku/koku-metrics-operator@sha256:812b3be055f76913e0e00ef3bccb3c866bbc93e49fa439556d6298f83492fc6f
    name: koku-metrics-operator
schema: olm.bundle
