image: quay.io/openshift-community-operators/vault-config-operator@sha256:6790d8efa0fd1a03c68ef19a5306826fd8ecdebc38747ef3f4263d7ec425eb46
name: vault-config-operator.v0.5.1
package: vault-config-operator
properties:
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: AuthEngineMount
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: DatabaseSecretEngineConfig
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: DatabaseSecretEngineRole
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: GitHubSecretEngineConfig
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: GitHubSecretEngineRole
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: KubernetesAuthEngineConfig
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: KubernetesAuthEngineRole
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: LDAPAuthEngineConfig
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: LDAPAuthEngineGroup
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: PKISecretEngineConfig
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: PKISecretEngineRole
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: PasswordPolicy
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: Policy
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: QuaySecretEngineConfig
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: QuaySecretEngineRole
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: QuaySecretEngineStaticRole
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: RabbitMQSecretEngineConfig
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: RabbitMQSecretEngineRole
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: RandomSecret
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: SecretEngineMount
      version: v1alpha1
  - type: olm.gvk
    value:
      group: redhatcop.redhat.io
      kind: VaultSecret
      version: v1alpha1
  - type: olm.package
    value:
      packageName: vault-config-operator
      version: 0.5.1
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImxkYXBhdXRoZW5naW5lY29uZmlncy5yZWRoYXRjb3AucmVkaGF0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJyZWRoYXRjb3AucmVkaGF0LmlvIiwibmFtZXMiOnsia2luZCI6IkxEQVBBdXRoRW5naW5lQ29uZmlnIiwibGlzdEtpbmQiOiJMREFQQXV0aEVuZ2luZUNvbmZpZ0xpc3QiLCJwbHVyYWwiOiJsZGFwYXV0aGVuZ2luZWNvbmZpZ3MiLCJzaW5ndWxhciI6ImxkYXBhdXRoZW5naW5lY29uZmlnIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTERBUEF1dGhFbmdpbmVDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGxkYXBhdXRoZW5naW5lY29uZmlncyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkxEQVBBdXRoRW5naW5lQ29uZmlnU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIExEQVBBdXRoRW5naW5lQ29uZmlnIiwicHJvcGVydGllcyI6eyJUTFNNYXhWZXJzaW9uIjp7ImRlZmF1bHQiOiJ0bHMxMiIsImRlc2NyaXB0aW9uIjoiVExTTWF4VmVyc2lvbiBNYXhpbXVtIFRMUyB2ZXJzaW9uIHRvIHVzZS4gQWNjZXB0ZWQgdmFsdWVzIGFyZSB0bHMxMCwgdGxzMTEsIHRsczEyIG9yIHRsczEzIiwidHlwZSI6InN0cmluZyJ9LCJUTFNNaW5WZXJzaW9uIjp7ImRlZmF1bHQiOiJ0bHMxMiIsImRlc2NyaXB0aW9uIjoiVExTTWluVmVyc2lvbiBNaW5pbXVtIFRMUyB2ZXJzaW9uIHRvIHVzZS4gQWNjZXB0ZWQgdmFsdWVzIGFyZSB0bHMxMCwgdGxzMTEsIHRsczEyIG9yIHRsczEzIiwidHlwZSI6InN0cmluZyJ9LCJVUE5Eb21haW4iOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiVVBORG9tYWluICBUaGUgdXNlclByaW5jaXBhbERvbWFpbiB1c2VkIHRvIGNvbnN0cnVjdCB0aGUgVVBOIHN0cmluZyBmb3IgdGhlIGF1dGhlbnRpY2F0aW5nIHVzZXIuIFRoZSBjb25zdHJ1Y3RlZCBVUE4gd2lsbCBhcHBlYXIgYXMgW3VzZXJuYW1lXUBVUE5Eb21haW4uIEV4YW1wbGU6IGV4YW1wbGUuY29tLCB3aGljaCB3aWxsIGNhdXNlIHZhdWx0IHRvIGJpbmQgYXMgdXNlcm5hbWVAZXhhbXBsZS5jb20iLCJ0eXBlIjoic3RyaW5nIn0sImFub255bW91c0dyb3VwU2VhcmNoIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkFub255bW91c0dyb3VwU2VhcmNoIFVzZSBhbm9ueW1vdXMgYmluZHMgd2hlbiBwZXJmb3JtaW5nIExEQVAgZ3JvdXAgc2VhcmNoZXMgKG5vdGU6IGV2ZW4gd2hlbiB0cnVlLCB0aGUgaW5pdGlhbCBjcmVkZW50aWFscyB3aWxsIHN0aWxsIGJlIHVzZWQgZm9yIHRoZSBpbml0aWFsIGNvbm5lY3Rpb24gdGVzdCkuIiwidHlwZSI6ImJvb2xlYW4ifSwiYXV0aGVudGljYXRpb24iOnsicHJvcGVydGllcyI6eyJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2UgaXMgdGhlIFZhdWx0IG5hbWVzcGFjZSB0byBiZSB1c2VkIGluIGFsbCB0aGUgb3BlcmF0aW9ucyB3aXRoaW5nIHRoaXMgY29ubmVjdGlvbi9hdXRoZW50aWNhdGlvbi4gT25seSBhdmFpbGFibGUgaW4gVmF1bHQgRW50ZXJwcmlzZS4iLCJ0eXBlIjoic3RyaW5nIn0sInBhdGgiOnsiZGVmYXVsdCI6Imt1YmVybmV0ZXMiLCJkZXNjcmlwdGlvbiI6IlBhdGggaXMgdGhlIHBhdGggb2YgdGhlIHJvbGUgdXNlZCBmb3IgdGhpcyBrdWJlIGF1dGggYXV0aGVudGljYXRpb24uIFRoZSBvcGVyYXRvciB3aWxsIHRyeSB0byBhdXRoZW50aWNhdGUgYXQge1tuYW1lc3BhY2UvXX1hdXRoL3tzcGVjLnBhdGh9IiwicGF0dGVybiI6Il4oPzovP1tcXHc7OkBcdTAwMjY9XFwkLVxcLlxcK10qKSsvPyIsInR5cGUiOiJzdHJpbmcifSwicm9sZSI6eyJkZXNjcmlwdGlvbiI6IlJvbGUgdGhlIHJvbGUgdG8gYmUgdXNlZCBkdXJpbmcgYXV0aGVudGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sInNlcnZpY2VBY2NvdW50Ijp7ImRlZmF1bHQiOnsibmFtZSI6ImRlZmF1bHQifSwiZGVzY3JpcHRpb24iOiJTZXJ2aWNlQWNjb3VudCBpcyB0aGUgc2VydmljZSBhY2NvdW50IHVzZWQgZm9yIHRoZSBrdWJlIGF1dGggYXV0aGVudGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImJpbmRDcmVkZW50aWFscyI6eyJkZXNjcmlwdGlvbiI6IkJpbmRDcmVkZW50aWFscyB1c2VkIHRvIGNvbm5lY3QgdG8gdGhlIExEQVAgc2VydmljZSBvbiB0aGUgc3BlY2lmaWVkIExEQVAgU2VydmVyIEJpbmRDcmVkZW50aWFscyBjb25zaXN0cyBpbiBiaW5kRE4gYW5kIGJpbmRQYXNzLCB3aGljaCBjYW4gYmUgY3JlYXRlZCBhcyBLdWJlcm5ldGVzIFNlY3JldCwgVmF1bHRTZWNyZXQgb3IgUmFuZG9tU2VjcmV0IiwicHJvcGVydGllcyI6eyJwYXNzd29yZEtleSI6eyJkZXNjcmlwdGlvbiI6IlBhc3N3b3JkS2V5IGtleSB0byBiZSB1c2VkIHdoZW4gcmV0cmlldmluZyB0aGUgcGFzc3dvcmQsIHJlcXVpcmVkIHdpdGggVmF1bHRTZWNyZXRzIGFuZCBLdWJlcm5ldGVzIHNlY3JldHMsIGlnbm9yZWQgd2l0aCBSYW5kb21TZWNyZXQiLCJ0eXBlIjoic3RyaW5nIn0sInJhbmRvbVNlY3JldCI6eyJkZXNjcmlwdGlvbiI6IlJhbmRvbVNlY3JldCByZXRyaWV2ZXMgdGhlIGNyZWRlbnRpYWxzIGZyb20gdGhlIFZhdWx0IHNlY3JldCBjb3JyZXNwb25kaW5nIHRvIHRoaXMgUmFuZG9tU2VjcmV0LiBUaGlzIHdpbGwgbWFwIHRoZSBcInVzZXJuYW1lXCIgYW5kIFwicGFzc3dvcmRcIiBrZXlzIG9mIHRoZSBzZWNyZXQgdG8gdGhlIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBvZiB0aGlzIGNvbmZpZy4gQWxsIG90aGVyIGtleXMgd2lsbCBiZSBpZ25vcmVkLiBJZiB0aGUgUmFuZG9tU2VjcmV0IGlzIHJlZnJlc2hlZCB0aGUgb3BlcmF0b3IgcmV0cmlldmVzIHRoZSBuZXcgc2VjcmV0IGZyb20gVmF1bHQgYW5kIHVwZGF0ZXMgdGhpcyBjb25maWd1cmF0aW9uLiBPbmx5IG9uZSBvZiBSb290Q3JlZGVudGlhbHNGcm9tVmF1bHRTZWNyZXQgb3IgUm9vdENyZWRlbnRpYWxzRnJvbVNlY3JldCBvciBSb290Q3JlZGVudGlhbHNGcm9tUmFuZG9tU2VjcmV0IGNhbiBiZSBzcGVjaWZpZWQuIFdoZW4gdXNpbmcgcmFuZG9tU2VjcmV0IGEgdXNlcm5hbWUgbXVzdCBiZSBzcGVjaWZpZWQgaW4gdGhlIHNwZWMudXNlcm5hbWUgcGFzc3dvcmQ6IFNwZWNpZmllcyB0aGUgcGFzc3dvcmQgdG8gdXNlIHdoZW4gY29ubmVjdGluZyB3aXRoIHRoZSB1c2VybmFtZS4gVGhpcyB2YWx1ZSB3aWxsIG5vdCBiZSByZXR1cm5lZCBieSBWYXVsdCB3aGVuIHBlcmZvcm1pbmcgYSByZWFkIHVwb24gdGhlIGNvbmZpZ3VyYXRpb24uIFRoaXMgaXMgdHlwaWNhbGx5IHVzZWQgaW4gdGhlIGNvbm5lY3Rpb25fdXJsIGZpZWxkIHZpYSB0aGUgdGVtcGxhdGluZyBkaXJlY3RpdmUgXCJ7e1wicGFzc3dvcmRcIn19XCJcIi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6IlNlY3JldCByZXRyaWV2ZXMgdGhlIGNyZWRlbnRpYWxzIGZyb20gYSBLdWJlcm5ldGVzIHNlY3JldC4gVGhlIHNlY3JldCBtdXN0IGJlIG9mIGJhc2ljYXV0aCB0eXBlIChodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL3NlY3JldC8jYmFzaWMtYXV0aGVudGljYXRpb24tc2VjcmV0KS4gVGhpcyB3aWxsIG1hcCB0aGUgXCJ1c2VybmFtZVwiIGFuZCBcInBhc3N3b3JkXCIga2V5cyBvZiB0aGUgc2VjcmV0IHRvIHRoZSB1c2VybmFtZSBhbmQgcGFzc3dvcmQgb2YgdGhpcyBjb25maWcuIElmIHRoZSBrdWJlcm5ldGVzIHNlY3JldCBpcyB1cGRhdGVkLCB0aGlzIGNvbmZpZ3VyYXRpb24gd2lsbCBhbHNvIGJlIHVwZGF0ZWQuIEFsbCBvdGhlciBrZXlzIHdpbGwgYmUgaWdub3JlZC4gT25seSBvbmUgb2YgUm9vdENyZWRlbnRpYWxzRnJvbVZhdWx0U2VjcmV0IG9yIFJvb3RDcmVkZW50aWFsc0Zyb21TZWNyZXQgb3IgUm9vdENyZWRlbnRpYWxzRnJvbVJhbmRvbVNlY3JldCBjYW4gYmUgc3BlY2lmaWVkLiB1c2VybmFtZTogU3BlY2lmaWVzIHRoZSBuYW1lIG9mIHRoZSB1c2VyIHRvIHVzZSBhcyB0aGUgXCJyb290XCIgdXNlciB3aGVuIGNvbm5lY3RpbmcgdG8gdGhlIGRhdGFiYXNlLiBUaGlzIFwicm9vdFwiIHVzZXIgaXMgdXNlZCB0byBjcmVhdGUvdXBkYXRlL2RlbGV0ZSB1c2VycyBtYW5hZ2VkIGJ5IHRoZXNlIHBsdWdpbnMsIHNvIHlvdSB3aWxsIG5lZWQgdG8gZW5zdXJlIHRoYXQgdGhpcyB1c2VyIGhhcyBwZXJtaXNzaW9ucyB0byBtYW5pcHVsYXRlIHVzZXJzIGFwcHJvcHJpYXRlIHRvIHRoZSBkYXRhYmFzZS4gVGhpcyBpcyB0eXBpY2FsbHkgdXNlZCBpbiB0aGUgY29ubmVjdGlvbl91cmwgZmllbGQgdmlhIHRoZSB0ZW1wbGF0aW5nIGRpcmVjdGl2ZSBcInt7XCJ1c2VybmFtZVwifX1cIiBvciBcInt7XCJuYW1lXCJ9fVwiLiBwYXNzd29yZDogU3BlY2lmaWVzIHRoZSBwYXNzd29yZCB0byB1c2Ugd2hlbiBjb25uZWN0aW5nIHdpdGggdGhlIHVzZXJuYW1lLiBUaGlzIHZhbHVlIHdpbGwgbm90IGJlIHJldHVybmVkIGJ5IFZhdWx0IHdoZW4gcGVyZm9ybWluZyBhIHJlYWQgdXBvbiB0aGUgY29uZmlndXJhdGlvbi4gVGhpcyBpcyB0eXBpY2FsbHkgdXNlZCBpbiB0aGUgY29ubmVjdGlvbl91cmwgZmllbGQgdmlhIHRoZSB0ZW1wbGF0aW5nIGRpcmVjdGl2ZSBcInt7XCJwYXNzd29yZFwifX1cIi4gSWYgdXNlcm5hbWUgaXMgcHJvdmlkZWQgYXMgc3BlYy51c2VybmFtZSwgaXQgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIHRoZSB1c2VybmFtZSByZXRyaWV2ZWQgZnJvbSB0aGUgcmVmZXJlbmNlZCBzZWNyZXQiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInVzZXJuYW1lS2V5Ijp7ImRlc2NyaXB0aW9uIjoiVXNlcm5hbWVLZXkga2V5IHRvIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIHRoZSB1c2VybmFtZSwgb3B0aW9uYWwgd2l0aCBWYXVsdFNlY3JldHMgYW5kIEt1YmVybmV0ZXMgc2VjcmV0cywgaWdub3JlZCB3aXRoIFJhbmRvbVNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwidmF1bHRTZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJWYXVsdFNlY3JldCByZXRyaWV2ZXMgdGhlIGNyZWRlbnRpYWxzIGZyb20gYSBWYXVsdCBzZWNyZXQuIFRoaXMgd2lsbCBtYXAgdGhlIFwidXNlcm5hbWVcIiBhbmQgXCJwYXNzd29yZFwiIGtleXMgb2YgdGhlIHNlY3JldCB0byB0aGUgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIG9mIHRoaXMgY29uZmlnLiBBbGwgb3RoZXIga2V5cyB3aWxsIGJlIGlnbm9yZWQuIE9ubHkgb25lIG9mIFJvb3RDcmVkZW50aWFsc0Zyb21WYXVsdFNlY3JldCBvciBSb290Q3JlZGVudGlhbHNGcm9tU2VjcmV0IG9yIFJvb3RDcmVkZW50aWFsc0Zyb21SYW5kb21TZWNyZXQgY2FuIGJlIHNwZWNpZmllZC4gdXNlcm5hbWU6IFNwZWNpZmllcyB0aGUgbmFtZSBvZiB0aGUgdXNlciB0byB1c2UgYXMgdGhlIFwicm9vdFwiIHVzZXIgd2hlbiBjb25uZWN0aW5nIHRvIHRoZSBkYXRhYmFzZS4gVGhpcyBcInJvb3RcIiB1c2VyIGlzIHVzZWQgdG8gY3JlYXRlL3VwZGF0ZS9kZWxldGUgdXNlcnMgbWFuYWdlZCBieSB0aGVzZSBwbHVnaW5zLCBzbyB5b3Ugd2lsbCBuZWVkIHRvIGVuc3VyZSB0aGF0IHRoaXMgdXNlciBoYXMgcGVybWlzc2lvbnMgdG8gbWFuaXB1bGF0ZSB1c2VycyBhcHByb3ByaWF0ZSB0byB0aGUgZGF0YWJhc2UuIFRoaXMgaXMgdHlwaWNhbGx5IHVzZWQgaW4gdGhlIGNvbm5lY3Rpb25fdXJsIGZpZWxkIHZpYSB0aGUgdGVtcGxhdGluZyBkaXJlY3RpdmUgXCJ7e1widXNlcm5hbWVcIn19XCIgb3IgXCJ7e1wibmFtZVwifX1cIi4gcGFzc3dvcmQ6IFNwZWNpZmllcyB0aGUgcGFzc3dvcmQgdG8gdXNlIHdoZW4gY29ubmVjdGluZyB3aXRoIHRoZSB1c2VybmFtZS4gVGhpcyB2YWx1ZSB3aWxsIG5vdCBiZSByZXR1cm5lZCBieSBWYXVsdCB3aGVuIHBlcmZvcm1pbmcgYSByZWFkIHVwb24gdGhlIGNvbmZpZ3VyYXRpb24uIFRoaXMgaXMgdHlwaWNhbGx5IHVzZWQgaW4gdGhlIGNvbm5lY3Rpb25fdXJsIGZpZWxkIHZpYSB0aGUgdGVtcGxhdGluZyBkaXJlY3RpdmUgXCJ7e1wicGFzc3dvcmRcIn19XCIuIElmIHVzZXJuYW1lIGlzIHByb3ZpZGVkIGFzIHNwZWMudXNlcm5hbWUsIGl0IHRha2VzIHByZWNlZGVuY2Ugb3ZlciB0aGUgdXNlcm5hbWUgcmV0cmlldmVkIGZyb20gdGhlIHJlZmVyZW5jZWQgc2VjcmV0IiwicHJvcGVydGllcyI6eyJwYXRoIjp7ImRlc2NyaXB0aW9uIjoiUGF0aCBpcyB0aGUgcGF0aCB0byB0aGUgc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJiaW5kRE4iOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiQmluZEROIC0gVXNlcm5hbWUgdXNlZCB0byBjb25uZWN0IHRvIHRoZSBMREFQIHNlcnZpY2Ugb24gdGhlIHNwZWNpZmllZCBMREFQIFNlcnZlci4gSWYgaW4gdGhlIGZvcm0gYWNjb3VudG5hbWVAZG9tYWluLmNvbSwgdGhlIHVzZXJuYW1lIGlzIHRyYW5zZm9ybWVkIGludG8gYSBwcm9wZXIgTERBUCBiaW5kIEROLCBmb3IgZXhhbXBsZSwgQ049YWNjb3VudG5hbWUsQ049dXNlcnMsREM9ZG9tYWluLERDPWNvbSwgd2hlbiBhY2Nlc3NpbmcgdGhlIExEQVAgc2VydmVyLiBJZiB1c2VybmFtZSBpcyBwcm92aWRlZCBpdCB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgdGhlIHVzZXJuYW1lIHJldHJpZXZlZCBmcm9tIHRoZSByZWZlcmVuY2VkIHNlY3JldHMiLCJ0eXBlIjoic3RyaW5nIn0sImNhc2VTZW5zaXRpdmVOYW1lcyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJDYXNlU2Vuc2l0aXZlTmFtZXMgSWYgc2V0LCB1c2VyIGFuZCBncm91cCBuYW1lcyBhc3NpZ25lZCB0byBwb2xpY2llcyB3aXRoaW4gdGhlIGJhY2tlbmQgd2lsbCBiZSBjYXNlIHNlbnNpdGl2ZS4gT3RoZXJ3aXNlLCBuYW1lcyB3aWxsIGJlIG5vcm1hbGl6ZWQgdG8gbG93ZXIgY2FzZS4gQ2FzZSB3aWxsIHN0aWxsIGJlIHByZXNlcnZlZCB3aGVuIHNlbmRpbmcgdGhlIHVzZXJuYW1lIHRvIHRoZSBMREFQIHNlcnZlciBhdCBsb2dpbiB0aW1lOyB0aGlzIGlzIG9ubHkgZm9yIG1hdGNoaW5nIGxvY2FsIHVzZXIvZ3JvdXAgZGVmaW5pdGlvbnMuIiwidHlwZSI6ImJvb2xlYW4ifSwiY2VydGlmaWNhdGUiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiQ2VydGlmaWNhdGUgQ0EgY2VydGlmaWNhdGUgdG8gdXNlIHdoZW4gdmVyaWZ5aW5nIExEQVAgc2VydmVyIGNlcnRpZmljYXRlLCBtdXN0IGJlIHg1MDkgUEVNIGVuY29kZWQuIiwidHlwZSI6InN0cmluZyJ9LCJjbGllbnRUTFNDZXJ0Ijp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6IkNsaWVudFRMU0NlcnQgQ2xpZW50IGNlcnRpZmljYXRlIHRvIHByb3ZpZGUgdG8gdGhlIExEQVAgc2VydmVyLCBtdXN0IGJlIHg1MDkgUEVNIGVuY29kZWQiLCJ0eXBlIjoic3RyaW5nIn0sImNsaWVudFRMU0tleSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJDbGllbnRUTFNLZXkgQ2xpZW50IGNlcnRpZmljYXRlIGtleSB0byBwcm92aWRlIHRvIHRoZSBMREFQIHNlcnZlciwgbXVzdCBiZSB4NTA5IFBFTSBlbmNvZGVkIiwidHlwZSI6InN0cmluZyJ9LCJkZW55TnVsbEJpbmQiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJEZW55TnVsbEJpbmQgVGhpcyBvcHRpb24gcHJldmVudHMgdXNlcnMgZnJvbSBieXBhc3NpbmcgYXV0aGVudGljYXRpb24gd2hlbiBwcm92aWRpbmcgYW4gZW1wdHkgcGFzc3dvcmQiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJkaXNjb3ZlckROIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkRpc2NvdmVyRE4gVXNlIGFub255bW91cyBiaW5kIHRvIGRpc2NvdmVyIHRoZSBiaW5kIEROIG9mIGEgdXNlci4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJncm91cEF0dHIiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiR3JvdXBBdHRyIExEQVAgYXR0cmlidXRlIHRvIGZvbGxvdyBvbiBvYmplY3RzIHJldHVybmVkIGJ5IGdyb3VwZmlsdGVyIGluIG9yZGVyIHRvIGVudW1lcmF0ZSB1c2VyIGdyb3VwIG1lbWJlcnNoaXAuIEV4YW1wbGVzOiBmb3IgZ3JvdXBmaWx0ZXIgcXVlcmllcyByZXR1cm5pbmcgZ3JvdXAgb2JqZWN0cywgdXNlOiBjbi4gRm9yIHF1ZXJpZXMgcmV0dXJuaW5nIHVzZXIgb2JqZWN0cywgdXNlOiBtZW1iZXJPZi4gVGhlIGRlZmF1bHQgaXMgY24uIiwidHlwZSI6InN0cmluZyJ9LCJncm91cEROIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ikdyb3VwRE4gTERBUCBzZWFyY2ggYmFzZSB0byB1c2UgZm9yIGdyb3VwIG1lbWJlcnNoaXAgc2VhcmNoLiBUaGlzIGNhbiBiZSB0aGUgcm9vdCBjb250YWluaW5nIGVpdGhlciBncm91cHMgb3IgdXNlcnMuIEV4YW1wbGU6IG91PUdyb3VwcyxkYz1leGFtcGxlLGRjPWNvbSIsInR5cGUiOiJzdHJpbmcifSwiZ3JvdXBGaWx0ZXIiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiR3JvdXBGaWx0ZXIgR28gdGVtcGxhdGUgdXNlZCB3aGVuIGNvbnN0cnVjdGluZyB0aGUgZ3JvdXAgbWVtYmVyc2hpcCBxdWVyeS4gVGhlIHRlbXBsYXRlIGNhbiBhY2Nlc3MgdGhlIGZvbGxvd2luZyBjb250ZXh0IHZhcmlhYmxlczogW1VzZXJETiwgVXNlcm5hbWVdLiBUaGUgZGVmYXVsdCBpcyAofChtZW1iZXJVaWQ9e3suVXNlcm5hbWV9fSkobWVtYmVyPXt7LlVzZXJETn19KSh1bmlxdWVNZW1iZXI9e3suVXNlckROfX0pKSwgd2hpY2ggaXMgY29tcGF0aWJsZSB3aXRoIHNldmVyYWwgY29tbW9uIGRpcmVjdG9yeSBzY2hlbWFzLiBUbyBzdXBwb3J0IG5lc3RlZCBncm91cCByZXNvbHV0aW9uIGZvciBBY3RpdmUgRGlyZWN0b3J5LCBpbnN0ZWFkIHVzZSB0aGUgZm9sbG93aW5nIHF1ZXJ5OiAoXHUwMDI2KG9iamVjdENsYXNzPWdyb3VwKShtZW1iZXI6MS4yLjg0MC4xMTM1NTYuMS40LjE5NDE6PXt7LlVzZXJETn19KSkiLCJ0eXBlIjoic3RyaW5nIn0sImluc2VjdXJlVExTIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6Ikluc2VjdXJlVExTIElmIHRydWUsIHNraXBzIExEQVAgc2VydmVyIFNTTCBjZXJ0aWZpY2F0ZSB2ZXJpZmljYXRpb24gLSBpbnNlY3VyZSwgdXNlIHdpdGggY2F1dGlvbiEiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwYXRoIjp7ImRlc2NyaXB0aW9uIjoiUGF0aCBhdCB3aGljaCB0byBtYWtlIHRoZSBjb25maWd1cmF0aW9uLiBUaGUgZmluYWwgcGF0aCB3aWxsIGJlIHtbc3BlYy5hdXRoZW50aWNhdGlvbi5uYW1lc3BhY2VdfS9hdXRoL3tzcGVjLnBhdGh9L2NvbmZpZy97bWV0YWRhdGEubmFtZX0uIFRoZSBhdXRoZW50aWNhdGlvbiByb2xlIG11c3QgaGF2ZSB0aGUgZm9sbG93aW5nIGNhcGFiaWxpdGllcyA9IFsgXCJjcmVhdGVcIiwgXCJyZWFkXCIsIFwidXBkYXRlXCIsIFwiZGVsZXRlXCJdIG9uIHRoYXQgcGF0aC4iLCJwYXR0ZXJuIjoiXig/Oi8/W1xcdzs6QFx1MDAyNj1cXCQtXFwuXFwrXSopKy8/IiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0VGltZW91dCI6eyJkZWZhdWx0IjoiOTBzIiwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0VGltZW91dCBUaW1lb3V0LCBpbiBzZWNvbmRzLCBmb3IgdGhlIGNvbm5lY3Rpb24gd2hlbiBtYWtpbmcgcmVxdWVzdHMgYWdhaW5zdCB0aGUgc2VydmVyIGJlZm9yZSByZXR1cm5pbmcgYmFjayBhbiBlcnJvci4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXJ0VExTIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlN0YXJ0VExTIElmIHRydWUsIGlzc3VlcyBhIFN0YXJ0VExTIGNvbW1hbmQgYWZ0ZXIgZXN0YWJsaXNoaW5nIGFuIHVuZW5jcnlwdGVkIGNvbm5lY3Rpb24uIiwidHlwZSI6ImJvb2xlYW4ifSwidG9rZW5Cb3VuZENJRFJzIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6IlRva2VuQm91bmRDSURScyBMaXN0IG9mIENJRFIgYmxvY2tzOyBpZiBzZXQsIHNwZWNpZmllcyBibG9ja3Mgb2YgSVAgYWRkcmVzc2VzIHdoaWNoIGNhbiBhdXRoZW50aWNhdGUgc3VjY2Vzc2Z1bGx5LCBhbmQgdGllcyB0aGUgcmVzdWx0aW5nIHRva2VuIHRvIHRoZXNlIGJsb2NrcyBhcyB3ZWxsLiIsInR5cGUiOiJzdHJpbmcifSwidG9rZW5FeHBsaWNpdE1heFRUTCI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJUb25lbkV4cGxpY2l0TWF4VFRMIElmIHNldCwgd2lsbCBlbmNvZGUgYW4gZXhwbGljaXQgbWF4IFRUTCBvbnRvIHRoZSB0b2tlbi4gVGhpcyBpcyBhIGhhcmQgY2FwIGV2ZW4gaWYgdG9rZW5fdHRsIGFuZCB0b2tlbl9tYXhfdHRsIHdvdWxkIG90aGVyd2lzZSBhbGxvdyBhIHJlbmV3YWwuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2tlbk1heFRUTCI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJUb2tlbk1heFRUTCBUaGUgbWF4aW11bSBsaWZldGltZSBmb3IgZ2VuZXJhdGVkIHRva2Vucy4gVGhpcyBjdXJyZW50IHZhbHVlIG9mIHRoaXMgd2lsbCBiZSByZWZlcmVuY2VkIGF0IHJlbmV3YWwgdGltZSIsInR5cGUiOiJzdHJpbmcifSwidG9rZW5Ob0RlZmF1bHRQb2xpY3kiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiVG9rZW5Ob0RlZmF1bHRQb2xpY3kgSWYgc2V0LCB0aGUgZGVmYXVsdCBwb2xpY3kgd2lsbCBub3QgYmUgc2V0IG9uIGdlbmVyYXRlZCB0b2tlbnM7IG90aGVyd2lzZSBpdCB3aWxsIGJlIGFkZGVkIHRvIHRoZSBwb2xpY2llcyBzZXQgaW4gdG9rZW5fcG9saWNpZXMuIiwidHlwZSI6ImJvb2xlYW4ifSwidG9rZW5OdW1Vc2VzIjp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiVG9rZW5OdW1Vc2VzIFRoZSBtYXhpbXVtIG51bWJlciBvZiB0aW1lcyBhIGdlbmVyYXRlZCB0b2tlbiBtYXkgYmUgdXNlZCAod2l0aGluIGl0cyBsaWZldGltZSk7IDAgbWVhbnMgdW5saW1pdGVkLiBJZiB5b3UgcmVxdWlyZSB0aGUgdG9rZW4gdG8gaGF2ZSB0aGUgYWJpbGl0eSB0byBjcmVhdGUgY2hpbGQgdG9rZW5zLCB5b3Ugd2lsbCBuZWVkIHRvIHNldCB0aGlzIHZhbHVlIHRvIDAuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0b2tlblBlcmlvZCI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlRva2VuUGVyaW9kIFRoZSBwZXJpb2QsIGlmIGFueSwgdG8gc2V0IG9uIHRoZSB0b2tlbiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidG9rZW5Qb2xpY2llcyI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJUb2tlblBvbGljaWVzIExpc3Qgb2YgcG9saWNpZXMgdG8gZW5jb2RlIG9udG8gZ2VuZXJhdGVkIHRva2Vucy4gRGVwZW5kaW5nIG9uIHRoZSBhdXRoIG1ldGhvZCwgdGhpcyBsaXN0IG1heSBiZSBzdXBwbGVtZW50ZWQgYnkgdXNlci9ncm91cC9vdGhlciB2YWx1ZXMuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2tlblRUTCI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJUb2tlblRUTCBUaGUgaW5jcmVtZW50YWwgbGlmZXRpbWUgZm9yIGdlbmVyYXRlZCB0b2tlbnMuIFRoaXMgY3VycmVudCB2YWx1ZSBvZiB0aGlzIHdpbGwgYmUgcmVmZXJlbmNlZCBhdCByZW5ld2FsIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2tlblR5cGUiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiVGhlIHR5cGUgb2YgdG9rZW4gdGhhdCBzaG91bGQgYmUgZ2VuZXJhdGVkLiBDYW4gYmUgc2VydmljZSwgYmF0Y2gsIG9yIGRlZmF1bHQgdG8gdXNlIHRoZSBtb3VudCdzIHR1bmVkIGRlZmF1bHQgKHdoaWNoIHVubGVzcyBjaGFuZ2VkIHdpbGwgYmUgc2VydmljZSB0b2tlbnMpLiBGb3IgdG9rZW4gc3RvcmUgcm9sZXMsIHRoZXJlIGFyZSB0d28gYWRkaXRpb25hbCBwb3NzaWJpbGl0aWVzOiBkZWZhdWx0LXNlcnZpY2UgYW5kIGRlZmF1bHQtYmF0Y2ggd2hpY2ggc3BlY2lmeSB0aGUgdHlwZSB0byByZXR1cm4gdW5sZXNzIHRoZSBjbGllbnQgcmVxdWVzdHMgYSBkaWZmZXJlbnQgdHlwZSBhdCBnZW5lcmF0aW9uIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9LCJ1cmwiOnsiZGVmYXVsdCI6ImxkYXA6Ly8xMjcuMC4wLjEiLCJkZXNjcmlwdGlvbiI6IlVSTCBUaGUgTERBUCBzZXJ2ZXIgdG8gY29ubmVjdCB0by4gRXhhbXBsZXM6IGxkYXA6Ly9sZGFwLm15b3JnLmNvbSwgbGRhcHM6Ly9sZGFwLm15b3JnLmNvbTo2MzYuIE11bHRpcGxlIFVSTHMgY2FuIGJlIHNwZWNpZmllZCB3aXRoIGNvbW1hcywgZS5nLiBsZGFwOi8vbGRhcC5teW9yZy5jb20sbGRhcDovL2xkYXAyLm15b3JnLmNvbTsgdGhlc2Ugd2lsbCBiZSB0cmllZCBpbi1vcmRlci4iLCJ0eXBlIjoic3RyaW5nIn0sInVzZXJBdHRyIjp7ImRlZmF1bHQiOiJjbiIsImRlc2NyaXB0aW9uIjoiVXNlckF0dHIgQXR0cmlidXRlIG9uIHVzZXIgYXR0cmlidXRlIG9iamVjdCBtYXRjaGluZyB0aGUgdXNlcm5hbWUgcGFzc2VkIHdoZW4gYXV0aGVudGljYXRpbmcuIEV4YW1wbGVzOiBzQU1BY2NvdW50TmFtZSwgY24sIHVpZCIsInR5cGUiOiJzdHJpbmcifSwidXNlckROIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6IlVzZXJETiBCYXNlIEROIHVuZGVyIHdoaWNoIHRvIHBlcmZvcm0gdXNlciBzZWFyY2guIEV4YW1wbGU6IG91PVVzZXJzLGRjPWV4YW1wbGUsZGM9Y29tIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyRmlsdGVyIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6IlVzZXJGaWx0ZXIgQW4gb3B0aW9uYWwgTERBUCB1c2VyIHNlYXJjaCBmaWx0ZXIuIFRoZSB0ZW1wbGF0ZSBjYW4gYWNjZXNzIHRoZSBmb2xsb3dpbmcgY29udGV4dCB2YXJpYWJsZXM6IFVzZXJBdHRyLCBVc2VybmFtZS4gVGhlIGRlZmF1bHQgaXMgKHt7LlVzZXJBdHRyfX09e3suVXNlcm5hbWV9fSksIG9yICh7ey5Vc2VyQXR0cn19PXt7LlVzZXJuYW1lQC51cG5kb21haW59fSkgaWYgdXBuZG9tYWluIGlzIHNldC4iLCJ0eXBlIjoic3RyaW5nIn0sInVzZXJuYW1lQXNBbGlhcyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJVc2VybmFtZUFzQWxpYXMgSWYgc2V0IHRvIHRydWUsIGZvcmNlcyB0aGUgYXV0aCBtZXRob2QgdG8gdXNlIHRoZSB1c2VybmFtZSBwYXNzZWQgYnkgdGhlIHVzZXIgYXMgdGhlIGFsaWFzIG5hbWUuIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImNhc2VTZW5zaXRpdmVOYW1lcyIsInVybCJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkxEQVBBdXRoRW5naW5lQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIExEQVBBdXRoRW5naW5lQ29uZmlnIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7Iml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuIC0tLSBUaGlzIHN0cnVjdCBpcyBpbnRlbmRlZCBmb3IgZGlyZWN0IHVzZSBhcyBhbiBhcnJheSBhdCB0aGUgZmllbGQgcGF0aCAuc3RhdHVzLmNvbmRpdGlvbnMuICBGb3IgZXhhbXBsZSwgdHlwZSBGb29TdGF0dXMgc3RydWN0eyAgICAgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS4gICAgIC8vIEtub3duIC5zdGF0dXMuY29uZGl0aW9ucy50eXBlIGFyZTogXCJBdmFpbGFibGVcIiwgXCJQcm9ncmVzc2luZ1wiLCBhbmQgXCJEZWdyYWRlZFwiICAgICAvLyArcGF0Y2hNZXJnZUtleT10eXBlICAgICAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZSAgICAgLy8gK2xpc3RUeXBlPW1hcCAgICAgLy8gK2xpc3RNYXBLZXk9dHlwZSAgICAgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImAgXG4gICAgIC8vIG90aGVyIGZpZWxkcyB9IiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4gVGhpcyBzaG91bGQgYmUgd2hlbiB0aGUgdW5kZXJseWluZyBjb25kaXRpb24gY2hhbmdlZC4gIElmIHRoYXQgaXMgbm90IGtub3duLCB0aGVuIHVzaW5nIHRoZSB0aW1lIHdoZW4gdGhlIEFQSSBmaWVsZCBjaGFuZ2VkIGlzIGFjY2VwdGFibGUuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoibWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHRoZSB0cmFuc2l0aW9uLiBUaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi4gRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGUgLnN0YXR1cy5jb25kaXRpb25zW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlIHdpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgaW5zdGFuY2UuIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJyZWFzb24gY29udGFpbnMgYSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBpbmRpY2F0aW5nIHRoZSByZWFzb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uIFByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLCBhbmQgd2hldGhlciB0aGUgdmFsdWVzIGFyZSBjb25zaWRlcmVkIGEgZ3VhcmFudGVlZCBBUEkuIFRoZSB2YWx1ZSBzaG91bGQgYmUgYSBDYW1lbENhc2Ugc3RyaW5nLiBUaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS4gLS0tIE1hbnkgLmNvbmRpdGlvbi50eXBlIHZhbHVlcyBhcmUgY29uc2lzdGVudCBhY3Jvc3MgcmVzb3VyY2VzIGxpa2UgQXZhaWxhYmxlLCBidXQgYmVjYXVzZSBhcmJpdHJhcnkgY29uZGl0aW9ucyBjYW4gYmUgdXNlZnVsIChzZWUgLm5vZGUuc3RhdHVzLmNvbmRpdGlvbnMpLCB0aGUgYWJpbGl0eSB0byBkZWNvbmZsaWN0IGlzIGltcG9ydGFudC4gVGhlIHJlZ2V4IGl0IG1hdGNoZXMgaXMgKGRuczExMjNTdWJkb21haW5GbXQvKT8ocXVhbGlmaWVkTmFtZUZtdCkiLCJtYXhMZW5ndGgiOjMxNiwicGF0dGVybiI6Il4oW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKi8pPygoW0EtWmEtejAtOV1bLUEtWmEtejAtOV8uXSopP1tBLVphLXowLTldKSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LW1hcC1rZXlzIjpbInR5cGUiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6InBhc3N3b3JkcG9saWNpZXMucmVkaGF0Y29wLnJlZGhhdC5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoicmVkaGF0Y29wLnJlZGhhdC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJQYXNzd29yZFBvbGljeSIsImxpc3RLaW5kIjoiUGFzc3dvcmRQb2xpY3lMaXN0IiwicGx1cmFsIjoicGFzc3dvcmRwb2xpY2llcyIsInNpbmd1bGFyIjoicGFzc3dvcmRwb2xpY3kifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJQYXNzd29yZFBvbGljeSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgcGFzc293b3JkcG9saWNpZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQYXNzd29yZFBvbGljeVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQYXNzd29yZFBvbGljeSIsInByb3BlcnRpZXMiOnsiYXV0aGVudGljYXRpb24iOnsiZGVzY3JpcHRpb24iOiJBdXRoZW50aWNhdGlvbiBpcyB0aGUga3ViZSBhb3RoIGNvbmZpZ3VyYWl0b24gdG8gYmUgdXNlZCB0byBleGVjdXRlIHRoaXMgcmVxdWVzdCIsInByb3BlcnRpZXMiOnsibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIGlzIHRoZSBWYXVsdCBuYW1lc3BhY2UgdG8gYmUgdXNlZCBpbiBhbGwgdGhlIG9wZXJhdGlvbnMgd2l0aGluZyB0aGlzIGNvbm5lY3Rpb24vYXV0aGVudGljYXRpb24uIE9ubHkgYXZhaWxhYmxlIGluIFZhdWx0IEVudGVycHJpc2UuIiwidHlwZSI6InN0cmluZyJ9LCJwYXRoIjp7ImRlZmF1bHQiOiJrdWJlcm5ldGVzIiwiZGVzY3JpcHRpb24iOiJQYXRoIGlzIHRoZSBwYXRoIG9mIHRoZSByb2xlIHVzZWQgZm9yIHRoaXMga3ViZSBhdXRoIGF1dGhlbnRpY2F0aW9uLiBUaGUgb3BlcmF0b3Igd2lsbCB0cnkgdG8gYXV0aGVudGljYXRlIGF0IHtbbmFtZXNwYWNlL119YXV0aC97c3BlYy5wYXRofSIsInBhdHRlcm4iOiJeKD86Lz9bXFx3OzpAXHUwMDI2PVxcJC1cXC5cXCtdKikrLz8iLCJ0eXBlIjoic3RyaW5nIn0sInJvbGUiOnsiZGVzY3JpcHRpb24iOiJSb2xlIHRoZSByb2xlIHRvIGJlIHVzZWQgZHVyaW5nIGF1dGhlbnRpY2F0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJzZXJ2aWNlQWNjb3VudCI6eyJkZWZhdWx0Ijp7Im5hbWUiOiJkZWZhdWx0In0sImRlc2NyaXB0aW9uIjoiU2VydmljZUFjY291bnQgaXMgdGhlIHNlcnZpY2UgYWNjb3VudCB1c2VkIGZvciB0aGUga3ViZSBhdXRoIGF1dGhlbnRpY2F0aW9uIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIFRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwYXNzd29yZFBvbGljeSI6eyJkZXNjcmlwdGlvbiI6IlBhc3N3b3JkUG9saWN5ICBpcyBhIFZhdWx0IHBhc3N3b3JkIHBvbGljeSAoaHR0cHM6Ly93d3cudmF1bHRwcm9qZWN0LmlvL2RvY3MvY29uY2VwdHMvcGFzc3dvcmQtcG9saWNpZXMpIGV4cHJlc3NlZCBpbiBIQ0wgbGFuZ3VhZ2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQb2xpY3lTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUG9saWN5IiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7Iml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuIC0tLSBUaGlzIHN0cnVjdCBpcyBpbnRlbmRlZCBmb3IgZGlyZWN0IHVzZSBhcyBhbiBhcnJheSBhdCB0aGUgZmllbGQgcGF0aCAuc3RhdHVzLmNvbmRpdGlvbnMuICBGb3IgZXhhbXBsZSwgdHlwZSBGb29TdGF0dXMgc3RydWN0eyAgICAgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS4gICAgIC8vIEtub3duIC5zdGF0dXMuY29uZGl0aW9ucy50eXBlIGFyZTogXCJBdmFpbGFibGVcIiwgXCJQcm9ncmVzc2luZ1wiLCBhbmQgXCJEZWdyYWRlZFwiICAgICAvLyArcGF0Y2hNZXJnZUtleT10eXBlICAgICAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZSAgICAgLy8gK2xpc3RUeXBlPW1hcCAgICAgLy8gK2xpc3RNYXBLZXk9dHlwZSAgICAgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImAgXG4gICAgIC8vIG90aGVyIGZpZWxkcyB9IiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4gVGhpcyBzaG91bGQgYmUgd2hlbiB0aGUgdW5kZXJseWluZyBjb25kaXRpb24gY2hhbmdlZC4gIElmIHRoYXQgaXMgbm90IGtub3duLCB0aGVuIHVzaW5nIHRoZSB0aW1lIHdoZW4gdGhlIEFQSSBmaWVsZCBjaGFuZ2VkIGlzIGFjY2VwdGFibGUuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoibWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHRoZSB0cmFuc2l0aW9uLiBUaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi4gRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGUgLnN0YXR1cy5jb25kaXRpb25zW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlIHdpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgaW5zdGFuY2UuIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJyZWFzb24gY29udGFpbnMgYSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBpbmRpY2F0aW5nIHRoZSByZWFzb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uIFByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLCBhbmQgd2hldGhlciB0aGUgdmFsdWVzIGFyZSBjb25zaWRlcmVkIGEgZ3VhcmFudGVlZCBBUEkuIFRoZSB2YWx1ZSBzaG91bGQgYmUgYSBDYW1lbENhc2Ugc3RyaW5nLiBUaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS4gLS0tIE1hbnkgLmNvbmRpdGlvbi50eXBlIHZhbHVlcyBhcmUgY29uc2lzdGVudCBhY3Jvc3MgcmVzb3VyY2VzIGxpa2UgQXZhaWxhYmxlLCBidXQgYmVjYXVzZSBhcmJpdHJhcnkgY29uZGl0aW9ucyBjYW4gYmUgdXNlZnVsIChzZWUgLm5vZGUuc3RhdHVzLmNvbmRpdGlvbnMpLCB0aGUgYWJpbGl0eSB0byBkZWNvbmZsaWN0IGlzIGltcG9ydGFudC4gVGhlIHJlZ2V4IGl0IG1hdGNoZXMgaXMgKGRuczExMjNTdWJkb21haW5GbXQvKT8ocXVhbGlmaWVkTmFtZUZtdCkiLCJtYXhMZW5ndGgiOjMxNiwicGF0dGVybiI6Il4oW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKi8pPygoW0EtWmEtejAtOV1bLUEtWmEtejAtOV8uXSopP1tBLVphLXowLTldKSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LW1hcC1rZXlzIjpbInR5cGUiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6InBvbGljaWVzLnJlZGhhdGNvcC5yZWRoYXQuaW8ifSwic3BlYyI6eyJncm91cCI6InJlZGhhdGNvcC5yZWRoYXQuaW8iLCJuYW1lcyI6eyJraW5kIjoiUG9saWN5IiwibGlzdEtpbmQiOiJQb2xpY3lMaXN0IiwicGx1cmFsIjoicG9saWNpZXMiLCJzaW5ndWxhciI6InBvbGljeSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBvbGljeSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgcG9saWNpZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQb2xpY3lTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUG9saWN5IiwicHJvcGVydGllcyI6eyJhdXRoZW50aWNhdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIGlzIHRoZSBrdWJlIGFvdGggY29uZmlndXJhaXRvbiB0byBiZSB1c2VkIHRvIGV4ZWN1dGUgdGhpcyByZXF1ZXN0IiwicHJvcGVydGllcyI6eyJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2UgaXMgdGhlIFZhdWx0IG5hbWVzcGFjZSB0byBiZSB1c2VkIGluIGFsbCB0aGUgb3BlcmF0aW9ucyB3aXRoaW5nIHRoaXMgY29ubmVjdGlvbi9hdXRoZW50aWNhdGlvbi4gT25seSBhdmFpbGFibGUgaW4gVmF1bHQgRW50ZXJwcmlzZS4iLCJ0eXBlIjoic3RyaW5nIn0sInBhdGgiOnsiZGVmYXVsdCI6Imt1YmVybmV0ZXMiLCJkZXNjcmlwdGlvbiI6IlBhdGggaXMgdGhlIHBhdGggb2YgdGhlIHJvbGUgdXNlZCBmb3IgdGhpcyBrdWJlIGF1dGggYXV0aGVudGljYXRpb24uIFRoZSBvcGVyYXRvciB3aWxsIHRyeSB0byBhdXRoZW50aWNhdGUgYXQge1tuYW1lc3BhY2UvXX1hdXRoL3tzcGVjLnBhdGh9IiwicGF0dGVybiI6Il4oPzovP1tcXHc7OkBcdTAwMjY9XFwkLVxcLlxcK10qKSsvPyIsInR5cGUiOiJzdHJpbmcifSwicm9sZSI6eyJkZXNjcmlwdGlvbiI6IlJvbGUgdGhlIHJvbGUgdG8gYmUgdXNlZCBkdXJpbmcgYXV0aGVudGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sInNlcnZpY2VBY2NvdW50Ijp7ImRlZmF1bHQiOnsibmFtZSI6ImRlZmF1bHQifSwiZGVzY3JpcHRpb24iOiJTZXJ2aWNlQWNjb3VudCBpcyB0aGUgc2VydmljZSBhY2NvdW50IHVzZWQgZm9yIHRoZSBrdWJlIGF1dGggYXV0aGVudGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInBvbGljeSI6eyJkZXNjcmlwdGlvbiI6IlBvbGljeSBpcyBhIFZhdWx0IHBvbGljeSBleHByZXNzZWQgaW4gSENMIGxhbmd1YWdlLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUG9saWN5U3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFBvbGljeSIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLiAtLS0gVGhpcyBzdHJ1Y3QgaXMgaW50ZW5kZWQgZm9yIGRpcmVjdCB1c2UgYXMgYW4gYXJyYXkgYXQgdGhlIGZpZWxkIHBhdGggLnN0YXR1cy5jb25kaXRpb25zLiAgRm9yIGV4YW1wbGUsIHR5cGUgRm9vU3RhdHVzIHN0cnVjdHsgICAgIC8vIFJlcHJlc2VudHMgdGhlIG9ic2VydmF0aW9ucyBvZiBhIGZvbydzIGN1cnJlbnQgc3RhdGUuICAgICAvLyBLbm93biAuc3RhdHVzLmNvbmRpdGlvbnMudHlwZSBhcmU6IFwiQXZhaWxhYmxlXCIsIFwiUHJvZ3Jlc3NpbmdcIiwgYW5kIFwiRGVncmFkZWRcIiAgICAgLy8gK3BhdGNoTWVyZ2VLZXk9dHlwZSAgICAgLy8gK3BhdGNoU3RyYXRlZ3k9bWVyZ2UgICAgIC8vICtsaXN0VHlwZT1tYXAgICAgIC8vICtsaXN0TWFwS2V5PXR5cGUgICAgIENvbmRpdGlvbnMgW11tZXRhdjEuQ29uZGl0aW9uIGBqc29uOlwiY29uZGl0aW9ucyxvbWl0ZW1wdHlcIiBwYXRjaFN0cmF0ZWd5OlwibWVyZ2VcIiBwYXRjaE1lcmdlS2V5OlwidHlwZVwiIHByb3RvYnVmOlwiYnl0ZXMsMSxyZXAsbmFtZT1jb25kaXRpb25zXCJgIFxuICAgICAvLyBvdGhlciBmaWVsZHMgfSIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIFRoaXMgc2hvdWxkIGJlIHdoZW4gdGhlIHVuZGVybHlpbmcgY29uZGl0aW9uIGNoYW5nZWQuICBJZiB0aGF0IGlzIG5vdCBrbm93biwgdGhlbiB1c2luZyB0aGUgdGltZSB3aGVuIHRoZSBBUEkgZmllbGQgY2hhbmdlZCBpcyBhY2NlcHRhYmxlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB0aGUgdHJhbnNpdGlvbi4gVGhpcyBtYXkgYmUgYW4gZW1wdHkgc3RyaW5nLiIsIm1heExlbmd0aCI6MzI3NjgsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRHZW5lcmF0aW9uIHJlcHJlc2VudHMgdGhlIC5tZXRhZGF0YS5nZW5lcmF0aW9uIHRoYXQgdGhlIGNvbmRpdGlvbiB3YXMgc2V0IGJhc2VkIHVwb24uIEZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZSB3aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGluc3RhbmNlLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGNvbnRhaW5zIGEgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgaW5kaWNhdGluZyB0aGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiBQcm9kdWNlcnMgb2Ygc3BlY2lmaWMgY29uZGl0aW9uIHR5cGVzIG1heSBkZWZpbmUgZXhwZWN0ZWQgdmFsdWVzIGFuZCBtZWFuaW5ncyBmb3IgdGhpcyBmaWVsZCwgYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLiBUaGUgdmFsdWUgc2hvdWxkIGJlIGEgQ2FtZWxDYXNlIHN0cmluZy4gVGhpcyBmaWVsZCBtYXkgbm90IGJlIGVtcHR5LiIsIm1heExlbmd0aCI6MTAyNCwibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXltBLVphLXpdKFtBLVphLXowLTlfLDpdKltBLVphLXowLTlfXSk/JCIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiBUcnVlLCBGYWxzZSwgVW5rbm93bi4iLCJlbnVtIjpbIlRydWUiLCJGYWxzZSIsIlVua25vd24iXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiBjb25kaXRpb24gaW4gQ2FtZWxDYXNlIG9yIGluIGZvby5leGFtcGxlLmNvbS9DYW1lbENhc2UuIC0tLSBNYW55IC5jb25kaXRpb24udHlwZSB2YWx1ZXMgYXJlIGNvbnNpc3RlbnQgYWNyb3NzIHJlc291cmNlcyBsaWtlIEF2YWlsYWJsZSwgYnV0IGJlY2F1c2UgYXJiaXRyYXJ5IGNvbmRpdGlvbnMgY2FuIGJlIHVzZWZ1bCAoc2VlIC5ub2RlLnN0YXR1cy5jb25kaXRpb25zKSwgdGhlIGFiaWxpdHkgdG8gZGVjb25mbGljdCBpcyBpbXBvcnRhbnQuIFRoZSByZWdleCBpdCBtYXRjaGVzIGlzIChkbnMxMTIzU3ViZG9tYWluRm10Lyk/KHF1YWxpZmllZE5hbWVGbXQpIiwibWF4TGVuZ3RoIjozMTYsInBhdHRlcm4iOiJeKFthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KFxcLlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KSovKT8oKFtBLVphLXowLTldWy1BLVphLXowLTlfLl0qKT9bQS1aYS16MC05XSkkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwibWVzc2FnZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJ0eXBlIl0sIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJtYXAifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJ2YXVsdC1jb25maWctb3BlcmF0b3IifSwibmFtZSI6InZhdWx0LWNvbmZpZy1vcGVyYXRvci1jb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJiZWFyZXJUb2tlbkZpbGUiOiIvdmFyL3J1bi9zZWNyZXRzL2t1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvdG9rZW4iLCJpbnRlcnZhbCI6IjMwcyIsInBvcnQiOiJodHRwcyIsInNjaGVtZSI6Imh0dHBzIiwidGxzQ29uZmlnIjp7ImNhIjp7InNlY3JldCI6eyJrZXkiOiJ0bHMuY3J0IiwibmFtZSI6InZhdWx0LWNvbmZpZy1vcGVyYXRvci1jZXJ0cyIsIm9wdGlvbmFsIjpmYWxzZX19LCJzZXJ2ZXJOYW1lIjoidmF1bHQtY29uZmlnLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UudmF1bHQtY29uZmlnLW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJ2YXVsdC1jb25maWctb3BlcmF0b3IifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6InZhdWx0LWNvbmZpZy1vcGVyYXRvci1jZXJ0cyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJ2YXVsdC1jb25maWctb3BlcmF0b3IifSwibmFtZSI6InZhdWx0LWNvbmZpZy1vcGVyYXRvci1jb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoidmF1bHQtY29uZmlnLW9wZXJhdG9yIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogM2Q3ZDNhNjIucmVkaGF0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJ2YXVsdC1jb25maWctb3BlcmF0b3ItbWFuYWdlci1jb25maWcifX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoidmF1bHQtY29uZmlnLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ2YXVsdC1jb25maWctb3BlcmF0b3ItcHJvbWV0aGV1cy1rOHMifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImVuZHBvaW50cyIsInBvZHMiLCJzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoidmF1bHQtY29uZmlnLW9wZXJhdG9yLXByb21ldGhldXMtazhzIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoidmF1bHQtY29uZmlnLW9wZXJhdG9yLXByb21ldGhldXMtazhzIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoicHJvbWV0aGV1cy1rOHMiLCJuYW1lc3BhY2UiOiJvcGVuc2hpZnQtbW9uaXRvcmluZyJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoidmF1bHQtY29uZmlnLW9wZXJhdG9yLXdlYmhvb2stc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJwb3J0Ijo0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6OTQ0M31dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoidmF1bHQtY29uZmlnLW9wZXJhdG9yIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/openshift-community-operators/vault-config-operator@sha256:6790d8efa0fd1a03c68ef19a5306826fd8ecdebc38747ef3f4263d7ec425eb46
    name: ""
  - image: quay.io/redhat-cop/kube-rbac-proxy@sha256:c68135620167c41e3d9f6c1d2ca1eb8fa24312b86186d09b8010656b9d25fb47
    name: quay.io/redhat-cop/kube-rbac-proxy
  - image: quay.io/redhat-cop/vault-config-operator@sha256:c800a7ad7588ddd836a7e9f170ed9d03277287a7fb999c7cc6afb8ea49b65f7e
    name: quay.io/redhat-cop/vault-config-operator
schema: olm.bundle
