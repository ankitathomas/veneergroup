image: quay.io/openshift-community-operators/awss3-operator-registry@sha256:9ab3a2cd00b8704a8bae8e9b75f2a95d0a3e60fa3cb52589db8a4e7641b73027
name: awss3operator.1.0.1
package: awss3-operator-registry
properties:
  - type: olm.gvk.required
    value:
      group: objectbucket.io
      kind: ObjectBucket
      version: v1alpha1
  - type: olm.gvk.required
    value:
      group: objectbucket.io
      kind: ObjectBucketClaim
      version: v1alpha1
  - type: olm.package
    value:
      packageName: awss3-operator-registry
      version: 1.0.1
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/openshift-community-operators/awss3-operator-registry@sha256:9ab3a2cd00b8704a8bae8e9b75f2a95d0a3e60fa3cb52589db8a4e7641b73027
    name: ""
  - image: quay.io/screeley44/aws-s3-provisioner:v1.0.0
    name: ""
schema: olm.bundle
