image: quay.io/openshift-community-operators/ack-eks-controller@sha256:1789b6bc3df7c154730c692bb25ed9a3ebcf00028aa9fb3a318a5adcd8fb45d6
name: ack-eks-controller.v0.1.3
package: ack-eks-controller
properties:
  - type: olm.gvk
    value:
      group: eks.services.k8s.aws
      kind: Addon
      version: v1alpha1
  - type: olm.gvk
    value:
      group: eks.services.k8s.aws
      kind: Cluster
      version: v1alpha1
  - type: olm.gvk
    value:
      group: eks.services.k8s.aws
      kind: FargateProfile
      version: v1alpha1
  - type: olm.gvk
    value:
      group: eks.services.k8s.aws
      kind: Nodegroup
      version: v1alpha1
  - type: olm.package
    value:
      packageName: ack-eks-controller
      version: 0.1.3
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYWNrLWVrcy1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3Nwb3J0IiwicG9ydCI6ODA4MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cCJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXIifSwidHlwZSI6Ik5vZGVQb3J0In0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJhY2stZWtzLXJlYWRlciJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImVrcy5zZXJ2aWNlcy5rOHMuYXdzIl0sInJlc291cmNlcyI6WyJhZGRvbnMiLCJjbHVzdGVycyIsImZhcmdhdGVwcm9maWxlcyIsIm5vZGVncm91cHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJhY2stZWtzLXdyaXRlciJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImVrcy5zZXJ2aWNlcy5rOHMuYXdzIl0sInJlc291cmNlcyI6WyJhZGRvbnMiLCJjbHVzdGVycyIsImZhcmdhdGVwcm9maWxlcyIsIm5vZGVncm91cHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiZWtzLnNlcnZpY2VzLms4cy5hd3MiXSwicmVzb3VyY2VzIjpbImFkZG9ucyIsImNsdXN0ZXJzIiwiZmFyZ2F0ZXByb2ZpbGVzIiwibm9kZWdyb3VwcyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfV19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: public.ecr.aws/aws-controllers-k8s/eks-controller:v0.1.3
    name: ""
  - image: quay.io/openshift-community-operators/ack-eks-controller@sha256:1789b6bc3df7c154730c692bb25ed9a3ebcf00028aa9fb3a318a5adcd8fb45d6
    name: ""
schema: olm.bundle
