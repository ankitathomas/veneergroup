image: quay.io/openshift-community-operators/trivy-operator@sha256:fa34ac05f553d7107efbe045c105617534f53ddc8f9e5cf8ef67993944bac02d
name: trivy-operator.v2.3.0
package: trivy-operator
properties:
  - type: olm.gvk
    value:
      group: trivy-operator.devopstales.io
      kind: NamespaceScanner
      version: v1
  - type: olm.package
    value:
      packageName: trivy-operator
      version: 2.3.0
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Im5hbWVzcGFjZS1zY2FubmVycy50cml2eS1vcGVyYXRvci5kZXZvcHN0YWxlcy5pbyJ9LCJzcGVjIjp7ImNvbnZlcnNpb24iOnsic3RyYXRlZ3kiOiJOb25lIn0sImdyb3VwIjoidHJpdnktb3BlcmF0b3IuZGV2b3BzdGFsZXMuaW8iLCJuYW1lcyI6eyJraW5kIjoiTmFtZXNwYWNlU2Nhbm5lciIsImxpc3RLaW5kIjoiTmFtZXNwYWNlU2Nhbm5lckxpc3QiLCJwbHVyYWwiOiJuYW1lc3BhY2Utc2Nhbm5lcnMiLCJzaG9ydE5hbWVzIjpbIm5zLXNjYW4iXSwic2luZ3VsYXIiOiJuYW1lc3BhY2Utc2Nhbm5lciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBTZWxlY3RvciBmb3IgcG9kIHNjYW5uaW5nIiwianNvblBhdGgiOiIuc3BlYy5uYW1lc3BhY2Vfc2VsZWN0b3IiLCJuYW1lIjoiTmFtZXNwYWNlU2VsZWN0b3IiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6ImNyb250YWIgdmFsdWUiLCJqc29uUGF0aCI6Ii5zcGVjLmNyb250YWIiLCJuYW1lIjoiQ3JvbnRhYiIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiQXMgcmV0dXJuZWQgZnJvbSB0aGUgaGFuZGxlciAoc29tZXRpbWVzKS4iLCJqc29uUGF0aCI6Ii5zdGF0dXMuY3JlYXRlX2ZuLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJjbHVzdGVyV2lkZSI6eyJ0eXBlIjoic3RyaW5nIn0sImNyb250YWIiOnsicGF0dGVybiI6Il4oXFxkK3xcXCopKC9cXGQrKT8oXFxzKyhcXGQrfFxcKikoL1xcZCspPyl7NH0kIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2Vfc2VsZWN0b3IiOnsidHlwZSI6InN0cmluZyJ9LCJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJ0cml2eS1vcGVyYXRvciJ9LCJuYW1lIjoidHJpdnktb3BlcmF0b3IifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpYyIsInBvcnQiOjkxMTUsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6OTExNX1dLCJzZWxlY3RvciI6eyJhcHAiOiJ0cml2eS1vcGVyYXRvciJ9fX0=
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: devopstales/trivy-operator:2.3
    name: ""
  - image: quay.io/openshift-community-operators/trivy-operator@sha256:fa34ac05f553d7107efbe045c105617534f53ddc8f9e5cf8ef67993944bac02d
    name: ""
schema: olm.bundle
