image: quay.io/openshift-community-operators/snapscheduler@sha256:19ce7e439bcf4a8c3a0ede07c830ca9a64b7b927864a12457ba70ba9e43ab172
name: snapscheduler.v3.0.0
package: snapscheduler
properties:
  - type: olm.gvk
    value:
      group: snapscheduler.backube
      kind: SnapshotSchedule
      version: v1
  - type: olm.package
    value:
      packageName: snapscheduler
      version: 3.0.0
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoic25hcHNjaGVkdWxlci1jb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogY2QyZDhlOWYuYmFja3ViZVxuIn0sImtpbmQiOiJDb25maWdNYXAiLCJtZXRhZGF0YSI6eyJuYW1lIjoic25hcHNjaGVkdWxlci1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoic25hcHNjaGVkdWxlci1tZXRyaWNzLXJlYWRlciJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIl0sInZlcmJzIjpbImdldCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6InNuYXBzaG90c2NoZWR1bGVzLnNuYXBzY2hlZHVsZXIuYmFja3ViZSJ9LCJzcGVjIjp7Imdyb3VwIjoic25hcHNjaGVkdWxlci5iYWNrdWJlIiwibmFtZXMiOnsia2luZCI6IlNuYXBzaG90U2NoZWR1bGUiLCJsaXN0S2luZCI6IlNuYXBzaG90U2NoZWR1bGVMaXN0IiwicGx1cmFsIjoic25hcHNob3RzY2hlZHVsZXMiLCJzaW5ndWxhciI6InNuYXBzaG90c2NoZWR1bGUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5zY2hlZHVsZSIsIm5hbWUiOiJTY2hlZHVsZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucmV0ZW50aW9uLmV4cGlyZXMiLCJuYW1lIjoiTWF4IGFnZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucmV0ZW50aW9uLm1heENvdW50IiwibmFtZSI6Ik1heCBudW0iLCJ0eXBlIjoiaW50ZWdlciJ9LHsianNvblBhdGgiOiIuc3BlYy5kaXNhYmxlZCIsIm5hbWUiOiJEaXNhYmxlZCIsInR5cGUiOiJib29sZWFuIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMubmV4dFNuYXBzaG90VGltZSIsIm5hbWUiOiJOZXh0IHNuYXBzaG90IiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlNuYXBzaG90U2NoZWR1bGUgZGVmaW5lcyBhIHNjaGVkdWxlIGZvciB0YWtpbmcgYXV0b21hdGVkIHNuYXBzaG90cyBvZiBQVkMocykiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNuYXBzaG90U2NoZWR1bGVTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgU25hcHNob3RTY2hlZHVsZSIsInByb3BlcnRpZXMiOnsiY2xhaW1TZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgZmlsdGVyIHRvIHNlbGVjdCB3aGljaCBQVkNzIHRvIHNuYXBzaG90IHZpYSB0aGlzIHNjaGVkdWxlIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkaXNhYmxlZCI6eyJkZXNjcmlwdGlvbiI6IkluZGljYXRlcyB0aGF0IHRoaXMgc2NoZWR1bGUgc2hvdWxkIGJlIHRlbXBvcmFyaWx5IGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifSwicmV0ZW50aW9uIjp7ImRlc2NyaXB0aW9uIjoiUmV0ZW50aW9uIGRldGVybWluZXMgaG93IGxvbmcgdGhpcyBzY2hlZHVsZSdzIHNuYXBzaG90cyB3aWxsIGJlIGtlcHQuIiwicHJvcGVydGllcyI6eyJleHBpcmVzIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGxlbmd0aCBvZiB0aW1lICh0aW1lLkR1cmF0aW9uKSBhZnRlciB3aGljaCBhIGdpdmVuIFNuYXBzaG90IHdpbGwgYmUgZGVsZXRlZC4iLCJwYXR0ZXJuIjoiXlxcZCsoaHxtfHMpJCIsInR5cGUiOiJzdHJpbmcifSwibWF4Q291bnQiOnsiZGVzY3JpcHRpb24iOiJUaGUgbWF4aW11bSBudW1iZXIgb2Ygc25hcHNob3RzIHRvIHJldGFpbiBwZXIgUFZDIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGlzIGEgQ3JvbnNwZWMgc3BlY2lmeWluZyB3aGVuIHNuYXBzaG90cyBzaG91bGQgYmUgdGFrZW4uIFNlZSBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9uIGZvciBhIGRlc2NyaXB0aW9uIG9mIHRoZSBmb3JtYXQuIiwicGF0dGVybiI6Il4oKFxcZCt8XFwqKSgvXFxkKyk/KFxccysoXFxkK3xcXCopKC9cXGQrKT8pezR9fEAoaG91cmx5fGRhaWx5fHdlZWtseXxtb250aGx5fHllYXJseSkpJCIsInR5cGUiOiJzdHJpbmcifSwic25hcHNob3RUZW1wbGF0ZSI6eyJkZXNjcmlwdGlvbiI6IkEgdGVtcGxhdGUgdG8gY3VzdG9taXplIHRoZSBTbmFwc2hvdHMuIiwicHJvcGVydGllcyI6eyJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBsYWJlbHMgdGhhdCBzaG91bGQgYmUgYWRkZWQgdG8gZWFjaCBTbmFwc2hvdCBjcmVhdGVkIGJ5IHRoaXMgc2NoZWR1bGUuIiwidHlwZSI6Im9iamVjdCJ9LCJzbmFwc2hvdENsYXNzTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBWb2x1bWVTbmFwc2hvdENsYXNzIHRvIGJlIHVzZWQgd2hlbiBjcmVhdGluZyBTbmFwc2hvdHMuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTbmFwc2hvdFNjaGVkdWxlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNuYXBzaG90U2NoZWR1bGUiLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIGlzIGEgbGlzdCBvZiBjb25kaXRpb25zIHJlbGF0ZWQgdG8gb3BlcmF0b3IgcmVjb25jaWxpYXRpb24uIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb24gcmVwcmVzZW50cyB0aGUgc3RhdGUgb2YgdGhlIG9wZXJhdG9yJ3MgcmVjb25jaWxpYXRpb24gZnVuY3Rpb25hbGl0eS4iLCJwcm9wZXJ0aWVzIjp7Imxhc3RIZWFydGJlYXRUaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25UeXBlIGlzIHRoZSBzdGF0ZSBvZiB0aGUgb3BlcmF0b3IncyByZWNvbmNpbGlhdGlvbiBmdW5jdGlvbmFsaXR5LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibGFzdFNuYXBzaG90VGltZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB0aW1lIG9mIHRoZSBtb3N0IHJlY2VudCBzbmFwc2hvdCB0YWtlbiBieSB0aGlzIHNjaGVkdWxlIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJuZXh0U25hcHNob3RUaW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHRpbWUgb2YgdGhlIG5leHQgc2NoZWR1bGVkIHNuYXBzaG90IiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: quay.io/backube/snapscheduler:3.0.0
    name: ""
  - image: quay.io/brancz/kube-rbac-proxy:v0.11.0
    name: ""
  - image: quay.io/openshift-community-operators/snapscheduler@sha256:19ce7e439bcf4a8c3a0ede07c830ca9a64b7b927864a12457ba70ba9e43ab172
    name: ""
schema: olm.bundle
